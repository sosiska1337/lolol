

namespace O {
	namespace BaseNetworkable {
		constexpr auto JustCreatedk__BackingField = 0x18;
		constexpr auto entityDestroy = 0x20;
		constexpr auto postNetworkUpdateComponents = 0x28;
		constexpr auto parentEntity = 0x30;
		constexpr auto children = 0x40;
		constexpr auto canTriggerParent = 0x48;
		constexpr auto prefabID = 0x4c;
		constexpr auto globalBroadcast = 0x50;
		constexpr auto net = 0x58;
		constexpr auto IsDestroyedk__BackingField = 0x60;
		constexpr auto _prefabName = 0x68;
		constexpr auto _prefabNameWithoutExtension = 0x70;

		constexpr auto get_JustCreated = 0x95b2d0;
		constexpr auto set_JustCreated = 0x95b2f0;
		constexpr auto ClientSpawn = 0xa2c400;
		constexpr auto ClientOnEnable = 0xa2c380;
		constexpr auto ClientInit = 0xa2c190;
		constexpr auto OnNetworkUpdate = 0xa2d6b0;
		constexpr auto PreNetworkUpdate = 0x3628c0;
		constexpr auto PostNetworkUpdate = 0x3628c0;
		constexpr auto ShouldDestroyWithGroup = 0x4d1bf0;
		constexpr auto ShouldDestroyImmediately = 0x498ad0;
		constexpr auto NetworkDestroy = 0xa2d240;
		constexpr auto DoClientDestroy = 0xa2c7d0;
		constexpr auto DoNetworkDestroy = 0x3628c0;
		constexpr auto BroadcastOnPostNetworkUpdate = 0xa2bf70;
		constexpr auto PostProcess = 0xa2d830;
		constexpr auto GetParentEntity = 0xa2cb70;
		constexpr auto HasParent = 0xa2cb80;
		constexpr auto AddChild = 0xa2bee0;
		constexpr auto OnChildAdded = 0x3628c0;
		constexpr auto RemoveChild = 0xa2d8b0;
		constexpr auto OnChildRemoved = 0x3628c0;
		constexpr auto get_gameManager = 0xa2dcf0;
		constexpr auto get_prefabAttribute = 0xa2dd50;
		constexpr auto get_IsDestroyed = 0xa2dbd0;
		constexpr auto set_IsDestroyed = 0x70afb0;
		constexpr auto get_PrefabName = 0xa2dbe0;
		constexpr auto get_ShortPrefabName = 0xa2dc60;
		constexpr auto GetNetworkPosition = 0x82bb00;
		constexpr auto GetNetworkRotation = 0xa2cb30;
		constexpr auto InvokeString = 0xa2cb90;
		constexpr auto LookupPrefab = 0xa2d1a0;
		constexpr auto EqualNetID = 0xa2cae0;
		constexpr auto ResetState = 0xa2d920;
		constexpr auto InitShared = 0x3628c0;
		constexpr auto PreInitShared = 0x3628c0;
		constexpr auto PostInitShared = 0x3628c0;
		constexpr auto DestroyShared = 0x3628c0;
		constexpr auto OnNetworkGroupEnter = 0x3628c0;
		constexpr auto OnNetworkGroupLeave = 0x3628c0;
		constexpr auto OnNetworkGroupChange = 0xa2d570;
		constexpr auto OnNetworkSubscribersEnter = 0x3628c0;
		constexpr auto OnNetworkSubscribersLeave = 0x3628c0;
		constexpr auto EntityDestroy = 0xa2c9f0;
		constexpr auto DoEntityDestroy = 0xa2c890;
		constexpr auto SpawnShared = 0xa2d970;
		constexpr auto Load = 0xa2cde0;
		constexpr auto get_isServer = 0x498ad0;
		constexpr auto get_isClient = 0x4d1bf0;
		constexpr auto OnRpcMessage = 0x498ad0;
		constexpr auto ctor = 0xa2db30;
		constexpr auto cctor = 0xa2da80;
		};

	namespace BasePlayer {
		constexpr auto __menuOption_Climb = 0x240;
		constexpr auto __menuOption_Drink = 0x298;
		constexpr auto __menuOption_InviteToTeam = 0x2f0;
		constexpr auto __menuOption_Menu_AssistPlayer = 0x348;
		constexpr auto __menuOption_Menu_LootPlayer = 0x3a0;
		constexpr auto __menuOption_Promote = 0x3f8;
		constexpr auto __menuOption_SaltWater = 0x450;
		constexpr auto lastOpenSoundPlay = 0x4a8;
		constexpr auto currentViewMode = 0x4ac;
		constexpr auto selectedViewMode = 0x4b0;
		constexpr auto lastRevivePoint = 0x4b4;
		constexpr auto lastReviveDirection = 0x4c0;
		constexpr auto playerModel = 0x4d0;
		constexpr auto Frozen = 0x4d8;
		constexpr auto voiceRecorder = 0x4e0;
		constexpr auto voiceSpeaker = 0x4e8;
		constexpr auto input = 0x4f0;
		constexpr auto movement = 0x4f8;
		constexpr auto collision = 0x500;
		constexpr auto emptyState = 0x8;
		constexpr auto _lookingAt = 0x508;
		constexpr auto _lookingAtEntity = 0x510;
		constexpr auto _lookingAtCollider = 0x518;
		constexpr auto lookingAtPointk__BackingField = 0x520;
		constexpr auto wakeTime = 0x52c;
		constexpr auto needsClothesRebuild = 0x530;
		constexpr auto wasSleeping = 0x531;
		constexpr auto wokeUpBefore = 0x532;
		constexpr auto wasDead = 0x533;
		constexpr auto lastClothesHash = 0x534;
		constexpr auto visiblePlayerList = 0x10;
		constexpr auto craftMode = 0x18;
		constexpr auto IsWearingDiveGogglesk__BackingField = 0x538;
		constexpr auto GestureViewModel = 0x540;
		constexpr auto timeSinceUpdatedLookingAt = 0x548;
		constexpr auto nextTopologyTestTime = 0x54c;
		constexpr auto usePressTime = 0x550;
		constexpr auto useHeldTime = 0x554;
		constexpr auto lookingAtTest = 0x558;
		constexpr auto lastDeathTimeClient = 0x1c;
		constexpr auto cachedWaterDrinkingPoint = 0x560;
		constexpr auto gestureList = 0x570;
		constexpr auto gestureFinishedTime = 0x578;
		constexpr auto blockHeldInputTimer = 0x57c;
		constexpr auto currentGesture = 0x580;
		constexpr auto disabledHeldEntity = 0x588;
		constexpr auto nextGestureMenuOpenTime = 0x590;
		constexpr auto lastGestureCancel = 0x594;
		constexpr auto client_lastHelloTime = 0x598;
		constexpr auto currentTeam = 0x5a0;
		constexpr auto MaxTeamSizeToast = 0x20;
		constexpr auto clientTeam = 0x5a8;
		constexpr auto lastReceivedTeamTime = 0x5b0;
		constexpr auto lastPresenceTeamId = 0x5b8;
		constexpr auto lastPresenceTeamSize = 0x5c0;
		constexpr auto playerGroupKey = 0x5c8;
		constexpr auto playerGroupSizeKey = 0x5d0;
		constexpr auto clActiveItem = 0x5d8;
		constexpr auto ClientCurrentMapNote = 0x5e0;
		constexpr auto ClientCurrentDeathNote = 0x5e8;
		constexpr auto missions = 0x5f0;
		constexpr auto _activeMission = 0x5f8;
		constexpr auto modelState = 0x600;
		constexpr auto mounted = 0x608;
		constexpr auto nextSeatSwapTime = 0x618;
		constexpr auto PetEntity = 0x620;
		constexpr auto lastPetCommandIssuedTime = 0x628;
		constexpr auto PetPrefabID = 0x62c;
		constexpr auto PetID = 0x630;
		constexpr auto PetWheelHasBeenOpened = 0x28;
		constexpr auto cachedBuildingPrivilegeTime = 0x634;
		constexpr auto cachedBuildingPrivilege = 0x638;
		constexpr auto maxProjectileID = 0x640;
		constexpr auto lastUpdateTime = 0x644;
		constexpr auto cachedThreatLevel = 0x648;
		constexpr auto serverTickRate = 0x64c;
		constexpr auto clientTickRate = 0x650;
		constexpr auto serverTickInterval = 0x654;
		constexpr auto clientTickInterval = 0x658;
		constexpr auto lastSentTickTime = 0x65c;
		constexpr auto lastTickStopwatch = 0x660;
		constexpr auto lastSentTick = 0x668;
		constexpr auto nextVisThink = 0x670;
		constexpr auto lastTimeSeen = 0x674;
		constexpr auto debugPrevVisible = 0x678;
		constexpr auto fallDamageEffect = 0x680;
		constexpr auto drownEffect = 0x688;
		constexpr auto playerFlags = 0x690;
		constexpr auto eyes = 0x698;
		constexpr auto inventory = 0x6a0;
		constexpr auto blueprints = 0x6a8;
		constexpr auto metabolism = 0x6b0;
		constexpr auto modifiers = 0x6b8;
		constexpr auto playerCollider = 0x6c0;
		constexpr auto Belt = 0x6c8;
		constexpr auto playerRigidbody = 0x6d0;
		constexpr auto userID = 0x6d8;
		constexpr auto UserIDString = 0x6e0;
		constexpr auto gamemodeteam = 0x6e8;
		constexpr auto reputation = 0x6ec;
		constexpr auto _displayName = 0x6f0;
		constexpr auto _lastSetName = 0x6f8;
		constexpr auto playerColliderStanding = 0x700;
		constexpr auto playerColliderDucked = 0x714;
		constexpr auto playerColliderCrawling = 0x728;
		constexpr auto playerColliderLyingDown = 0x73c;
		constexpr auto cachedProtection = 0x750;
		constexpr auto oldCameraFix = 0x29;
		constexpr auto lastHeadshotSoundTime = 0x758;
		constexpr auto nextColliderRefreshTime = 0x75c;
		constexpr auto clothingBlocksAiming = 0x760;
		constexpr auto clothingMoveSpeedReduction = 0x764;
		constexpr auto clothingWaterSpeedBonus = 0x768;
		constexpr auto clothingAccuracyBonus = 0x76c;
		constexpr auto equippingBlocked = 0x770;
		constexpr auto eggVision = 0x774;
		constexpr auto activeTelephone = 0x778;
		constexpr auto designingAIEntity = 0x780;

		constexpr auto GetMenuOptions = 0x72bb10;
		constexpr auto get_HasMenuOptions = 0x7463c0;
		constexpr auto OnRpcMessage = 0x733c70;
		constexpr auto CanBeLooted = 0x721980;
		constexpr auto get_LootPanelTitle = 0x746900;
		constexpr auto Menu_LootPlayer = 0x732b60;
		constexpr auto Menu_LootPlayer_ShowIf = 0x732b40;
		constexpr auto RPC_OpenLootPanel = 0x73e520;
		constexpr auto PlayOpenSound = 0x73c890;
		constexpr auto InFirstPersonMode = 0x72ea30;
		constexpr auto UpdateViewMode = 0x7446b0;
		constexpr auto get_idealViewMode = 0x746a70;
		constexpr auto get_shouldDrawBody = 0x746ed0;
		constexpr auto OnViewModeChanged = 0x73c350;
		constexpr auto ModifyCamera = 0x732bd0;
		constexpr auto Menu_AssistPlayer = 0x732b00;
		constexpr auto Menu_AssistPlayer_TimeStart = 0x732ac0;
		constexpr auto Menu_AssistPlayer_ShowIf = 0x732830;
		constexpr auto get_lookingAt = 0x746e80;
		constexpr auto get_lookingAtEntity = 0x746e10;
		constexpr auto get_lookingAtCollider = 0x746dc0;
		constexpr auto get_lookingAtPoint = 0x746e60;
		constexpr auto set_lookingAtPoint = 0x747290;
		constexpr auto GetExtrapolationTime = 0x72ae60;
		constexpr auto GetLocalVelocityClient = 0x72b910;
		constexpr auto ClientInit = 0x723480;
		constexpr auto CreatePlayerModel = 0x7281a0;
		constexpr auto CreatePlayerCollision = 0x727ff0;
		constexpr auto CreatePlayerMovement = 0x7286c0;
		constexpr auto InitLocalPlayer = 0x72ea80;
		constexpr auto InitRemotePlayer = 0x72ed60;
		constexpr auto HasLocalControls = 0x72e0e0;
		constexpr auto SetNetworkPosition = 0x741250;
		constexpr auto SetNetworkRotation = 0x741300;
		constexpr auto DoClientDestroy = 0x728b80;
		constexpr auto PostNetworkUpdate = 0x73d000;
		constexpr auto OnFirstWakeUp = 0x7335a0;
		constexpr auto get_TimeAwake = 0x746930;
		constexpr auto CL_ClothingChanged = 0x720f80;
		constexpr auto ForceRebuild = 0x72a270;
		constexpr auto RebuildWorldModel = 0x73e9c0;
		constexpr auto SetDefaultFootstepEffects = 0x7409e0;
		constexpr auto OnSignal = 0x73bdd0;
		constexpr auto FindBone = 0x729880;
		constexpr auto GetBones = 0x72a3a0;
		constexpr auto ShouldLerp = 0x741b10;
		constexpr auto get_VisiblePlayerList = 0x746990;
		constexpr auto ClearVisibility = 0x722fb0;
		constexpr auto RegisterForVisibility = 0x73f160;
		constexpr auto UnregisterFromVisibility = 0x742410;
		constexpr auto FindByID_Clientside = 0x729980;
		constexpr auto Find_Clientside = 0x729b50;
		constexpr auto GetRandomFloatBasedOnUserID = 0x72d900;
		constexpr auto DisplayHealthInfo = 0x498ad0;
		constexpr auto ShouldDestroyWithGroup = 0x741ae0;
		constexpr auto SetInheritedVelocity = 0x740ea0;
		constexpr auto GetPerformanceReport = 0x72d640;
		constexpr auto GetPerformanceReport_Frametime = 0x72d1c0;
		constexpr auto OnBecameRagdoll = 0x732ff0;
		constexpr auto OnVoiceData = 0x73c850;
		constexpr auto RecieveAchievement = 0x73ed30;
		constexpr auto CraftMode = 0x727d80;
		constexpr auto StartDesigningAI = 0x741e00;
		constexpr auto OnDebugAIEventTriggeredStateChange = 0x733360;
		constexpr auto ClientOnEnable = 0x724420;
		constexpr auto Client_OnRepairFailedResources = 0x726800;
		constexpr auto TakeDamageHit = 0x742070;
		constexpr auto AdminReceivedUGC = 0x71f550;
		constexpr auto AdminReceivedPatternFirework = 0x71f490;
		constexpr auto get_IsWearingDiveGoggles = 0x7468f0;
		constexpr auto set_IsWearingDiveGoggles = 0x747080;
		constexpr auto UpdateClothesIfNeeded = 0x742560;
		constexpr auto MakeVisible = 0x732530;
		constexpr auto ClientUpdate_Sleeping = 0x7258e0;
		constexpr auto ClientUpdate = 0x725cc0;
		constexpr auto RebuildClothingItems = 0x73e7a0;
		constexpr auto UpdateClothingItems = 0x742a50;
		constexpr auto UpdateHolsterOffsets = 0x743180;
		constexpr auto PostLateClientCycle = 0x73cf40;
		constexpr auto IsLocalPlayer = 0x7306b0;
		constexpr auto ClientUpdateLocalPlayer = 0x724580;
		constexpr auto UpdateTopologyStats = 0x744550;
		constexpr auto ClientTick = 0x7244d0;
		constexpr auto DoMovement = 0x728e70;
		constexpr auto MountableOverrideViewAngles = 0x732cc0;
		constexpr auto BlockSprint = 0x7204c0;
		constexpr auto BlockJump = 0x720420;
		constexpr auto ClientInput = 0x723970;
		constexpr auto UseAction = 0x744a10;
		constexpr auto GetInteractionEntity = 0x72b400;
		constexpr auto QuickUse = 0x73e380;
		constexpr auto LongUse = 0x732470;
		constexpr auto UseStop = 0x744ce0;
		constexpr auto UpdateLookingAt = 0x743310;
		constexpr auto ResetLookingAt = 0x73f5b0;
		constexpr auto SetLookingAt = 0x741030;
		constexpr auto CheckLookingAtVisible = 0x7227b0;
		constexpr auto FindVehicleParentFor = 0x729a10;
		constexpr auto OnDied = 0x7334d0;
		constexpr auto OnRespawnInformation = 0x7338d0;
		constexpr auto RequestRespawnUpdates = 0x73f460;
		constexpr auto OnLand = 0x7336e0;
		constexpr auto StartLoading = 0x741f90;
		constexpr auto FinishLoading = 0x729df0;
		constexpr auto FullBlack_FadeIn = 0x72a280;
		constexpr auto FinishedLoadingRoutine = 0x729f40;
		constexpr auto DirectionalDamage = 0x728960;
		constexpr auto UnlockedBlueprint = 0x7423a0;
		constexpr auto CheckForRespawnInfo = 0x722740;
		constexpr auto UpdateRichPresenceState = 0x7442b0;
		constexpr auto HandleCompanionPairingResult = 0x72dbe0;
		constexpr auto UpdateWaterDrinkingPoint = 0x7446f0;
		constexpr auto GetWaterDrinkingPoint = 0x72dbc0;
		constexpr auto Drink = 0x729110;
		constexpr auto Drink_ShowIf = 0x728f30;
		constexpr auto SaltWater = 0x3628c0;
		constexpr auto SaltWater_ShowIf = 0x73f730;
		constexpr auto Climb = 0x727500;
		constexpr auto Climb_ShowIf = 0x727230;
		constexpr auto HasPlayerFlag = 0x72e150;
		constexpr auto get_IsReceivingSnapshot = 0x7468e0;
		constexpr auto get_IsAdmin = 0x746800;
		constexpr auto get_IsDeveloper = 0x7468b0;
		constexpr auto get_IsAiming = 0x746810;
		constexpr auto get_IsFlying = 0x7468c0;
		constexpr auto get_IsConnected = 0x746820;
		constexpr auto get_InGesture = 0x746750;
		constexpr auto get_CurrentGestureBlocksMovement = 0x7462a0;
		constexpr auto get_CurrentGestureIsDance = 0x7462e0;
		constexpr auto get_CurrentGestureIsFullBody = 0x746320;
		constexpr auto get_InGestureCancelCooldown = 0x746720;
		constexpr auto SetGestureMenuOpen = 0x740aa0;
		constexpr auto RequestStartGesture = 0x73f500;
		constexpr auto Client_StartGesture = 0x726d60;
		constexpr auto ProcessDanceAction = 0x73d6f0;
		constexpr auto SayingHello = 0x73fa80;
		constexpr auto ProcessGestureStart = 0x73dc00;
		constexpr auto EndGesture = 0x729430;
		constexpr auto EndLocalGesture = 0x7294d0;
		constexpr auto EndGestureShared = 0x7292c0;
		constexpr auto HideHeldEntity = 0x72e8c0;
		constexpr auto CancelGesture = 0x722460;
		constexpr auto RemoteGestureCancel = 0x73f250;
		constexpr auto CancelGestureInput = 0x722040;
		constexpr auto ClearGestureCooldown = 0x722e60;
		constexpr auto ConVarRequestStartGesture = 0x727b10;
		constexpr auto Client_RemoteCancelledGesture = 0x726d10;
		constexpr auto IsGestureBlocked = 0x72fff0;
		constexpr auto get_clientTeamLifetime = 0x746a00;
		constexpr auto CLIENT_ReceiveTeamInfo = 0x720ab0;
		constexpr auto UpdateSteamGroup = 0x744300;
		constexpr auto ClearSteamGroup = 0x722e90;
		constexpr auto CLIENT_ClearTeam = 0x720560;
		constexpr auto CLIENT_PendingInvite = 0x720700;
		constexpr auto InviteToTeam = 0x72edd0;
		constexpr auto Promote = 0x73e1f0;
		constexpr auto Menu_Promote_Start = 0x3628c0;
		constexpr auto Promote_ShowIf = 0x73de20;
		constexpr auto LocalPlayerIsLeader = 0x731f70;
		constexpr auto Invite_ShowIf = 0x72f330;
		constexpr auto GetHeldEntity = 0x72af50;
		constexpr auto GetHeldItem = 0x72b190;
		constexpr auto GetHeldItemID = 0x72b140;
		constexpr auto HeldEntityViewAngles = 0x72e6a0;
		constexpr auto HeldEntityFrame = 0x72e230;
		constexpr auto HeldEntityInput = 0x72e400;
		constexpr auto HeldItemUse = 0x72e7c0;
		constexpr auto HeldEntityStart = 0x72e5d0;
		constexpr auto HeldEntityEnd = 0x72e160;
		constexpr auto IsHostileItem = 0x7303b0;
		constexpr auto IsItemHoldRestricted = 0x730510;
		constexpr auto MapInfoOnEnable = 0x7325e0;
		constexpr auto Client_ReceiveMarkers = 0x7269d0;
		constexpr auto Client_UpdateDeathMarker = 0x727100;
		constexpr auto Client_AddNewDeathMarker = 0x7266c0;
		constexpr auto AddPointOfInterest = 0x71f3b0;
		constexpr auto ClearAllPointsOfInterest = 0x722d10;
		constexpr auto ClearAllMapMarkers = 0x722bb0;
		constexpr auto HasAttemptedMission = 0x72dc90;
		constexpr auto CanAcceptMission = 0x7212c0;
		constexpr auto IsMissionActive = 0x730790;
		constexpr auto HasCompletedMission = 0x72de00;
		constexpr auto HasFailedMission = 0x72df70;
		constexpr auto SetActiveMission = 0x7409c0;
		constexpr auto GetActiveMission = 0x72a390;
		constexpr auto HasActiveMission = 0x72dc80;
		constexpr auto LoadMissions = 0x731550;
		constexpr auto OnModelState = 0x733840;
		constexpr auto OnModelStateChanged = 0x7337a0;
		constexpr auto get_isMounted = 0x746cc0;
		constexpr auto get_isMountingHidingWeapon = 0x746cf0;
		constexpr auto GetMounted = 0x72cc80;
		constexpr auto GetMountedVehicle = 0x72cc30;
		constexpr auto MarkSwapSeat = 0x732630;
		constexpr auto SwapSeatCooldown = 0x742040;
		constexpr auto ClientUpdateMounted = 0x7253a0;
		constexpr auto CLIENT_SetPetPrefabID = 0x720eb0;
		constexpr auto CLIENT_SetPetPetLoadedStateIndex = 0x720d00;
		constexpr auto LinkPet = 0x731400;
		constexpr auto SetPetMenuOpen = 0x741410;
		constexpr auto ClientIssuePetCommand = 0x724330;
		constexpr auto IsSleeping = 0x730a70;
		constexpr auto IsSpectating = 0x730a80;
		constexpr auto IsRelaxed = 0x7309a0;
		constexpr auto IsServerFalling = 0x730a60;
		constexpr auto GetBuildingPrivilege = 0x72a7b0;
		constexpr auto CanBuild = 0x721c50;
		constexpr auto IsBuildingBlocked = 0x72fd80;
		constexpr auto IsBuildingAuthed = 0x72f940;
		constexpr auto CanPlaceBuildingPrivilege = 0x721de0;
		constexpr auto NewProjectileID = 0x732d50;
		constexpr auto NewProjectileSeed = 0x732d60;
		constexpr auto SendProjectileAttack = 0x740710;
		constexpr auto SendProjectileRicochet = 0x740760;
		constexpr auto SendProjectileUpdate = 0x7407b0;
		constexpr auto Load = 0x731b10;
		constexpr auto SpectatedPlayerHeadshot = 0x741d70;
		constexpr auto GetThreatLevel = 0x72dba0;
		constexpr auto EnsureUpdated = 0x7295f0;
		constexpr auto SetHostileLength = 0x740df0;
		constexpr auto SetWeaponDrawnDuration = 0x741a40;
		constexpr auto ModifyInputState = 0x3628c0;
		constexpr auto ForcePositionToParentOffset = 0x729fb0;
		constexpr auto UpdateClientTickRate = 0x742500;
		constexpr auto ForcePositionTo = 0x72a0e0;
		constexpr auto SendVoiceData = 0x740800;
		constexpr auto SendClientTick = 0x740020;
		constexpr auto NotifyUnderwearChange = 0x732dc0;
		constexpr auto UpdatePlayerVisibilities = 0x743fb0;
		constexpr auto TimeSinceSeen = 0x7421a0;
		constexpr auto SetNextVisThink = 0x7413e0;
		constexpr auto WantsVisUpdate = 0x745820;
		constexpr auto IsAimingAt = 0x72f570;
		constexpr auto UpdateCullingSpheres = 0x742eb0;
		constexpr auto VisUpdateUsingCulling = 0x744e60;
		constexpr auto VisUpdateUsingRays = 0x744f70;
		constexpr auto LogDebugCull = 0x732120;
		constexpr auto OnVisibilityChanged = 0x73c550;
		constexpr auto VisUpdate = 0x745390;
		constexpr auto VisPlayerArmed = 0x744da0;
		constexpr auto AnyPartVisible = 0x71f820;
		constexpr auto CalcVisUpdateRate = 0x721180;
		constexpr auto PointSeePoint = 0x73cc70;
		constexpr auto IsWounded = 0x730d60;
		constexpr auto IsCrawling = 0x72fe30;
		constexpr auto IsIncapacitated = 0x730500;
		constexpr auto ToPlayer = 0x4b0e80;
		constexpr auto get_Connection = 0x746290;
		constexpr auto get_displayName = 0x746a50;
		constexpr auto set_displayName = 0x747090;
		constexpr auto SanitizePlayerNameString = 0x73f900;
		constexpr auto IsGod = 0x7302e0;
		constexpr auto GetNetworkRotation = 0x72cd20;
		constexpr auto CanInteract = 0x721d80;
		constexpr auto StartHealth = 0x741f70;
		constexpr auto StartMaxHealth = 0x73c880;
		constexpr auto MaxHealth = 0x732670;
		constexpr auto MaxVelocity = 0x732720;
		constexpr auto WorldSpaceBounds = 0x745d00;
		constexpr auto GetMountVelocity = 0x72cb60;
		constexpr auto GetInheritedProjectileVelocity = 0x72b280;
		constexpr auto GetInheritedThrowVelocity = 0x72b340;
		constexpr auto GetInheritedDropVelocity = 0x72b1c0;
		constexpr auto PreInitShared = 0x73d280;
		constexpr auto DestroyShared = 0x7288e0;
		constexpr auto InSafeZone = 0x72ea50;
		constexpr auto LateClientCycle = 0x730d70;
		constexpr auto ClientCycle = 0x723170;
		constexpr auto GetBounds = 0x72a430;
		constexpr auto GetCenter = 0x72a880;
		constexpr auto GetOffset = 0x72ce40;
		constexpr auto GetSize = 0x72da00;
		constexpr auto GetHeight = 0x72af30;
		constexpr auto GetRadius = 0x72d8f0;
		constexpr auto GetJumpHeight = 0x72b900;
		constexpr auto TriggerPoint = 0x7422a0;
		constexpr auto NoClipOffset = 0x732d70;
		constexpr auto NoClipRadius = 0x732db0;
		constexpr auto MaxDeployDistance = 0x732660;
		constexpr auto ClientUpdatePersistantData = 0x7258b0;
		constexpr auto GetMinSpeed = 0x72cb30;
		constexpr auto GetMaxSpeed = 0x72bae0;
		constexpr auto GetSpeed = 0x72da60;
		constexpr auto OnAttacked = 0x732e00;
		constexpr auto EnablePlayerCollider = 0x729260;
		constexpr auto DisablePlayerCollider = 0x728b20;
		constexpr auto RefreshColliderSize = 0x73ee50;
		constexpr auto SetPlayerRigidbodyState = 0x741a20;
		constexpr auto AddPlayerRigidbody = 0x71f230;
		constexpr auto RemovePlayerRigidbody = 0x73f330;
		constexpr auto IsEnsnared = 0x72ff00;
		constexpr auto IsAttacking = 0x72f740;
		constexpr auto CanAttack = 0x721730;
		constexpr auto OnLadder = 0x733650;
		constexpr auto IsSwimming = 0x730d10;
		constexpr auto IsHeadUnderwater = 0x730360;
		constexpr auto IsOnGround = 0x730900;
		constexpr auto IsRunning = 0x7309b0;
		constexpr auto IsDucked = 0x72fe50;
		constexpr auto RecentlyTeleported = 0x73eca0;
		constexpr auto ShowToast = 0x741b70;
		constexpr auto ChatMessage = 0x722530;
		constexpr auto ConsoleMessage = 0x727cc0;
		constexpr auto PenetrationResistance = 0x73c880;
		constexpr auto ScaleDamage = 0x73fd90;
		constexpr auto UpdateMoveSpeedFromClothing = 0x743be0;
		constexpr auto UpdateProtectionFromClothing = 0x744190;
		constexpr auto Categorize = 0x722500;
		constexpr auto ToString = 0x7421c0;
		constexpr auto GetDebugStatus = 0x72ab10;
		constexpr auto GetItem = 0x72b850;
		constexpr auto get_Traits = 0x746970;
		constexpr auto WaterFactor = 0x745840;
		constexpr auto AirFactor = 0x71f770;
		constexpr auto GetOxygenTime = 0x72ce90;
		constexpr auto ShouldInheritNetworkGroup = 0x730a80;
		constexpr auto AnyPlayersVisibleToEntity = 0x71fe60;
		constexpr auto IsStandingOnEntity = 0x730a90;
		constexpr auto SetActiveTelephone = 0x7409d0;
		constexpr auto get_HasActiveTelephone = 0x746360;
		constexpr auto get_IsDesigningAI = 0x746850;
		constexpr auto ClearDesigningAIEntity = 0x722e40;
		constexpr auto ctor = 0x7460e0;
		constexpr auto cctor = 0x745f90;
		};

	namespace BaseMovement {
		constexpr auto adminCheat = 0x18;
		constexpr auto adminSpeed = 0x1c;
		constexpr auto Ownerk__BackingField = 0x20;
		constexpr auto InheritedVelocityk__BackingField = 0x28;
		constexpr auto TargetMovementk__BackingField = 0x34;
		constexpr auto Runningk__BackingField = 0x40;
		constexpr auto Duckingk__BackingField = 0x44;
		constexpr auto Crawlingk__BackingField = 0x48;
		constexpr auto Groundedk__BackingField = 0x4c;
		constexpr auto lastTeleportedTime = 0x50;

		constexpr auto get_Owner = 0x497e00;
		constexpr auto set_Owner = 0x497e30;
		constexpr auto get_InheritedVelocity = 0x7e85e0;
		constexpr auto set_InheritedVelocity = 0x4b9490;
		constexpr auto get_TargetMovement = 0xa2bbe0;
		constexpr auto set_TargetMovement = 0x4b9480;
		constexpr auto get_Running = 0x54d6a0;
		constexpr auto set_Running = 0x54d6b0;
		constexpr auto get_Ducking = 0x7e53e0;
		constexpr auto set_Ducking = 0x84f290;
		constexpr auto get_Crawling = 0x709de0;
		constexpr auto set_Crawling = 0x709df0;
		constexpr auto get_Grounded = 0x4b9450;
		constexpr auto set_Grounded = 0x4b94b0;
		constexpr auto get_IsRunning = 0xa2bba0;
		constexpr auto get_IsDucked = 0xa2bb80;
		constexpr auto get_IsCrawling = 0xa2bb70;
		constexpr auto get_IsGrounded = 0xa2bb90;
		constexpr auto CurrentVelocity = 0xa2b8f0;
		constexpr auto CurrentMoveSpeed = 0x581f40;
		constexpr auto GetCollider = 0x513d80;
		constexpr auto Init = 0x497e30;
		constexpr auto BlockJump = 0x3628c0;
		constexpr auto BlockSprint = 0x3628c0;
		constexpr auto get_RecentlyTeleported = 0xa2bbb0;
		constexpr auto ClientInput = 0x3628c0;
		constexpr auto DoFixedUpdate = 0x3628c0;
		constexpr auto FrameUpdate = 0xa2b9e0;
		constexpr auto TeleportTo = 0xa2bad0;
		constexpr auto Push = 0x3628c0;
		constexpr auto SetParent = 0x3628c0;
		constexpr auto FixedUpdate = 0xa2b960;
		constexpr auto PlayerAttemptedMount = 0x3628c0;
		constexpr auto PlayerCompletedMount = 0x3628c0;
		constexpr auto ctor = 0x70f570;
		};

	namespace BaseProjectile {
		constexpr auto NoiseRadius = 0x280;
		constexpr auto damageScale = 0x284;
		constexpr auto distanceScale = 0x288;
		constexpr auto projectileVelocityScale = 0x28c;
		constexpr auto automatic = 0x290;
		constexpr auto usableByTurret = 0x291;
		constexpr auto turretDamageScale = 0x294;
		constexpr auto attackFX = 0x298;
		constexpr auto silencedAttack = 0x2a0;
		constexpr auto muzzleBrakeAttack = 0x2a8;
		constexpr auto MuzzlePoint = 0x2b0;
		constexpr auto reloadTime = 0x2b8;
		constexpr auto canUnloadAmmo = 0x2bc;
		constexpr auto primaryMagazine = 0x2c0;
		constexpr auto fractionalReload = 0x2c8;
		constexpr auto reloadStartDuration = 0x2cc;
		constexpr auto reloadFractionDuration = 0x2d0;
		constexpr auto reloadEndDuration = 0x2d4;
		constexpr auto aimSway = 0x2d8;
		constexpr auto aimSwaySpeed = 0x2dc;
		constexpr auto recoil = 0x2e0;
		constexpr auto aimconeCurve = 0x2e8;
		constexpr auto aimCone = 0x2f0;
		constexpr auto hipAimCone = 0x2f4;
		constexpr auto aimconePenaltyPerShot = 0x2f8;
		constexpr auto aimConePenaltyMax = 0x2fc;
		constexpr auto aimconePenaltyRecoverTime = 0x300;
		constexpr auto aimconePenaltyRecoverDelay = 0x304;
		constexpr auto stancePenaltyScale = 0x308;
		constexpr auto hasADS = 0x30c;
		constexpr auto noAimingWhileCycling = 0x30d;
		constexpr auto manualCycle = 0x30e;
		constexpr auto needsCycle = 0x30f;
		constexpr auto isCycling = 0x310;
		constexpr auto aiming = 0x311;
		constexpr auto resetDuration = 0x314;
		constexpr auto numShotsFired = 0x318;
		constexpr auto nextReloadTime = 0x31c;
		constexpr auto startReloadTime = 0x320;
		constexpr auto stancePenalty = 0x324;
		constexpr auto aimconePenalty = 0x328;
		constexpr auto cachedModHash = 0x32c;
		constexpr auto sightAimConeScale = 0x330;
		constexpr auto sightAimConeOffset = 0x334;
		constexpr auto hipAimConeScale = 0x338;
		constexpr auto hipAimConeOffset = 0x33c;
		constexpr auto isReloading = 0x340;
		constexpr auto swaySampleTime = 0x344;
		constexpr auto lastShotTime = 0x348;
		constexpr auto reloadPressTime = 0x34c;
		constexpr auto ammoTypePreReload = 0x350;
		constexpr auto fractionalReloadDesiredCount = 0x358;
		constexpr auto fractionalReloadNumAdded = 0x35c;
		constexpr auto triggerReady = 0x360;
		constexpr auto nextHeightCheckTime = 0x364;
		constexpr auto cachedUnderground = 0x368;
		constexpr auto createdProjectiles = 0x370;

		constexpr auto OnRpcMessage = 0x905b20;
		constexpr auto get_recoilProperties = 0x907680;
		constexpr auto GetInheritedVelocity = 0x903120;
		constexpr auto GetDamageScale = 0x903100;
		constexpr auto GetDistanceScale = 0x903110;
		constexpr auto GetProjectileVelocityScale = 0x903900;
		constexpr auto StartReloadCooldown = 0x907300;
		constexpr auto ResetReloadCooldown = 0x906720;
		constexpr auto HasReloadCooldown = 0x904020;
		constexpr auto GetReloadCooldown = 0x903920;
		constexpr auto GetReloadIdle = 0x903a80;
		constexpr auto OnDrawGizmos = 0x905360;
		constexpr auto GetRecoil = 0x903910;
		constexpr auto get_isSemiAuto = 0x907670;
		constexpr auto GetAimCone = 0x902610;
		constexpr auto ScaleRepeatDelay = 0x906730;
		constexpr auto GetProjectileModifier = 0x9032c0;
		constexpr auto DidAttackClientside = 0x900b00;
		constexpr auto GetItemOptions = 0x903170;
		constexpr auto ClientIsReloading = 0x900820;
		constexpr auto NotifySpectatorReloading = 0x905310;
		constexpr auto EditViewAngles = 0x901c10;
		constexpr auto OnFrame = 0x905730;
		constexpr auto ShotFired = 0x906a60;
		constexpr auto SimulateAimcone = 0x906ac0;
		constexpr auto CanAttack = 0x900620;
		constexpr auto CanAim = 0x9005f0;
		constexpr auto OnInput = 0x905740;
		constexpr auto ReadyToAim = 0x906670;
		constexpr auto ReadyToFire = 0x9066c0;
		constexpr auto AmmoTypeClicked = 0x9004d0;
		constexpr auto AddAmmoOption = 0x900320;
		constexpr auto GetReloadMenu = 0x903b00;
		constexpr auto PredictAmmoType = 0x9062d0;
		constexpr auto HasMoreThanOneAmmoType = 0x903d70;
		constexpr auto OnDeploy = 0x905320;
		constexpr auto DoReload = 0x901690;
		constexpr auto InsertAmmoFraction = 0x904050;
		constexpr auto CancelFractionalReloading = 0x900640;
		constexpr auto ClientFinishFractionalReload = 0x9006e0;
		constexpr auto ClientSingleReload = 0x900830;
		constexpr auto DoAttack = 0x900bd0;
		constexpr auto BeginCycle = 0x900560;
		constexpr auto LaunchProjectile = 0x905120;
		constexpr auto DryFire = 0x901b50;
		constexpr auto ProcessSpectatorViewmodel = 0x906610;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x906500;
		constexpr auto GetReloadDuration = 0x9039a0;
		constexpr auto GetAvailableAmmo = 0x902ef0;
		constexpr auto IsSilenced = 0x9040b0;
		constexpr auto FiredUnderground = 0x902580;
		constexpr auto OnSignal = 0x905c10;
		constexpr auto LaunchProjectileClientside = 0x904290;
		constexpr auto CreateProjectile = 0x900970;
		constexpr auto UpdateAmmoDisplay = 0x907350;
		constexpr auto get_UsingInfiniteAmmoCheat = 0x498ad0;
		constexpr auto Load = 0x905270;
		constexpr auto ctor = 0x907400;
		};

	namespace PlayerWalkMovement {
		constexpr auto zeroFrictionMaterial = 0x58;
		constexpr auto highFrictionMaterial = 0x60;
		constexpr auto capsuleHeight = 0x68;
		constexpr auto capsuleCenter = 0x6c;
		constexpr auto capsuleHeightDucked = 0x70;
		constexpr auto capsuleCenterDucked = 0x74;
		constexpr auto capsuleHeightCrawling = 0x78;
		constexpr auto capsuleCenterCrawling = 0x7c;
		constexpr auto gravityTestRadius = 0x80;
		constexpr auto gravityMultiplier = 0x84;
		constexpr auto gravityMultiplierSwimming = 0x88;
		constexpr auto maxAngleWalking = 0x8c;
		constexpr auto maxAngleClimbing = 0x90;
		constexpr auto maxAngleSliding = 0x94;
		constexpr auto maxStepHeight = 0x98;
		constexpr auto body = 0xa0;
		constexpr auto initialColDetectionMode = 0xa8;
		constexpr auto capsule = 0xb0;
		constexpr auto ladder = 0xb8;
		constexpr auto maxVelocity = 0xc0;
		constexpr auto groundAngle = 0xc4;
		constexpr auto groundAngleNew = 0xc8;
		constexpr auto groundTime = 0xcc;
		constexpr auto jumpTime = 0xd0;
		constexpr auto landTime = 0xd4;
		constexpr auto previousPosition = 0xd8;
		constexpr auto previousVelocity = 0xe4;
		constexpr auto previousInheritedVelocity = 0xf0;
		constexpr auto groundNormal = 0xfc;
		constexpr auto groundNormalNew = 0x108;
		constexpr auto groundVelocity = 0x114;
		constexpr auto groundVelocityNew = 0x120;
		constexpr auto nextSprintTime = 0x12c;
		constexpr auto lastSprintTime = 0x130;
		constexpr auto sprintForced = 0x134;
		constexpr auto attemptedMountTime = 0x138;
		constexpr auto modify = 0x13c;
		constexpr auto grounded = 0x140;
		constexpr auto climbing = 0x141;
		constexpr auto sliding = 0x142;
		constexpr auto swimming = 0x143;
		constexpr auto wasSwimming = 0x144;
		constexpr auto jumping = 0x145;
		constexpr auto wasJumping = 0x146;
		constexpr auto falling = 0x147;
		constexpr auto wasFalling = 0x148;
		constexpr auto flying = 0x149;
		constexpr auto wasFlying = 0x14a;
		constexpr auto forcedDuckDelta = 0x14c;

		constexpr auto Awake = 0x970550;
		constexpr auto GetCollider = 0x972280;
		constexpr auto OnDisable = 0x975440;
		constexpr auto Init = 0x972c70;
		constexpr auto OnCollisionEnter = 0x975280;
		constexpr auto OnCollisionStay = 0x975360;
		constexpr auto GroundCheck = 0x972430;
		constexpr auto TeleportTo = 0x975af0;
		constexpr auto UpdateCurrentLadder = 0x975e20;
		constexpr auto WantsSprint = 0x976e90;
		constexpr auto ClientInput = 0x970840;
		constexpr auto Movement_Water = 0x9746d0;
		constexpr auto Movement_Mounted = 0x9737b0;
		constexpr auto Movement_Ladder = 0x973160;
		constexpr auto Movement_Noclip = 0x9738c0;
		constexpr auto Movement_Walking = 0x973e50;
		constexpr auto GetHeldEntityMovementMultiplier = 0x972380;
		constexpr auto HandleGrounded = 0x972700;
		constexpr auto HandleRunDuckCrawl = 0x972880;
		constexpr auto GetForcedDuck = 0x972290;
		constexpr auto HandleJumping = 0x972750;
		constexpr auto CanJump = 0x9706c0;
		constexpr auto BlockJump = 0x970630;
		constexpr auto BlockSprint = 0x970670;
		constexpr auto SetKinematic = 0x9758c0;
		constexpr auto ApplyForce = 0x970510;
		constexpr auto CanSprint = 0x9707d0;
		constexpr auto Jump = 0x972e40;
		constexpr auto DoFixedUpdate = 0x970bf0;
		constexpr auto DoStepUp = 0x971410;
		constexpr auto UpdateVelocity = 0x976340;
		constexpr auto UpdateGravity = 0x975ff0;
		constexpr auto FrameUpdate = 0x971de0;
		constexpr auto TransformState = 0x975c10;
		constexpr auto SetParent = 0x9758f0;
		constexpr auto FallVelocity = 0x971d30;
		constexpr auto CurrentVelocity = 0x970bb0;
		constexpr auto CurrentMoveSpeed = 0x970b60;
		constexpr auto PlayerAttemptedMount = 0x975860;
		constexpr auto PlayerCompletedMount = 0x975890;
		constexpr auto ctor = 0x976f20;
		};

	namespace UnityEngine_GUI {
		constexpr auto s_BoxHash = 0x4;
		constexpr auto s_ButonHash = 0x8;
		constexpr auto s_RepeatButtonHash = 0xc;
		constexpr auto s_ToggleHash = 0x10;
		constexpr auto s_ButtonGridHash = 0x14;
		constexpr auto s_SliderHash = 0x18;
		constexpr auto s_BeginGroupHash = 0x1c;
		constexpr auto s_ScrollviewHash = 0x20;
		constexpr auto scrollTroughSidek__BackingField = 0x24;
		constexpr auto nextScrollStepTimek__BackingField = 0x28;
		constexpr auto s_Skin = 0x30;
		constexpr auto scrollViewStatesk__BackingField = 0x38;

		constexpr auto get_color = 0x1a76120;
		constexpr auto set_color = 0x1a766c0;
		constexpr auto get_backgroundColor = 0x1a75fd0;
		constexpr auto set_backgroundColor = 0x1a765d0;
		constexpr auto get_contentColor = 0x1a761e0;
		constexpr auto set_contentColor = 0x1a76770;
		constexpr auto get_changed = 0x1a760b0;
		constexpr auto set_changed = 0x1a76640;
		constexpr auto get_enabled = 0x1a76260;
		constexpr auto set_enabled = 0x1a767e0;
		constexpr auto get_usePageScrollbars = 0x1a76560;
		constexpr auto get_blendMaterial = 0x1a76050;
		constexpr auto get_blitMaterial = 0x1a76080;
		constexpr auto get_roundedRectMaterial = 0x1a76380;
		constexpr auto get_roundedRectWithColorPerBorderMaterial = 0x1a763b0;
		constexpr auto GrabMouseControl = 0x1a74120;
		constexpr auto HasMouseControl = 0x1a74f10;
		constexpr auto ReleaseMouseControl = 0x1a75620;
		constexpr auto SetNextControlName = 0x1a758b0;
		constexpr auto InternalRepaintEditorWindow = 0x1a75230;
		constexpr auto cctor = 0x1a75d10;
		constexpr auto get_scrollTroughSide = 0x1a763e0;
		constexpr auto set_scrollTroughSide = 0x1a76940;
		constexpr auto get_nextScrollStepTime = 0x1a76320;
		constexpr auto set_nextScrollStepTime = 0x1a76880;
		constexpr auto set_skin = 0x1a76a00;
		constexpr auto get_skin = 0x1a76500;
		constexpr auto DoSetSkin = 0x1a725a0;
		constexpr auto get_matrix = 0x1a76290;
		constexpr auto set_matrix = 0x1a76820;
		constexpr auto Label = 0x1a75350;
		constexpr auto DrawTexture = 0x1a73730;
		constexpr auto CalculateScaledTextureRects = 0x1a708f0;
		constexpr auto Box = 0x1a6fce0;
		constexpr auto Button = 0x1a6fda0;
		constexpr auto PasswordFieldGetStrToShow = 0x1a754f0;
		constexpr auto DoTextField = 0x1a72a20;
		constexpr auto HandleTextFieldEventForTouchscreen = 0x1a74950;
		constexpr auto HandleTextFieldEventForDesktop = 0x1a74160;
		constexpr auto Toggle = 0x1a75b50;
		constexpr auto SelectionGrid = 0x1a75750;
		constexpr auto CalcTotalHorizSpacing = 0x1a706e0;
		constexpr auto DoControl = 0x1a71ed0;
		constexpr auto DoLabel = 0x1a72310;
		constexpr auto DoToggle = 0x1a72be0;
		constexpr auto DoButton = 0x1a71da0;
		constexpr auto DoButtonGrid = 0x1a710b0;
		constexpr auto CalcMouseRects = 0x1a701c0;
		constexpr auto HorizontalSlider = 0x1a75020;
		constexpr auto Slider = 0x1a758f0;
		constexpr auto BeginGroup = 0x1a6f6c0;
		constexpr auto EndGroup = 0x1a740e0;
		constexpr auto get_scrollViewStates = 0x1a764a0;
		constexpr auto CallWindowDelegate = 0x1a70c20;
		constexpr auto get_color_Injected = 0x1a760e0;
		constexpr auto set_color_Injected = 0x1a76680;
		constexpr auto get_backgroundColor_Injected = 0x1a75f90;
		constexpr auto set_backgroundColor_Injected = 0x1a76590;
		constexpr auto get_contentColor_Injected = 0x1a761a0;
		constexpr auto set_contentColor_Injected = 0x1a76730;
		};

	namespace UnityEngine_GUIStyle {
		constexpr auto m_Ptr = 0x10;
		constexpr auto m_Normal = 0x18;
		constexpr auto m_Hover = 0x20;
		constexpr auto m_Active = 0x28;
		constexpr auto m_Focused = 0x30;
		constexpr auto m_OnNormal = 0x38;
		constexpr auto m_OnHover = 0x40;
		constexpr auto m_OnActive = 0x48;
		constexpr auto m_OnFocused = 0x50;
		constexpr auto m_Border = 0x58;
		constexpr auto m_Padding = 0x60;
		constexpr auto m_Margin = 0x68;
		constexpr auto m_Overflow = 0x70;
		constexpr auto m_Name = 0x78;
		constexpr auto s_None = 0x8;

		constexpr auto get_rawName = 0x1a6d220;
		constexpr auto set_rawName = 0x1a6d5f0;
		constexpr auto get_font = 0x1a6cd10;
		constexpr auto get_imagePosition = 0x1a6cd50;
		constexpr auto set_alignment = 0x1a6d490;
		constexpr auto get_wordWrap = 0x1a6d2e0;
		constexpr auto get_contentOffset = 0x1a6cc40;
		constexpr auto set_contentOffset = 0x1a6d520;
		constexpr auto get_fixedWidth = 0x1a6ccd0;
		constexpr auto get_fixedHeight = 0x1a6cc90;
		constexpr auto get_stretchWidth = 0x1a6d2a0;
		constexpr auto set_stretchWidth = 0x1a6d690;
		constexpr auto get_stretchHeight = 0x1a6d260;
		constexpr auto set_stretchHeight = 0x1a6d640;
		constexpr auto set_fontSize = 0x1a6d560;
		constexpr auto set_Internal_clipOffset = 0x1a6d450;
		constexpr auto Internal_Create = 0x1a6c050;
		constexpr auto Internal_Copy = 0x1a6c000;
		constexpr auto Internal_Destroy = 0x1a6c090;
		constexpr auto GetStyleStatePtr = 0x1a6be30;
		constexpr auto GetRectOffsetPtr = 0x1a6bdf0;
		constexpr auto Internal_GetLineHeight = 0x1a6c720;
		constexpr auto Internal_Draw = 0x1a6c4a0;
		constexpr auto Internal_Draw2 = 0x1a6c140;
		constexpr auto Internal_DrawCursor = 0x1a6c220;
		constexpr auto Internal_DrawWithTextSelection = 0x1a6c340;
		constexpr auto Internal_GetCursorPixelPosition = 0x1a6c5d0;
		constexpr auto Internal_GetCursorStringIndex = 0x1a6c6c0;
		constexpr auto Internal_GetSelectedRenderedText = 0x1a6c7d0;
		constexpr auto Internal_CalcSize = 0x1a6ad40;
		constexpr auto Internal_CalcSizeWithConstraints = 0x1a6ace0;
		constexpr auto Internal_CalcHeight = 0x1a6ac00;
		constexpr auto Internal_CalcMinMaxWidth = 0x1a6bed0;
		constexpr auto SetMouseTooltip = 0x1a6c8d0;
		constexpr auto Internal_GetCursorFlashOffset = 0x1a6c530;
		constexpr auto SetDefaultFont = 0x1a6c840;
		constexpr auto ctor = 0x1a6cb70;
		constexpr auto Finalize = 0x1a6bc10;
		constexpr auto get_name = 0x1a6cf90;
		constexpr auto set_name = 0x1a6d5a0;
		constexpr auto get_normal = 0x1a6d0b0;
		constexpr auto get_margin = 0x1a6cee0;
		constexpr auto get_padding = 0x1a6d170;
		constexpr auto get_lineHeight = 0x1a6ce30;
		constexpr auto Draw = 0x1a6b9e0;
		constexpr auto DrawCursor = 0x1a6ada0;
		constexpr auto DrawWithTextSelection = 0x1a6b260;
		constexpr auto op_Implicit = 0x1a6d320;
		constexpr auto get_none = 0x1a6cff0;
		constexpr auto GetCursorPixelPosition = 0x1a6bd10;
		constexpr auto GetCursorStringIndex = 0x1a6bd90;
		constexpr auto CalcSize = 0x1a6ad40;
		constexpr auto CalcSizeWithConstraints = 0x1a6ace0;
		constexpr auto CalcHeight = 0x1a6ac00;
		constexpr auto get_isHeightDependantOnWidth = 0x1a6cd90;
		constexpr auto CalcMinMaxWidth = 0x1a6ac60;
		constexpr auto ToString = 0x1a6c950;
		constexpr auto cctor = 0x1a6ca60;
		constexpr auto get_contentOffset_Injected = 0x1a6cbf0;
		constexpr auto set_contentOffset_Injected = 0x1a6d4d0;
		constexpr auto set_Internal_clipOffset_Injected = 0x1a6d400;
		constexpr auto Internal_Draw_Injected = 0x1a6c410;
		constexpr auto Internal_Draw2_Injected = 0x1a6c0d0;
		constexpr auto Internal_DrawCursor_Injected = 0x1a6c1b0;
		constexpr auto Internal_DrawWithTextSelection_Injected = 0x1a6c290;
		constexpr auto Internal_GetCursorPixelPosition_Injected = 0x1a6c560;
		constexpr auto Internal_GetCursorStringIndex_Injected = 0x1a6c650;
		constexpr auto Internal_GetSelectedRenderedText_Injected = 0x1a6c760;
		constexpr auto Internal_CalcSize_Injected = 0x1a6bfa0;
		constexpr auto Internal_CalcSizeWithConstraints_Injected = 0x1a6bf30;
		constexpr auto Internal_CalcMinMaxWidth_Injected = 0x1a6be70;
		constexpr auto SetMouseTooltip_Injected = 0x1a6c880;
		};

	namespace UnityEngine_Event {
		constexpr auto m_Ptr = 0x10;
		constexpr auto s_MasterEvent = 0x8;

		constexpr auto get_rawType = 0x1a5c940;
		constexpr auto get_mousePosition = 0x1a5c870;
		constexpr auto set_mousePosition = 0x1a5cc50;
		constexpr auto get_delta = 0x1a5c5f0;
		constexpr auto get_pointerType = 0x1a5c8c0;
		constexpr auto get_button = 0x1a5c3e0;
		constexpr auto get_modifiers = 0x1a5c7e0;
		constexpr auto set_modifiers = 0x1a5cbc0;
		constexpr auto get_pressure = 0x1a5c900;
		constexpr auto get_clickCount = 0x1a5c460;
		constexpr auto get_character = 0x1a5c420;
		constexpr auto set_character = 0x1a5ca00;
		constexpr auto get_keyCode = 0x1a5c7a0;
		constexpr auto set_keyCode = 0x1a5cb80;
		constexpr auto get_displayIndex = 0x1a5c640;
		constexpr auto set_displayIndex = 0x1a5cb40;
		constexpr auto get_type = 0x1a5c9c0;
		constexpr auto set_type = 0x1a5cc90;
		constexpr auto get_commandName = 0x1a5c4a0;
		constexpr auto set_commandName = 0x1a5ca50;
		constexpr auto Internal_Use = 0x1a5a2c0;
		constexpr auto Internal_Create = 0x1a5a0c0;
		constexpr auto Internal_Destroy = 0x1a5a100;
		constexpr auto Internal_Copy = 0x1a5a080;
		constexpr auto GetTypeForControl = 0x1a5a040;
		constexpr auto CopyFromPtr = 0x1a59b20;
		constexpr auto PopEvent = 0x1a5b590;
		constexpr auto Internal_SetNativeEvent = 0x1a5a280;
		constexpr auto Internal_MakeMasterEventCurrent = 0x1a5a140;
		constexpr auto ctor = 0x1a5c310;
		constexpr auto Finalize = 0x1a59e30;
		constexpr auto CopyFrom = 0x1a59b70;
		constexpr auto get_shift = 0x1a5c980;
		constexpr auto get_control = 0x1a5c520;
		constexpr auto get_alt = 0x1a5c3a0;
		constexpr auto get_command = 0x1a5c4e0;
		constexpr auto get_current = 0x1a5c560;
		constexpr auto set_current = 0x1a5caa0;
		constexpr auto get_isKey = 0x1a5c6f0;
		constexpr auto get_isMouse = 0x1a5c740;
		constexpr auto get_isDirectManipulationDevice = 0x1a5c680;
		constexpr auto KeyboardEvent = 0x1a5a300;
		constexpr auto GetHashCode = 0x1a59f10;
		constexpr auto Equals = 0x1a59be0;
		constexpr auto ToString = 0x1a5b5d0;
		constexpr auto Use = 0x1a5c0b0;
		constexpr auto get_mousePosition_Injected = 0x1a5c820;
		constexpr auto set_mousePosition_Injected = 0x1a5cc00;
		constexpr auto get_delta_Injected = 0x1a5c5a0;
		};

	namespace UnityEngine_Input {

		constexpr auto GetKeyInt = 0x230e5a0;
		constexpr auto GetKeyUpInt = 0x230e5e0;
		constexpr auto GetKeyDownInt = 0x230e560;
		constexpr auto GetAxis = 0x230e4e0;
		constexpr auto GetAxisRaw = 0x230e4a0;
		constexpr auto GetButtonDown = 0x230e520;
		constexpr auto GetMouseButton = 0x230e6a0;
		constexpr auto GetMouseButtonDown = 0x230e620;
		constexpr auto GetMouseButtonUp = 0x230e660;
		constexpr auto GetTouch = 0x230e720;
		constexpr auto GetKey = 0x230e5a0;
		constexpr auto GetKeyUp = 0x230e5e0;
		constexpr auto GetKeyDown = 0x230e560;
		constexpr auto get_anyKey = 0x230e7b0;
		constexpr auto get_anyKeyDown = 0x230e780;
		constexpr auto get_mousePosition = 0x230e900;
		constexpr auto get_mouseScrollDelta = 0x230e9b0;
		constexpr auto get_imeCompositionMode = 0x230e890;
		constexpr auto set_imeCompositionMode = 0x230ec00;
		constexpr auto get_compositionString = 0x230e860;
		constexpr auto get_compositionCursorPos = 0x230e820;
		constexpr auto set_compositionCursorPos = 0x230ebc0;
		constexpr auto get_mousePresent = 0x230e940;
		constexpr auto get_touchCount = 0x230e9f0;
		constexpr auto get_touchSupported = 0x230ea20;
		constexpr auto get_touches = 0x230ea50;
		constexpr auto GetTouch_Injected = 0x230e6e0;
		constexpr auto get_mousePosition_Injected = 0x230e8c0;
		constexpr auto get_mouseScrollDelta_Injected = 0x230e970;
		constexpr auto get_compositionCursorPos_Injected = 0x230e7e0;
		constexpr auto set_compositionCursorPos_Injected = 0x230eb80;
		};

	namespace UnityEngine_DDraw {
		constexpr auto singleton = 0x8;
		constexpr auto list = 0x18;
		constexpr auto AutoYPosition = 0x10;
		constexpr auto LastAutoY = 0x14;
		constexpr auto lineMaterial = 0x18;
		constexpr auto _skin = 0x20;

		constexpr auto Get = 0x9d8c70;
		constexpr auto Capsule = 0x9d8890;
		constexpr auto Sphere = 0x9da110;
		constexpr auto SphereGizmo = 0x9d9e20;
		constexpr auto Line = 0x9d8f40;
		constexpr auto Arrow = 0x9d7960;
		constexpr auto ArrowPadded = 0x9d7260;
		constexpr auto Bounds = 0x9d7b90;
		constexpr auto Box = 0x9d8150;
		constexpr auto Text = 0x9da3f0;
		constexpr auto ScreenText = 0x9d9c80;
		constexpr auto Awake = 0x9d7b20;
		constexpr auto OnPreRender = 0x9d98a0;
		constexpr auto OnPostRender = 0x9d9560;
		constexpr auto OnGUI = 0x9d9390;
		constexpr auto CreateLineMaterial = 0x9d8b10;
		constexpr auto get_skin = 0x9da600;
		constexpr auto ctor = 0x9da590;
		constexpr auto cctor = 0x3628c0;
		};

	namespace UnityEngine_Texture2D {

		constexpr auto get_format = 0x2176aa0;
		constexpr auto get_whiteTexture = 0x2176b20;
		constexpr auto get_blackTexture = 0x2176a70;
		constexpr auto Compress = 0x2175290;
		constexpr auto Internal_CreateImpl = 0x2175920;
		constexpr auto Internal_Create = 0x2175980;
		constexpr auto get_isReadable = 0x2176ae0;
		constexpr auto ApplyImpl = 0x21750e0;
		constexpr auto ResizeImpl = 0x2175e50;
		constexpr auto SetPixelImpl = 0x2176190;
		constexpr auto GetPixelImpl = 0x2175500;
		constexpr auto GetPixelBilinearImpl = 0x2175340;
		constexpr auto ResizeWithFormatImpl = 0x2175ea0;
		constexpr auto ReadPixelsImpl = 0x2175c40;
		constexpr auto SetPixelsImpl = 0x2176390;
		constexpr auto LoadRawTextureDataImpl = 0x2175a50;
		constexpr auto GetWritableImageData = 0x21758e0;
		constexpr auto GetRawImageDataSize = 0x21758a0;
		constexpr auto set_requestedMipmapLevel = 0x2176b90;
		constexpr auto set_minimumMipmapLevel = 0x2176b50;
		constexpr auto ClearRequestedMipmapLevel = 0x2175250;
		constexpr auto ClearMinimumMipmapLevel = 0x2175210;
		constexpr auto SetAllPixels32 = 0x2176070;
		constexpr auto SetBlockOfPixels32 = 0x21760d0;
		constexpr auto GetPixels = 0x21757a0;
		constexpr auto GetPixels32 = 0x21756a0;
		constexpr auto ctor = 0x21768b0;
		constexpr auto SetPixel = 0x2176200;
		constexpr auto SetPixels = 0x21763f0;
		constexpr auto GetPixel = 0x2175580;
		constexpr auto GetPixelBilinear = 0x21753c0;
		constexpr auto LoadRawTextureData = 0x2175ab0;
		constexpr auto Apply = 0x2175160;
		constexpr auto Resize = 0x2175fd0;
		constexpr auto ReadPixels = 0x2175d80;
		constexpr auto SetPixels32 = 0x2176070;
		constexpr auto SetPixelImpl_Injected = 0x2176130;
		constexpr auto GetPixelImpl_Injected = 0x21754a0;
		constexpr auto GetPixelBilinearImpl_Injected = 0x21752e0;
		constexpr auto ReadPixelsImpl_Injected = 0x2175bd0;
		};

	namespace ModelState {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto waterLevel = 0x14;
		constexpr auto lookDir = 0x18;
		constexpr auto flags = 0x24;
		constexpr auto poseType = 0x28;
		constexpr auto inheritedVelocity = 0x2c;

		constexpr auto ctor = 0x201a030;
		constexpr auto HasFlag = 0x2019510;
		constexpr auto SetFlag = 0x2019fc0;
		constexpr auto get_ducked = 0x201a080;
		constexpr auto set_ducked = 0x201a180;
		constexpr auto get_jumped = 0x201a0b0;
		constexpr auto set_jumped = 0x201a1e0;
		constexpr auto get_onground = 0x201a0f0;
		constexpr auto set_onground = 0x201a260;
		constexpr auto get_sleeping = 0x201a120;
		constexpr auto set_sleeping = 0x201a2c0;
		constexpr auto get_sprinting = 0x201a130;
		constexpr auto set_sprinting = 0x201a2e0;
		constexpr auto get_onLadder = 0x201a0d0;
		constexpr auto set_onLadder = 0x201a220;
		constexpr auto get_flying = 0x201a090;
		constexpr auto set_flying = 0x201a1a0;
		constexpr auto get_aiming = 0x201a060;
		constexpr auto set_aiming = 0x201a140;
		constexpr auto get_prone = 0x201a100;
		constexpr auto set_prone = 0x201a280;
		constexpr auto get_mounted = 0x201a0c0;
		constexpr auto set_mounted = 0x201a200;
		constexpr auto get_relaxed = 0x201a110;
		constexpr auto set_relaxed = 0x201a2a0;
		constexpr auto get_crawling = 0x201a070;
		constexpr auto set_crawling = 0x201a160;
		constexpr auto get_onPhone = 0x201a0e0;
		constexpr auto set_onPhone = 0x201a240;
		constexpr auto get_headLook = 0x201a0a0;
		constexpr auto set_headLook = 0x201a1c0;
		constexpr auto Equal = 0x20191b0;
		constexpr auto ResetToPool = 0x20195f0;
		constexpr auto Dispose = 0x2019130;
		constexpr auto EnterPool = 0x10a09b0;
		constexpr auto LeavePool = 0x10a09e0;
		constexpr auto CopyTo = 0x2017e10;
		constexpr auto Copy = 0x2017e60;
		constexpr auto Deserialize = 0x2018eb0;
		constexpr auto DeserializeLengthDelimited = 0x2017f00;
		constexpr auto DeserializeLength = 0x2018590;
		constexpr auto FromProto = 0x20192c0;
		constexpr auto WriteToStream = 0x2019ff0;
		constexpr auto WriteToStreamDelta = 0x201a010;
		constexpr auto ReadFromStream = 0x2019520;
		constexpr auto SerializeDelta = 0x20196a0;
		constexpr auto Serialize = 0x2019d00;
		constexpr auto ToProtoBytes = 0x2019fe0;
		constexpr auto ToProto = 0x2019ff0;
		constexpr auto SerializeToBytes = 0x2019bf0;
		constexpr auto SerializeLengthDelimited = 0x2019b40;
		};

	namespace ProtoBuf_PlayerProjectileUpdate {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto projectileID = 0x14;
		constexpr auto curPosition = 0x18;
		constexpr auto curVelocity = 0x24;
		constexpr auto travelTime = 0x30;

		constexpr auto ResetToPool = 0x2039630;
		constexpr auto Dispose = 0x20392d0;
		constexpr auto EnterPool = 0x10a09b0;
		constexpr auto LeavePool = 0x10a09e0;
		constexpr auto CopyTo = 0x2038160;
		constexpr auto Copy = 0x20381a0;
		constexpr auto Deserialize = 0x20388d0;
		constexpr auto DeserializeLengthDelimited = 0x2038240;
		constexpr auto DeserializeLength = 0x2038840;
		constexpr auto FromProto = 0x2039400;
		constexpr auto WriteToStream = 0x203a040;
		constexpr auto WriteToStreamDelta = 0x203a060;
		constexpr auto ReadFromStream = 0x2039610;
		constexpr auto SerializeDelta = 0x2039790;
		constexpr auto Serialize = 0x2039da0;
		constexpr auto ToProtoBytes = 0x203a030;
		constexpr auto ToProto = 0x203a040;
		constexpr auto SerializeToBytes = 0x2039c90;
		constexpr auto SerializeLengthDelimited = 0x2039be0;
		constexpr auto ctor = 0x101b930;
		};

	namespace Projectile {
		constexpr auto initialVelocity = 0x18;
		constexpr auto drag = 0x24;
		constexpr auto gravityModifier = 0x28;
		constexpr auto thickness = 0x2c;
		constexpr auto initialDistance = 0x30;
		constexpr auto remainInWorld = 0x34;
		constexpr auto stickProbability = 0x38;
		constexpr auto breakProbability = 0x3c;
		constexpr auto conditionLoss = 0x40;
		constexpr auto ricochetChance = 0x44;
		constexpr auto penetrationPower = 0x48;
		constexpr auto damageProperties = 0x50;
		constexpr auto damageDistances = 0x58;
		constexpr auto damageMultipliers = 0x60;
		constexpr auto damageTypes = 0x68;
		constexpr auto rendererToScale = 0x70;
		constexpr auto firstPersonRenderer = 0x78;
		constexpr auto createDecals = 0x80;
		constexpr auto doDefaultHitEffects = 0x81;
		constexpr auto flybySound = 0x88;
		constexpr auto flybySoundDistance = 0x90;
		constexpr auto closeFlybySound = 0x98;
		constexpr auto closeFlybyDistance = 0xa0;
		constexpr auto tumbleSpeed = 0xa4;
		constexpr auto tumbleAxis = 0xa8;
		constexpr auto swimScale = 0xb4;
		constexpr auto swimSpeed = 0xc0;
		constexpr auto owner = 0xd0;
		constexpr auto sourceWeaponPrefab = 0xd8;
		constexpr auto sourceProjectilePrefab = 0xe0;
		constexpr auto mod = 0xe8;
		constexpr auto projectileID = 0xf0;
		constexpr auto seed = 0xf4;
		constexpr auto clientsideEffect = 0xf8;
		constexpr auto clientsideAttack = 0xf9;
		constexpr auto integrity = 0xfc;
		constexpr auto maxDistance = 0x100;
		constexpr auto modifier = 0x104;
		constexpr auto invisible = 0x114;
		constexpr auto currentVelocity = 0x118;
		constexpr auto currentPosition = 0x124;
		constexpr auto traveledDistance = 0x130;
		constexpr auto traveledTime = 0x134;
		constexpr auto launchTime = 0x138;
		constexpr auto sentPosition = 0x13c;
		constexpr auto previousPosition = 0x148;
		constexpr auto previousVelocity = 0x154;
		constexpr auto previousTraveledTime = 0x160;
		constexpr auto isRicochet = 0x164;
		constexpr auto isRetiring = 0x165;
		constexpr auto flybyPlayed = 0x166;
		constexpr auto wasFacingPlayer = 0x167;
		constexpr auto flybyPlane = 0x168;
		constexpr auto flybyRay = 0x178;
		constexpr auto cleanupAction = 0x190;
		constexpr auto hitTest = 0x198;
		constexpr auto swimRandom = 0x1a0;
		constexpr auto _waterMaterialID = 0x4;
		constexpr auto cachedWaterString = 0x8;

		constexpr auto CalculateDamage = 0x693d50;
		constexpr auto get_isAuthoritative = 0x698b00;
		constexpr auto get_isAlive = 0x698ac0;
		constexpr auto Retire = 0x6978b0;
		constexpr auto Cleanup = 0x6942a0;
		constexpr auto AdjustVelocity = 0x693ae0;
		constexpr auto InitializeVelocity = 0x696af0;
		constexpr auto OnDisable = 0x696d60;
		constexpr auto Update = 0x698720;
		constexpr auto SetEffectScale = 0x697e80;
		constexpr auto DoFlybySound = 0x6944a0;
		constexpr auto CalculateEffectScale = 0x694200;
		constexpr auto UpdateVelocity = 0x698440;
		constexpr auto DoVelocityUpdate = 0x696300;
		constexpr auto DoMovement = 0x6951c0;
		constexpr auto DoWaterHit = 0x6966e0;
		constexpr auto DoRicochet = 0x695ee0;
		constexpr auto DoHit = 0x694ab0;
		constexpr auto AdditiveImpactEffect = 0x3628c0;
		constexpr auto Reflect = 0x697030;
		constexpr auto Refract = 0x697380;
		constexpr auto RandomRotation = 0x696f30;
		constexpr auto Launch = 0x696cd0;
		constexpr auto FleshMaterialID = 0x6969f0;
		constexpr auto WaterMaterialID = 0x698820;
		constexpr auto IsWaterMaterial = 0x696ba0;
		constexpr auto ShouldStopProjectile = 0x698380;
		constexpr auto ctor = 0x698920;
		constexpr auto cctor = 0x3628c0;
		};

	namespace PlayerEyes {
		constexpr auto DuckOffset = 0xc;
		constexpr auto CrawlOffset = 0x18;
		constexpr auto thirdPersonSleepingOffset = 0x20;
		constexpr auto defaultLazyAim = 0x30;
		constexpr auto viewOffset = 0x38;
		constexpr auto bodyRotationk__BackingField = 0x44;
		constexpr auto headAnglesk__BackingField = 0x54;
		constexpr auto rotationLookk__BackingField = 0x60;
		constexpr auto IsAltLookingLegsThresholdk__BackingField = 0x70;

		constexpr auto get_worldMountedPosition = 0xc2d890;
		constexpr auto get_worldStandingPosition = 0xc2da80;
		constexpr auto get_worldCrouchedPosition = 0xc2d790;
		constexpr auto get_worldCrawlingPosition = 0xc2d690;
		constexpr auto get_position = 0xc2d150;
		constexpr auto get_BodyLeanOffset = 0xc2c810;
		constexpr auto get_center = 0xc2cb70;
		constexpr auto get_offset = 0xc2ce90;
		constexpr auto get_rotation = 0xc2d5e0;
		constexpr auto set_rotation = 0xc2dbe0;
		constexpr auto get_bodyRotation = 0xc2ca90;
		constexpr auto set_bodyRotation = 0xc2dbb0;
		constexpr auto get_headAngles = 0xc2ce70;
		constexpr auto set_headAngles = 0xc2dbc0;
		constexpr auto get_rotationLook = 0xc2d5d0;
		constexpr auto set_rotationLook = 0xc2dbd0;
		constexpr auto get_parentRotation = 0xc2cfc0;
		constexpr auto get_canUpdateViewAngles = 0xc2caa0;
		constexpr auto get_IsAltLookingLegsThreshold = 0xc2ca80;
		constexpr auto set_IsAltLookingLegsThreshold = 0xc2dba0;
		constexpr auto FrameUpdate = 0xc2b3a0;
		constexpr auto UpdateAltLegsThreshold = 0xc2c430;
		constexpr auto UpdateCamera = 0xc2c4a0;
		constexpr auto DoFirstPersonCamera = 0xc29480;
		constexpr auto DoInEyeCamera = 0xc29ad0;
		constexpr auto DoThirdPersonCamera = 0xc29e20;
		constexpr auto DoDeathCamera = 0xc28ea0;
		constexpr auto ApplyCameraMoves = 0xc28870;
		constexpr auto MovementForward = 0xc2c0b0;
		constexpr auto MovementRight = 0xc2c270;
		constexpr auto BodyRay = 0xc28a50;
		constexpr auto BodyForward = 0xc28900;
		constexpr auto BodyRight = 0xc28c00;
		constexpr auto BodyUp = 0xc28d50;
		constexpr auto HeadRay = 0xc2bcf0;
		constexpr auto HeadForward = 0xc2bc00;
		constexpr auto HeadRight = 0xc2bed0;
		constexpr auto HeadUp = 0xc2bfc0;
		constexpr auto GetLookRotation = 0xc2ba80;
		constexpr auto GetAimRotation = 0xc2b9c0;
		constexpr auto ctor = 0xc2c750;
		constexpr auto cctor = 0xc2c650;
		};

	namespace ViewModel {
		constexpr auto viewModelPrefab = 0x18;
		constexpr auto targetEntity = 0x20;
		constexpr auto instance = 0x28;

		constexpr auto Deploy = 0xada5f0;
		constexpr auto OnDisable = 0xada960;
		constexpr auto Holster = 0xada8f0;
		constexpr auto Clear = 0xada480;
		constexpr auto OnFrame = 0xada9d0;
		constexpr auto Play = 0xadab30;
		constexpr auto ResetTrigger = 0xadac60;
		constexpr auto Trigger = 0xadaf70;
		constexpr auto CrossFade = 0xada550;
		constexpr auto SetBool = 0xadad90;
		constexpr auto SetFloat = 0xadaed0;
		constexpr auto set_ironSights = 0xadb090;
		constexpr auto ctor = 0x2f91f0;
		};

	namespace BowWeapon {
		constexpr auto attackReady = 0x378;
		constexpr auto arrowBack = 0x37c;
		constexpr auto swapArrows = 0x380;
		constexpr auto wasAiming = 0x388;

		constexpr auto OnRpcMessage = 0x5379a0;
		constexpr auto ClientInit = 0x537100;
		constexpr auto OnSignal = 0x537a90;
		constexpr auto UpdatePullbackThink = 0x537ee0;
		constexpr auto CancelPullbackThink = 0x537090;
		constexpr auto PullbackThink = 0x537da0;
		constexpr auto OnInput = 0x537620;
		constexpr auto OnHolstered = 0x5375e0;
		constexpr auto DoAttack = 0x537170;
		constexpr auto IsAiming = 0x537410;
		constexpr auto OnViewmodelEvent = 0x537c00;
		constexpr auto OnFrame = 0x5374b0;
		constexpr auto PostNetworkUpdate = 0x537c70;
		constexpr auto TryReload = 0x537e70;
		constexpr auto ProcessSpectatorViewmodel = 0x537d10;
		constexpr auto ctor = 0x51e690;
		};

	namespace AttackEntity {
		constexpr auto deployDelay = 0x1f8;
		constexpr auto repeatDelay = 0x1fc;
		constexpr auto animationDelay = 0x200;
		constexpr auto effectiveRange = 0x204;
		constexpr auto npcDamageScale = 0x208;
		constexpr auto attackLengthMin = 0x20c;
		constexpr auto attackLengthMax = 0x210;
		constexpr auto attackSpacing = 0x214;
		constexpr auto aiAimSwayOffset = 0x218;
		constexpr auto aiAimCone = 0x21c;
		constexpr auto aiOnlyInRange = 0x220;
		constexpr auto CloseRangeAddition = 0x224;
		constexpr auto MediumRangeAddition = 0x228;
		constexpr auto LongRangeAddition = 0x22c;
		constexpr auto CanUseAtMediumRange = 0x230;
		constexpr auto CanUseAtLongRange = 0x231;
		constexpr auto reloadSounds = 0x238;
		constexpr auto thirdPersonMeleeSound = 0x240;
		constexpr auto recoilCompDelayOverride = 0x248;
		constexpr auto wantsRecoilComp = 0x24c;
		constexpr auto nextAttackTime = 0x250;
		constexpr auto lastTickTime = 0x254;
		constexpr auto nextTickTime = 0x258;
		constexpr auto timeSinceDeploy = 0x25c;
		constexpr auto lastRecoilCompTime = 0x260;
		constexpr auto startAimingDirection = 0x264;
		constexpr auto wasDoingRecoilComp = 0x270;
		constexpr auto reductionSpeed = 0x274;

		constexpr auto GetInheritedVelocity = 0x832d30;
		constexpr auto get_NextAttackTime = 0x833260;
		constexpr auto GetAttackStats = 0x3628c0;
		constexpr auto StartAttackCooldownRaw = 0x832fa0;
		constexpr auto StartAttackCooldown = 0x832fd0;
		constexpr auto ResetAttackCooldown = 0x832f40;
		constexpr auto HasAttackCooldown = 0x832da0;
		constexpr auto GetAttackCooldown = 0x832c30;
		constexpr auto GetAttackIdle = 0x832cb0;
		constexpr auto CalculateCooldownTime = 0x832060;
		constexpr auto IsFullyDeployed = 0x832dd0;
		constexpr auto ProcessInputTime = 0x832e70;
		constexpr auto OnInput = 0x832e10;
		constexpr auto OnDeploy = 0x832df0;
		constexpr auto SpectatorNotifyDeploy = 0x832f50;
		constexpr auto SpectatorNotifyTick = 0x832f60;
		constexpr auto RecoilCompReady = 0x832ec0;
		constexpr auto AddPunch = 0x831eb0;
		constexpr auto DoRecoilCompensation = 0x8321a0;
		constexpr auto ctor = 0x833170;
		constexpr auto cctor = 0x833100;
		};

	namespace BaseEntity {
		constexpr auto ragdoll = 0x78;
		constexpr auto positionLerp = 0x80;
		constexpr auto menuOptions = 0x88;
		constexpr auto globalBroadcastProtocol = 0x8;
		constexpr auto broadcastProtocol = 0x90;
		constexpr auto links = 0x98;
		constexpr auto linkedToNeighbours = 0xa0;
		constexpr auto _pendingFileRequests = 0xa8;
		constexpr auto updateParentingAction = 0xb0;
		constexpr auto addedToParentEntity = 0xb8;
		constexpr auto itemSkin = 0xc0;
		constexpr auto entitySlots = 0xc8;
		constexpr auto triggers = 0xd0;
		constexpr auto isVisible = 0xd8;
		constexpr auto isAnimatorVisible = 0xd9;
		constexpr auto isShadowVisible = 0xda;
		constexpr auto localOccludee = 0xe0;
		constexpr auto Weightk__BackingField = 0x100;
		constexpr auto bounds = 0x104;
		constexpr auto impactEffect = 0x120;
		constexpr auto enableSaving = 0x128;
		constexpr auto syncPosition = 0x129;
		constexpr auto model = 0x130;
		constexpr auto flags = 0x138;
		constexpr auto parentBone = 0x13c;
		constexpr auto skinID = 0x140;
		constexpr auto _components = 0x148;
		constexpr auto HasBrain = 0x150;
		constexpr auto _name = 0x158;
		constexpr auto OwnerIDk__BackingField = 0x160;

		constexpr auto OnRpcMessage = 0x7fa660;
		constexpr auto GetEntityMenu = 0x7f5ba0;
		constexpr auto GetMenuOptions = 0x3628c0;
		constexpr auto get_HasMenuOptions = 0x498ad0;
		constexpr auto GetItemOptions = 0x7f6250;
		constexpr auto GetMovementModify = 0x7f6ca0;
		constexpr auto GetExtrapolationTime = 0x7f5ce0;
		constexpr auto GetInterpolationDelay = 0x7f60a0;
		constexpr auto GetInterpolationInertia = 0x7f6130;
		constexpr auto GetInterpolationSmoothing = 0x7f61c0;
		constexpr auto GetAngularVelocityClient = 0x7f5640;
		constexpr auto GetLocalVelocityClient = 0x7f64a0;
		constexpr auto DrawInterpolationState = 0x7f3b40;
		constexpr auto LerpIdleDisable = 0x7f8fd0;
		constexpr auto ClientInit = 0x7f2dc0;
		constexpr auto ClientOnEnable = 0x7f2e70;
		constexpr auto OnPositionalFromNetwork = 0x7fa2f0;
		constexpr auto StartLerping = 0x7fd6b0;
		constexpr auto StopLerping = 0x7fd830;
		constexpr auto ShouldLerp = 0x7fd2a0;
		constexpr auto SetNetworkPosition = 0x7fcd90;
		constexpr auto SetNetworkRotation = 0x7fcf00;
		constexpr auto DoDestroyEffects = 0x7f3b20;
		constexpr auto SpawnGibs = 0x7fd3a0;
		constexpr auto DoNetworkDestroy = 0x2fb0e0;
		constexpr auto PostNetworkUpdate = 0x7fba20;
		constexpr auto OnBecameRagdoll = 0x7fa030;
		constexpr auto GetMenuInformation = 0x7f6620;
		constexpr auto HideMenuItems = 0x7f79f0;
		constexpr auto GetMenuItems = 0x7f6910;
		constexpr auto OnUse = 0x7fb810;
		constexpr auto OnUseHeld = 0x7fb5f0;
		constexpr auto OnUseStopped = 0x3628c0;
		constexpr auto OnRendered = 0x3628c0;
		constexpr auto DoClientDestroy = 0x7f3870;
		constexpr auto GetEyeTransform = 0x7f5d70;
		constexpr auto NeedsCrosshair = 0x7f9f20;
		constexpr auto AlwaysShowCrosshair = 0x498ad0;
		constexpr auto ShouldDestroyWithGroup = 0x7fd1f0;
		constexpr auto DetachEffects = 0x7f3460;
		constexpr auto OnVoiceData = 0x3628c0;
		constexpr auto LookingAtTick = 0x3628c0;
		constexpr auto get_RealisticMass = 0x73c880;
		constexpr auto OnCollision = 0x7fa0e0;
		constexpr auto ReceiveCollisionMessages = 0x7fbb10;
		constexpr auto DebugClient = 0x3628c0;
		constexpr auto OnDebugStart = 0x7fa130;
		constexpr auto DebugText = 0x7f33a0;
		constexpr auto HasFlag = 0x7f79b0;
		constexpr auto ParentHasFlag = 0x7fb980;
		constexpr auto SetFlag = 0x7fcbc0;
		constexpr auto IsOn = 0x7f8000;
		constexpr auto IsOpen = 0x7f8010;
		constexpr auto IsOnFire = 0x7f7ff0;
		constexpr auto IsLocked = 0x7f7d40;
		constexpr auto IsDebugging = 0x7f7b50;
		constexpr auto IsDisabled = 0x7f7b60;
		constexpr auto IsBroken = 0x7f7b40;
		constexpr auto IsBusy = 0x7f79f0;
		constexpr auto GetLogColor = 0x7f65d0;
		constexpr auto OnFlagsChanged = 0x7fa1f0;
		constexpr auto IsOccupied = 0x7f7e40;
		constexpr auto FindLink = 0x7f4800;
		constexpr auto EntityLinkBroadcast = 0x7f42e0;
		constexpr auto ReceivedEntityLinkBroadcast = 0x7fbba0;
		constexpr auto GetEntityLinks = 0x7f5b60;
		constexpr auto LinkToEntity = 0x7f9000;
		constexpr auto LinkToNeighbours = 0x7f9260;
		constexpr auto InitEntityLinks = 0x7f7a00;
		constexpr auto FreeEntityLinks = 0x7f5560;
		constexpr auto RefreshEntityLinks = 0x7fbc10;
		constexpr auto RequestFileFromServer = 0x7fc490;
		constexpr auto CL_ReceiveFileRequest = 0x7f2ad0;
		constexpr auto CompletePendingFileRequests = 0x7f3070;
		constexpr auto UpdateChildren = 0x7fd9f0;
		constexpr auto UpdateParenting = 0x7fe760;
		constexpr auto SetParentTransform = 0x7fcfd0;
		constexpr auto UpdateDisableState = 0x7fdd60;
		constexpr auto HasClientTransformOffset = 0x7f7810;
		constexpr auto RemoveClientTransformOffset = 0x7fbf20;
		constexpr auto AddClientTransformOffset = 0x7f2490;
		constexpr auto OnParentChangingClient = 0x3628c0;
		constexpr auto GetBuildingPrivilege = 0x7f5af0;
		constexpr auto ServerRPC = 0x7fc880;
		constexpr auto ServerRPCStart = 0x7fc6d0;
		constexpr auto ServerRPCSend = 0x7fc660;
		constexpr auto CL_RPCMessage = 0x7f27e0;
		constexpr auto SendSignalBroadcast = 0x7fc5b0;
		constexpr auto SignalFromServerEx = 0x7fd2c0;
		constexpr auto SignalFromServer = 0x7fd350;
		constexpr auto OnSignal = 0x3628c0;
		constexpr auto OnSkinChanged = 0x7fb260;
		constexpr auto OnSkinRefreshStart = 0x7fb5d0;
		constexpr auto OnSkinRefreshEnd = 0x7fb5b0;
		constexpr auto PreProcess = 0x7fba40;
		constexpr auto HasAnySlot = 0x7f7730;
		constexpr auto GetSlot = 0x7f72b0;
		constexpr auto GetSlotAnchorName = 0x7f7170;
		constexpr auto GetSlotAnchor = 0x7f7200;
		constexpr auto HasSlot = 0x498ad0;
		constexpr auto get_Traits = 0x513d80;
		constexpr auto HasTrait = 0x7f79c0;
		constexpr auto HasAnyTrait = 0x7f77e0;
		constexpr auto EnterTrigger = 0x7f4230;
		constexpr auto LeaveTrigger = 0x7f8f30;
		constexpr auto RemoveFromTriggers = 0x7fbf80;
		constexpr auto ForceUpdateTriggersAction = 0x7f4ae0;
		constexpr auto ForceUpdateTriggers = 0x7f4b10;
		constexpr auto MakeVisible = 0x7f9f00;
		constexpr auto UpdateCullingSpheres = 0x7fdbe0;
		constexpr auto RegisterForCulling = 0x7fbcf0;
		constexpr auto OnVisibilityChanged = 0x3628c0;
		constexpr auto UnregisterFromCulling = 0x7fd970;
		constexpr auto UpdateCullingBounds = 0x7fdb10;
		constexpr auto CheckVisibility = 0x7f2da0;
		constexpr auto CalcEntityVisUpdateRate = 0x7f2c80;
		constexpr auto DebugDrawCullingBounds = 0x7f32d0;
		constexpr auto get_Weight = 0x7fef50;
		constexpr auto set_Weight = 0x7fef70;
		constexpr auto get_Components = 0x7feed0;
		constexpr auto ToPlayer = 0x513d80;
		constexpr auto get_IsNpc = 0x498ad0;
		constexpr auto InitShared = 0x7ec160;
		constexpr auto DestroyShared = 0x7ef080;
		constexpr auto ResetState = 0x7fc540;
		constexpr auto InheritedVelocityScale = 0x581f40;
		constexpr auto GetInheritedProjectileVelocity = 0x7f5ef0;
		constexpr auto GetInheritedThrowVelocity = 0x7f6070;
		constexpr auto GetInheritedDropVelocity = 0x7f5e10;
		constexpr auto GetParentVelocity = 0x7f6eb0;
		constexpr auto GetWorldVelocity = 0x7f7310;
		constexpr auto GetLocalVelocity = 0x7f6530;
		constexpr auto GetAngularVelocity = 0x7f56d0;
		constexpr auto WorldSpaceBounds = 0x7fec00;
		constexpr auto PivotPoint = 0x2f99e0;
		constexpr auto CenterPoint = 0x7f2d60;
		constexpr auto ClosestPoint = 0x7f2fc0;
		constexpr auto TriggerPoint = 0x7f2d60;
		constexpr auto Distance = 0x7f3730;
		constexpr auto SqrDistance = 0x7fd570;
		constexpr auto Distance2D = 0x7f3590;
		constexpr auto SqrDistance2D = 0x7fd3d0;
		constexpr auto IsVisible = 0x7f8b70;
		constexpr auto IsVisibleSpecificLayers = 0x7f8520;
		constexpr auto IsVisibleAndCanSee = 0x7f8310;
		constexpr auto IsOlderThan = 0x7f7f50;
		constexpr auto IsOutside = 0x7f8020;
		constexpr auto WaterFactor = 0x7fe770;
		constexpr auto AirFactor = 0x7f2530;
		constexpr auto WaterTestFromVolumes = 0x7fe940;
		constexpr auto IsInWaterVolume = 0x7f7c00;
		constexpr auto BlocksWaterFor = 0x498ad0;
		constexpr auto Health = 0x581f40;
		constexpr auto MaxHealth = 0x581f40;
		constexpr auto MaxVelocity = 0x581f40;
		constexpr auto BoundsPadding = 0x7f2570;
		constexpr auto PenetrationResistance = 0x73c880;
		constexpr auto GetImpactEffect = 0x7f5e00;
		constexpr auto OnAttacked = 0x3628c0;
		constexpr auto GetItem = 0x513d80;
		constexpr auto GiveItem = 0x7f7700;
		constexpr auto CanBeLooted = 0x4d1bf0;
		constexpr auto GetEntity = 0x4b0e80;
		constexpr auto ToString = 0x7fd880;
		constexpr auto Categorize = 0x7f2d30;
		constexpr auto Log = 0x7f9a50;
		constexpr auto SetModel = 0x7fcce0;
		constexpr auto GetModel = 0x71af80;
		constexpr auto GetBones = 0x7f5770;
		constexpr auto FindBone = 0x7f4690;
		constexpr auto FindBoneID = 0x7f45b0;
		constexpr auto FindClosestBone = 0x7f4740;
		constexpr auto get_OwnerID = 0x7fef40;
		constexpr auto set_OwnerID = 0x7fef60;
		constexpr auto ShouldBlockProjectiles = 0x4d1bf0;
		constexpr auto ShouldInheritNetworkGroup = 0x4d1bf0;
		constexpr auto SupportsChildDeployables = 0x498ad0;
		constexpr auto BroadcastEntityMessage = 0x7f2580;
		constexpr auto OnEntityMessage = 0x3628c0;
		constexpr auto Load = 0x7f9550;
		constexpr auto ctor = 0x7fedc0;
		constexpr auto cctor = 0x7fed40;
		};

	namespace UnityEngine_Time {

		constexpr auto get_time = 0x21776c0;
		constexpr auto get_deltaTime = 0x2177510;
		constexpr auto get_fixedTime = 0x2177570;
		constexpr auto get_unscaledTime = 0x2177720;
		constexpr auto get_unscaledDeltaTime = 0x21776f0;
		constexpr auto get_fixedDeltaTime = 0x2177540;
		constexpr auto set_fixedDeltaTime = 0x2177750;
		constexpr auto get_maximumDeltaTime = 0x21775d0;
		constexpr auto set_maximumDeltaTime = 0x2177790;
		constexpr auto get_smoothDeltaTime = 0x2177660;
		constexpr auto get_timeScale = 0x2177690;
		constexpr auto set_timeScale = 0x21777d0;
		constexpr auto get_frameCount = 0x21775a0;
		constexpr auto get_renderedFrameCount = 0x2177630;
		constexpr auto get_realtimeSinceStartup = 0x2177600;
		};

	namespace UnityEngine_Physics {

		constexpr auto get_gravity = 0x2298650;
		constexpr auto get_queriesHitBackfaces = 0x2298690;
		constexpr auto set_queriesHitBackfaces = 0x2298700;
		constexpr auto get_defaultPhysicsScene = 0x22985d0;
		constexpr auto IgnoreCollision = 0x2294e80;
		constexpr auto Raycast = 0x2296df0;
		constexpr auto Linecast = 0x2294fc0;
		constexpr auto CapsuleCast = 0x22946c0;
		constexpr auto SphereCast = 0x2298060;
		constexpr auto BoxCast = 0x2294100;
		constexpr auto Internal_RaycastAll = 0x2294f50;
		constexpr auto RaycastAll = 0x2295b30;
		constexpr auto RaycastNonAlloc = 0x2296250;
		constexpr auto Query_SphereCastAll = 0x22959d0;
		constexpr auto SphereCastAll = 0x2297ad0;
		constexpr auto SyncTransforms = 0x2298530;
		constexpr auto get_autoSyncTransforms = 0x2298560;
		constexpr auto set_autoSyncTransforms = 0x22986c0;
		constexpr auto OverlapSphereNonAlloc = 0x22958a0;
		constexpr auto CheckSphere_Internal = 0x2294ca0;
		constexpr auto CheckSphere = 0x2294d10;
		constexpr auto CapsuleCastNonAlloc = 0x2294460;
		constexpr auto SphereCastNonAlloc = 0x2297c60;
		constexpr auto CheckCapsule_Internal = 0x2294a00;
		constexpr auto CheckCapsule = 0x2294a70;
		constexpr auto CheckBox_Internal = 0x2294840;
		constexpr auto CheckBox = 0x22948b0;
		constexpr auto OverlapBox_Internal = 0x2295580;
		constexpr auto OverlapBox = 0x22955f0;
		constexpr auto OverlapBoxNonAlloc = 0x2295420;
		constexpr auto OverlapCapsuleNonAlloc = 0x22957b0;
		constexpr auto get_gravity_Injected = 0x2298610;
		constexpr auto get_defaultPhysicsScene_Injected = 0x2298590;
		constexpr auto Internal_RaycastAll_Injected = 0x2294ee0;
		constexpr auto Query_SphereCastAll_Injected = 0x2295960;
		constexpr auto CheckSphere_Internal_Injected = 0x2294c30;
		constexpr auto CheckCapsule_Internal_Injected = 0x2294990;
		constexpr auto CheckBox_Internal_Injected = 0x22947d0;
		constexpr auto OverlapBox_Internal_Injected = 0x2295510;
		};

	namespace AssetNameCache {
		constexpr auto lower = 0x8;
		constexpr auto upper = 0x10;

		constexpr auto LookupName = 0x82e640;
		constexpr auto LookupNameLower = 0x82e380;
		constexpr auto LookupNameUpper = 0x82e4e0;
		constexpr auto GetName = 0x82e2c0;
		constexpr auto GetNameLower = 0x82e140;
		constexpr auto GetNameUpper = 0x82e200;
		constexpr auto cctor = 0x82e780;
		};

	namespace UnityEngine_Component {

		constexpr auto get_transform = 0x18203a0;
		constexpr auto get_gameObject = 0x1820360;
		constexpr auto GetComponent = 0x181ff40;
		constexpr auto GetComponentFastPath = 0x181fdd0;
		constexpr auto GetComponentInChildren = 0x181fe30;
		constexpr auto GetComponentsInChildren = 0x1820020;
		constexpr auto GetComponentInParent = 0x181fec0;
		constexpr auto GetComponents = 0x1820080;
		constexpr auto GetComponentsForListInternal = 0x181ffc0;
		constexpr auto CompareTag = 0x181fd50;
		constexpr auto SendMessageUpwards = 0x1820170;
		constexpr auto SendMessage = 0x18202b0;
		constexpr auto BroadcastMessage = 0x181fce0;
		constexpr auto ctor = 0x181a730;
		};

	namespace UnityEngine_Transform {

		constexpr auto ctor = 0x18f27e0;
		constexpr auto get_position = 0x217a560;
		constexpr auto set_position = 0x217aee0;
		constexpr auto get_localPosition = 0x217a230;
		constexpr auto set_localPosition = 0x217ac50;
		constexpr auto get_eulerAngles = 0x2179f30;
		constexpr auto set_eulerAngles = 0x217a9a0;
		constexpr auto get_localEulerAngles = 0x217a150;
		constexpr auto set_localEulerAngles = 0x217ab50;
		constexpr auto get_right = 0x217a5b0;
		constexpr auto set_right = 0x217af30;
		constexpr auto get_up = 0x217a7a0;
		constexpr auto set_up = 0x217b120;
		constexpr auto get_forward = 0x2179fc0;
		constexpr auto set_forward = 0x217aa50;
		constexpr auto get_rotation = 0x217a750;
		constexpr auto set_rotation = 0x217b0d0;
		constexpr auto get_localRotation = 0x217a2d0;
		constexpr auto set_localRotation = 0x217acf0;
		constexpr auto get_localScale = 0x217a370;
		constexpr auto set_localScale = 0x217ad90;
		constexpr auto get_parent = 0x2178950;
		constexpr auto set_parent = 0x217ade0;
		constexpr auto get_parentInternal = 0x2178950;
		constexpr auto set_parentInternal = 0x2179930;
		constexpr auto GetParent = 0x2178950;
		constexpr auto SetParent = 0x2179930;
		constexpr auto get_worldToLocalMatrix = 0x217a940;
		constexpr auto get_localToWorldMatrix = 0x217a410;
		constexpr auto SetPositionAndRotation = 0x21799e0;
		constexpr auto Translate = 0x2179d20;
		constexpr auto Rotate = 0x2179340;
		constexpr auto RotateAroundInternal = 0x21790a0;
		constexpr auto RotateAround = 0x2179100;
		constexpr auto LookAt = 0x2178ed0;
		constexpr auto Internal_LookAt = 0x2178a70;
		constexpr auto TransformDirection = 0x2179ae0;
		constexpr auto InverseTransformDirection = 0x2178b30;
		constexpr auto TransformVector = 0x2179c60;
		constexpr auto InverseTransformVector = 0x2178cb0;
		constexpr auto TransformPoint = 0x2179ba0;
		constexpr auto InverseTransformPoint = 0x2178bf0;
		constexpr auto get_root = 0x2178990;
		constexpr auto GetRoot = 0x2178990;
		constexpr auto get_childCount = 0x2179ef0;
		constexpr auto DetachChildren = 0x2178760;
		constexpr auto SetAsFirstSibling = 0x2179850;
		constexpr auto SetAsLastSibling = 0x2179890;
		constexpr auto SetSiblingIndex = 0x2179a40;
		constexpr auto GetSiblingIndex = 0x21789d0;
		constexpr auto FindRelativeTransformWithPath = 0x21787a0;
		constexpr auto Find = 0x2178800;
		constexpr auto get_lossyScale = 0x217a4c0;
		constexpr auto IsChildOf = 0x2178d10;
		constexpr auto get_hasChanged = 0x217a110;
		constexpr auto set_hasChanged = 0x217ab00;
		constexpr auto GetEnumerator = 0x21788e0;
		constexpr auto GetChild = 0x21788a0;
		constexpr auto get_position_Injected = 0x217a510;
		constexpr auto set_position_Injected = 0x217ae90;
		constexpr auto get_localPosition_Injected = 0x217a1e0;
		constexpr auto set_localPosition_Injected = 0x217ac00;
		constexpr auto get_rotation_Injected = 0x217a700;
		constexpr auto set_rotation_Injected = 0x217b080;
		constexpr auto get_localRotation_Injected = 0x217a280;
		constexpr auto set_localRotation_Injected = 0x217aca0;
		constexpr auto get_localScale_Injected = 0x217a320;
		constexpr auto set_localScale_Injected = 0x217ad40;
		constexpr auto get_worldToLocalMatrix_Injected = 0x217a8f0;
		constexpr auto get_localToWorldMatrix_Injected = 0x217a3c0;
		constexpr auto SetPositionAndRotation_Injected = 0x2179980;
		constexpr auto RotateAroundInternal_Injected = 0x2179040;
		constexpr auto Internal_LookAt_Injected = 0x2178a10;
		constexpr auto TransformDirection_Injected = 0x2179a80;
		constexpr auto InverseTransformDirection_Injected = 0x2178ad0;
		constexpr auto TransformVector_Injected = 0x2179c00;
		constexpr auto InverseTransformVector_Injected = 0x2178c50;
		constexpr auto TransformPoint_Injected = 0x2179b40;
		constexpr auto InverseTransformPoint_Injected = 0x2178b90;
		constexpr auto get_lossyScale_Injected = 0x217a470;
		};

	namespace GameTrace {

		constexpr auto TraceAll = 0xc87540;
		constexpr auto Trace = 0xc87e40;
		};

	namespace HitTest {
		constexpr auto type = 0x10;
		constexpr auto AttackRay = 0x14;
		constexpr auto Radius = 0x2c;
		constexpr auto Forgiveness = 0x30;
		constexpr auto MaxDistance = 0x34;
		constexpr auto RayHit = 0x38;
		constexpr auto MultiHit = 0x64;
		constexpr auto BestHit = 0x65;
		constexpr auto DidHit = 0x66;
		constexpr auto damageProperties = 0x68;
		constexpr auto gameObject = 0x70;
		constexpr auto collider = 0x78;
		constexpr auto ignoreEntity = 0x80;
		constexpr auto HitEntity = 0x88;
		constexpr auto HitPoint = 0x90;
		constexpr auto HitNormal = 0x9c;
		constexpr auto HitDistance = 0xa8;
		constexpr auto HitTransform = 0xb0;
		constexpr auto HitPart = 0xb8;
		constexpr auto HitMaterial = 0xc0;

		constexpr auto HitPointWorld = 0x7574b0;
		constexpr auto HitNormalWorld = 0x757390;
		constexpr auto BuildAttackMessage = 0x756b00;
		constexpr auto Clear = 0x7572b0;
		constexpr auto ctor = 0x2fb0e0;
		};

	namespace UnityEngine_Quaternion {
		constexpr auto x = 0x10;
		constexpr auto y = 0x14;
		constexpr auto z = 0x18;
		constexpr auto w = 0x1c;

		constexpr auto FromToRotation = 0x18f9000;
		constexpr auto Inverse = 0x18f93f0;
		constexpr auto Slerp = 0x18f9e70;
		constexpr auto SlerpUnclamped = 0x18f9d50;
		constexpr auto Lerp = 0x18f9620;
		constexpr auto LerpUnclamped = 0x18f9500;
		constexpr auto Internal_FromEulerRad = 0x18f9160;
		constexpr auto Internal_ToEulerRad = 0x18f9310;
		constexpr auto AngleAxis = 0x18f89e0;
		constexpr auto LookRotation = 0x18f9880;
		constexpr auto ctor = 0xf2ca0;
		constexpr auto get_identity = 0x18fa370;
		constexpr auto op_Multiply = 0x18fa790;
		constexpr auto IsEqualUsingDot = 0x18f9480;
		constexpr auto op_Equality = 0x18fa3e0;
		constexpr auto op_Inequality = 0x18fa4a0;
		constexpr auto Dot = 0x18f8ba0;
		constexpr auto SetLookRotation = 0x217850;
		constexpr auto Angle = 0x18f8a80;
		constexpr auto Internal_MakePositive = 0x18f91f0;
		constexpr auto get_eulerAngles = 0x217970;
		constexpr auto Euler = 0x18f8cd0;
		constexpr auto RotateTowards = 0x18f9920;
		constexpr auto GetHashCode = 0x2177e0;
		constexpr auto Equals = 0x217700;
		constexpr auto ToString = 0x217960;
		constexpr auto cctor = 0x18fa160;
		constexpr auto FromToRotation_Injected = 0x18f8fa0;
		constexpr auto Inverse_Injected = 0x18f93a0;
		constexpr auto Slerp_Injected = 0x18f9e00;
		constexpr auto SlerpUnclamped_Injected = 0x18f9ce0;
		constexpr auto Lerp_Injected = 0x18f95b0;
		constexpr auto LerpUnclamped_Injected = 0x18f9490;
		constexpr auto Internal_FromEulerRad_Injected = 0x18f9110;
		constexpr auto Internal_ToEulerRad_Injected = 0x18f92c0;
		constexpr auto AngleAxis_Injected = 0x18f8980;
		constexpr auto LookRotation_Injected = 0x18f96d0;
		};

	namespace GamePhysics {
		constexpr auto hitBufferB = 0x8;
		constexpr auto colBuffer = 0x10;

		constexpr auto CheckSphere = 0x6f7090;
		constexpr auto CheckCapsule = 0x6f68a0;
		constexpr auto CheckOBB = 0x6f6f60;
		constexpr auto CheckBounds = 0x6f6740;
		constexpr auto CheckInsideNonConvexMesh = 0x6f6bb0;
		constexpr auto CheckInsideAnyCollider = 0x6f6a20;
		constexpr auto OverlapSphere = 0x6f84a0;
		constexpr auto CapsuleSweep = 0x6f64a0;
		constexpr auto OverlapCapsule = 0x6f8220;
		constexpr auto OverlapOBB = 0x6f8350;
		constexpr auto OverlapBounds = 0x6f8080;
		constexpr auto BufferToList = 0x6f6300;
		constexpr auto HitBufferToList = 0x6f72d0;
		constexpr auto Trace = 0x6f8b50;
		constexpr auto TraceAll = 0x6f8a70;
		constexpr auto TraceAllUnordered = 0x6f8780;
		constexpr auto LineOfSightRadius = 0x6f7c60;
		constexpr auto LineOfSight = 0x6f7e50;
		constexpr auto LineOfSightInternal = 0x6f7440;
		constexpr auto Verify = 0x6f8d60;
		constexpr auto CompareEntity = 0x6f7150;
		constexpr auto HandleTerrainCollision = 0x6f71c0;
		constexpr auto Sort = 0x6f8680;
		constexpr auto cctor = 0x6f9010;
		};

	namespace WaterLevel {

		constexpr auto Factor = 0xc10a90;
		constexpr auto Test = 0xc12c40;
		constexpr auto GetWaterDepth = 0xc11360;
		constexpr auto GetOverallWaterDepth = 0xc11210;
		constexpr auto GetBuoyancyWaterInfo = 0xc10c70;
		constexpr auto GetWaterInfo = 0xc116f0;
		constexpr auto GetWaterInfoFromVolumes = 0xc114a0;
		};

	namespace System_Math {
		constexpr auto roundPower10Double = 0x8;

		constexpr auto Acos = 0x166f980;
		constexpr auto Asin = 0x166f990;
		constexpr auto Atan = 0x166f9b0;
		constexpr auto Atan2 = 0x166f9a0;
		constexpr auto Ceiling = 0x166f9c0;
		constexpr auto Cos = 0x166f9d0;
		constexpr auto Cosh = 0x166f9e0;
		constexpr auto Floor = 0x166fa10;
		constexpr auto InternalRound = 0x166fa20;
		constexpr auto InternalTruncate = 0x166fc80;
		constexpr auto Sin = 0x1670710;
		constexpr auto Tan = 0x1670750;
		constexpr auto Sinh = 0x1670720;
		constexpr auto Round = 0x16703f0;
		constexpr auto SplitFractionDouble = 0x1670730;
		constexpr auto Truncate = 0x1670760;
		constexpr auto Sqrt = 0x1670740;
		constexpr auto Log = 0x166fe50;
		constexpr auto Log10 = 0x166fce0;
		constexpr auto Exp = 0x166fa00;
		constexpr auto Pow = 0x1670260;
		constexpr auto Abs = 0x166f8b0;
		constexpr auto AbsHelper = 0x166f750;
		constexpr auto Max = 0x166ff00;
		constexpr auto Min = 0x1670250;
		constexpr auto Sign = 0x16706d0;
		constexpr auto DivRem = 0x166f9f0;
		constexpr auto cctor = 0x1670810;
		};

	namespace UnityEngine_Mathf {

		constexpr auto ClosestPowerOfTwo = 0x18e8f90;
		constexpr auto IsPowerOfTwo = 0x18e93b0;
		constexpr auto NextPowerOfTwo = 0x18e9b80;
		constexpr auto GammaToLinearSpace = 0x18e9280;
		constexpr auto LinearToGammaSpace = 0x18e9610;
		constexpr auto FloatToHalf = 0x18e9180;
		constexpr auto HalfToFloat = 0x18e92c0;
		constexpr auto PerlinNoise = 0x18e9bc0;
		constexpr auto Sin = 0x18e9e10;
		constexpr auto Cos = 0x18e8fd0;
		constexpr auto Tan = 0x18ea2f0;
		constexpr auto Asin = 0x18e8d30;
		constexpr auto Acos = 0x18e8c20;
		constexpr auto Atan = 0x18e8e10;
		constexpr auto Atan2 = 0x18e8d90;
		constexpr auto Sqrt = 0x18ea290;
		constexpr auto Abs = 0x18e8bc0;
		constexpr auto Min = 0x18e9820;
		constexpr auto Max = 0x18e9790;
		constexpr auto Pow = 0x18e9c10;
		constexpr auto Exp = 0x18e9120;
		constexpr auto Log = 0x18e9710;
		constexpr auto Log10 = 0x18e9650;
		constexpr auto Ceil = 0x18e8ed0;
		constexpr auto Floor = 0x18e9220;
		constexpr auto Round = 0x18e9d90;
		constexpr auto CeilToInt = 0x18e8e70;
		constexpr auto FloorToInt = 0x18e91c0;
		constexpr auto RoundToInt = 0x18e9d30;
		constexpr auto Sign = 0x18e9df0;
		constexpr auto Clamp = 0x18e8f50;
		constexpr auto Clamp01 = 0x18e8f30;
		constexpr auto Lerp = 0x18e9570;
		constexpr auto LerpUnclamped = 0x18e9550;
		constexpr auto LerpAngle = 0x18e93f0;
		constexpr auto MoveTowards = 0x18e9a90;
		constexpr auto MoveTowardsAngle = 0x18e9830;
		constexpr auto SmoothStep = 0x18ea1d0;
		constexpr auto Approximately = 0x18e8c80;
		constexpr auto SmoothDamp = 0x18ea000;
		constexpr auto Repeat = 0x18e9c90;
		constexpr auto InverseLerp = 0x18e9300;
		constexpr auto DeltaAngle = 0x18e9030;
		constexpr auto cctor = 0x18ea350;
		};

	namespace Door {
		constexpr auto __menuOption_Menu_CloseDoor = 0x270;
		constexpr auto __menuOption_Menu_KnockDoor = 0x2c8;
		constexpr auto __menuOption_Menu_OpenDoor = 0x320;
		constexpr auto __menuOption_Menu_ToggleHatch = 0x378;
		constexpr auto knockEffect = 0x3d0;
		constexpr auto canTakeLock = 0x3d8;
		constexpr auto hasHatch = 0x3d9;
		constexpr auto canTakeCloser = 0x3da;
		constexpr auto canTakeKnocker = 0x3db;
		constexpr auto canNpcOpen = 0x3dc;
		constexpr auto canHandOpen = 0x3dd;
		constexpr auto isSecurityDoor = 0x3de;
		constexpr auto vehiclePhysBoxes = 0x3e0;
		constexpr auto checkPhysBoxesOnOpen = 0x3e8;
		constexpr auto vehicleCollisionSfx = 0x3f0;
		constexpr auto ClosedColliderRoots = 0x3f8;
		constexpr auto closeHash = 0x4;

		constexpr auto GetMenuOptions = 0xaa88a0;
		constexpr auto get_HasMenuOptions = 0xaaa380;
		constexpr auto OnRpcMessage = 0xaa9cd0;
		constexpr auto ResetState = 0xaaa120;
		constexpr auto HasSlot = 0xaa9490;
		constexpr auto CanPickup = 0xaa8730;
		constexpr auto Menu_OpenDoor = 0xaa9880;
		constexpr auto Menu_OpenDoor_Proxy = 0xaa9760;
		constexpr auto Menu_OpenDoorStart = 0xaa9720;
		constexpr auto Menu_OpenDoor_ShowIf = 0xaa9840;
		constexpr auto Menu_CloseDoor = 0xaa9630;
		constexpr auto Menu_CloseDoor_Proxy = 0xaa9510;
		constexpr auto Menu_CloseDoorStart = 0xaa94d0;
		constexpr auto Menu_CloseDoor_ShowIf = 0xaa95f0;
		constexpr auto Menu_KnockDoor = 0xaa96e0;
		constexpr auto Menu_KnockDoor_ShowIf = 0xaa9670;
		constexpr auto Menu_ToggleHatch = 0xaa98d0;
		constexpr auto Menu_ToggleHatch_ShowIf = 0xaa98c0;
		constexpr auto NeedsCrosshair = 0x4d1bf0;
		constexpr auto OnDoorInterrupted = 0xaa9910;
		constexpr auto ReverseDoorAnimation = 0xaaa130;
		constexpr auto BoundsPadding = 0x7a3ad0;
		constexpr auto OnObjects = 0x3628c0;
		constexpr auto OnEmpty = 0x3628c0;
		constexpr auto OnFlagsChanged = 0xaa9ba0;
		constexpr auto ctor = 0xaaa360;
		constexpr auto cctor = 0xaaa2f0;
		};

	namespace UnityEngine_Object {
		constexpr auto m_CachedPtr = 0x10;

		constexpr auto GetInstanceID = 0x18f30d0;
		constexpr auto GetHashCode = 0x18f30c0;
		constexpr auto Equals = 0x18f2ce0;
		constexpr auto op_Implicit = 0x18f4560;
		constexpr auto CompareBaseObjects = 0x18f29f0;
		constexpr auto IsNativeObjectAlive = 0x18f41b0;
		constexpr auto GetCachedPtr = 0x1818780;
		constexpr auto get_name = 0x18f4380;
		constexpr auto set_name = 0x18f47e0;
		constexpr auto Instantiate = 0x18f3c30;
		constexpr auto Destroy = 0x18f2be0;
		constexpr auto DestroyImmediate = 0x18f2b90;
		constexpr auto FindObjectsOfType = 0x18f3080;
		constexpr auto DontDestroyOnLoad = 0x18f2ca0;
		constexpr auto get_hideFlags = 0x18f4340;
		constexpr auto set_hideFlags = 0x18f47a0;
		constexpr auto CheckNullArgument = 0x18f2980;
		constexpr auto FindObjectOfType = 0x18f2ff0;
		constexpr auto ToString = 0x18f4250;
		constexpr auto op_Equality = 0x18f43f0;
		constexpr auto op_Inequality = 0x18f4630;
		constexpr auto GetOffsetOfInstanceIDInCPlusPlusObject = 0x18f3240;
		constexpr auto Internal_CloneSingle = 0x18f3f70;
		constexpr auto Internal_CloneSingleWithParent = 0x18f3f10;
		constexpr auto Internal_InstantiateSingle = 0x18f4120;
		constexpr auto Internal_InstantiateSingleWithParent = 0x18f4020;
		constexpr auto GetName = 0x18f3200;
		constexpr auto SetName = 0x18f4200;
		constexpr auto FindObjectFromInstanceID = 0x18f2fb0;
		constexpr auto ctor = 0x2fb0e0;
		constexpr auto cctor = 0x18f4300;
		constexpr auto Internal_InstantiateSingle_Injected = 0x18f40c0;
		constexpr auto Internal_InstantiateSingleWithParent_Injected = 0x18f3fb0;
		};

	namespace BaseMelee {
		constexpr auto canThrowAsProjectile = 0x280;
		constexpr auto canAiHearIt = 0x281;
		constexpr auto onlyThrowAsProjectile = 0x282;
		constexpr auto damageProperties = 0x288;
		constexpr auto damageTypes = 0x290;
		constexpr auto maxDistance = 0x298;
		constexpr auto attackRadius = 0x29c;
		constexpr auto isAutomatic = 0x2a0;
		constexpr auto blockSprintOnAttack = 0x2a1;
		constexpr auto strikeFX = 0x2a8;
		constexpr auto useStandardHitEffects = 0x2b0;
		constexpr auto aiStrikeDelay = 0x2b4;
		constexpr auto swingEffect = 0x2b8;
		constexpr auto materialStrikeFX = 0x2c0;
		constexpr auto heartStress = 0x2c8;
		constexpr auto gathering = 0x2d0;
		constexpr auto throwReady = 0x2d8;

		constexpr auto OnRpcMessage = 0xa24ee0;
		constexpr auto GetInheritedVelocity = 0x84dcc0;
		constexpr auto DoThrow = 0xa24200;
		constexpr auto CreateProjectile = 0xa23bc0;
		constexpr auto GetAttackStats = 0xa248f0;
		constexpr auto DoAttackShared = 0xa23d70;
		constexpr auto OnInput = 0xa24b00;
		constexpr auto get_CanAttack = 0x4d1bf0;
		constexpr auto get_CanThrow = 0x4d1bf0;
		constexpr auto ClientAttack = 0x3628c0;
		constexpr auto OnHolstered = 0xa24ae0;
		constexpr auto ProcessAttack = 0xa25090;
		constexpr auto DoAttack = 0xa23fc0;
		constexpr auto DoViewmodelImpact = 0xa24860;
		constexpr auto OnViewmodelEvent = 0xa24fd0;
		constexpr auto ProcessSpectatorViewmodel = 0xa253d0;
		constexpr auto ProcessSpectatorViewmodelEvent = 0xa25320;
		constexpr auto GetGatherInfoFromIndex = 0xa24950;
		constexpr auto CanHit = 0x4d1bf0;
		constexpr auto TotalDamage = 0xa25480;
		constexpr auto CanBeUsedInWater = 0x4d1bf0;
		constexpr auto GetStrikeEffectPath = 0xa24980;
		constexpr auto ctor = 0xa255e0;
		};

	namespace ItemModProjectile {
		constexpr auto projectileObject = 0x18;
		constexpr auto mods = 0x20;
		constexpr auto ammoType = 0x28;
		constexpr auto numProjectiles = 0x2c;
		constexpr auto projectileSpread = 0x30;
		constexpr auto projectileVelocity = 0x34;
		constexpr auto projectileVelocitySpread = 0x38;
		constexpr auto useCurve = 0x3c;
		constexpr auto spreadScalar = 0x40;
		constexpr auto attackEffectOverride = 0x48;
		constexpr auto barrelConditionLoss = 0x50;
		constexpr auto category = 0x58;

		constexpr auto GetRandomVelocity = 0xa12ff0;
		constexpr auto GetSpreadScalar = 0xa13030;
		constexpr auto GetIndexedSpreadScalar = 0xa12f60;
		constexpr auto GetAverageVelocity = 0xa12f50;
		constexpr auto GetMinVelocity = 0xa12fe0;
		constexpr auto GetMaxVelocity = 0xa12fd0;
		constexpr auto IsAmmo = 0xa13090;
		constexpr auto ServerProjectileHit = 0xa130a0;
		constexpr auto ctor = 0xa13170;
		};

	namespace RecoilProperties {
		constexpr auto recoilYawMin = 0x18;
		constexpr auto recoilYawMax = 0x1c;
		constexpr auto recoilPitchMin = 0x20;
		constexpr auto recoilPitchMax = 0x24;
		constexpr auto timeToTakeMin = 0x28;
		constexpr auto timeToTakeMax = 0x2c;
		constexpr auto ADSScale = 0x30;
		constexpr auto movementPenalty = 0x34;
		constexpr auto clampPitch = 0x38;
		constexpr auto pitchCurve = 0x40;
		constexpr auto yawCurve = 0x48;
		constexpr auto useCurves = 0x50;
		constexpr auto curvesAsScalar = 0x51;
		constexpr auto shotsUntilMax = 0x54;
		constexpr auto maxRecoilRadius = 0x58;
		constexpr auto overrideAimconeWithCurve = 0x5c;
		constexpr auto aimconeCurveScale = 0x60;
		constexpr auto aimconeCurve = 0x68;
		constexpr auto aimconeProbabilityCurve = 0x70;
		constexpr auto newRecoilOverride = 0x78;

		constexpr auto GetRecoil = 0x6abe00;
		constexpr auto ctor = 0x6abe80;
		};

	namespace ItemDefinition {
		constexpr auto itemid = 0x18;
		constexpr auto shortname = 0x20;
		constexpr auto displayName = 0x28;
		constexpr auto displayDescription = 0x30;
		constexpr auto iconSprite = 0x38;
		constexpr auto category = 0x40;
		constexpr auto selectionPanel = 0x44;
		constexpr auto maxDraggable = 0x48;
		constexpr auto itemType = 0x4c;
		constexpr auto amountType = 0x50;
		constexpr auto occupySlots = 0x54;
		constexpr auto stackable = 0x58;
		constexpr auto quickDespawn = 0x5c;
		constexpr auto rarity = 0x60;
		constexpr auto spawnAsBlueprint = 0x64;
		constexpr auto inventorySelectSound = 0x68;
		constexpr auto inventoryGrabSound = 0x70;
		constexpr auto inventoryDropSound = 0x78;
		constexpr auto physImpactSoundDef = 0x80;
		constexpr auto condition = 0x88;
		constexpr auto hidden = 0xa0;
		constexpr auto flags = 0xa4;
		constexpr auto steamItem = 0xa8;
		constexpr auto steamDlc = 0xb0;
		constexpr auto Parent = 0xb8;
		constexpr auto worldModelPrefab = 0xc0;
		constexpr auto isRedirectOf = 0xc8;
		constexpr auto redirectVendingBehaviour = 0xd0;
		constexpr auto itemMods = 0xd8;
		constexpr auto Traits = 0xe0;
		constexpr auto skins = 0xe8;
		constexpr auto _skins2 = 0xf0;
		constexpr auto panel = 0xf8;
		constexpr auto ItemModWearablek__BackingField = 0x100;
		constexpr auto isHoldablek__BackingField = 0x108;
		constexpr auto isUsablek__BackingField = 0x109;
		constexpr auto CraftableWithSkink__BackingField = 0x10a;
		constexpr auto Children = 0x110;

		constexpr auto get_skins2 = 0xa095f0;
		constexpr auto InvalidateWorkshopSkinCache = 0xa09340;
		constexpr auto get_Blueprint = 0xa09450;
		constexpr auto get_craftingStackable = 0xa09510;
		constexpr auto HasFlag = 0xa090c0;
		constexpr auto Initialize = 0xa090d0;
		constexpr auto GetDisplayName = 0xa08fc0;
		constexpr auto GetDescriptionText = 0xa08ef0;
		constexpr auto FindIconSprite = 0xa08b90;
		constexpr auto get_isWearable = 0xa09590;
		constexpr auto get_ItemModWearable = 0xa09500;
		constexpr auto set_ItemModWearable = 0xa09800;
		constexpr auto get_isHoldable = 0xa09570;
		constexpr auto set_isHoldable = 0xa09810;
		constexpr auto get_isUsable = 0xa09580;
		constexpr auto set_isUsable = 0xa09820;
		constexpr auto get_HasSkins = 0xa094a0;
		constexpr auto get_CraftableWithSkin = 0xa09490;
		constexpr auto set_CraftableWithSkin = 0xa097f0;
		constexpr auto ctor = 0xa093e0;
		constexpr auto Initializeb__45_0 = 0xa09360;
		};

	namespace PlayerInput {
		constexpr auto state = 0x20;
		constexpr auto hadInputBuffer = 0x28;
		constexpr auto bodyRotation = 0x2c;
		constexpr auto bodyAngles = 0x3c;
		constexpr auto headRotation = 0x48;
		constexpr auto headAngles = 0x58;
		constexpr auto recoilAngles = 0x64;
		constexpr auto viewDelta = 0x70;
		constexpr auto headLerp = 0x78;
		constexpr auto mouseWheelUp = 0x7c;
		constexpr auto mouseWheelDn = 0x80;
		constexpr auto autorun = 0x84;
		constexpr auto toggleDuck = 0x85;
		constexpr auto toggleAds = 0x86;
		constexpr auto lastAdsEntity = 0x88;
		constexpr auto pendingMouseDelta = 0x8c;
		constexpr auto offsetAngles = 0x98;
		constexpr auto ignoredButtons = 0xa4;
		constexpr auto hasKeyFocus = 0xa8;

		constexpr auto OnDisable = 0xc30a90;
		constexpr auto FrameUpdate = 0xc2fc60;
		constexpr auto CanToggleAds = 0xc2f680;
		constexpr auto Flip = 0xc2faf0;
		constexpr auto ResetMouseDelta = 0xc30b10;
		constexpr auto AddMouseDelta = 0xc2dee0;
		constexpr auto AdjustMouseMovement = 0xc2e1b0;
		constexpr auto UpdateViewAngles = 0xc30d10;
		constexpr auto ApplyViewAngles = 0xc2e3f0;
		constexpr auto SetViewVars = 0xc30bf0;
		constexpr auto FinalizeRecoil = 0xc2f910;
		constexpr auto ResetOffsetAngles = 0xc30b80;
		constexpr auto ClientAngles = 0xc2f8e0;
		constexpr auto ClientLookVars = 0xc2f8f0;
		constexpr auto HeadAngles = 0xc1f280;
		constexpr auto HeadLookVars = 0xc30090;
		constexpr auto ModifyInputState = 0xc30a00;
		constexpr auto IsButtonDownNative = 0xc30500;
		constexpr auto BuildInputState = 0xc2ef90;
		constexpr auto IsAiming = 0xc303b0;
		constexpr auto UpdateButton = 0xc30c80;
		constexpr auto IgnoreCurrentButtons = 0xc300b0;
		constexpr auto get_hasOnlyPartialKeyInput = 0xc31000;
		constexpr auto get_hasNoKeyInput = 0xc30e70;
		constexpr auto UpdateKeyFocus = 0xc30cf0;
		constexpr auto IgnoreCurrentKeys = 0xc301c0;
		constexpr auto ctor = 0xc30e00;
		};

	namespace PlayerModel {
		constexpr auto pm_downlimit = 0x4;
		constexpr auto pm_upspine = 0x8;
		constexpr auto pm_downspine = 0xc;
		constexpr auto pm_lookoffset = 0x10;
		constexpr auto pm_anglesmoothspeed = 0x1c;
		constexpr auto pm_nohold = 0x20;
		constexpr auto pm_ladder = 0x24;
		constexpr auto pm_minweight = 0x28;
		constexpr auto _smoothAimWeight = 0x18;
		constexpr auto _smoothVelocity = 0x1c;
		constexpr auto _smoothlookAngle = 0x20;
		constexpr auto allowMountedHeadLook = 0x2c;
		constexpr auto smoothLookDir = 0x30;
		constexpr auto lastSafeLookDir = 0x3c;
		constexpr auto Shoulders = 0x48;
		constexpr auto AdditionalSpineBones = 0x50;
		constexpr auto FinishedLegWearables = 0x30;
		constexpr auto LegParts = 0x58;
		constexpr auto fakeSpineBones = 0x60;
		constexpr auto extraLeanBack = 0x68;
		constexpr auto drawState = 0x6c;
		constexpr auto timeInArmsMode = 0x70;
		constexpr auto speed = 0x38;
		constexpr auto acceleration = 0x3c;
		constexpr auto rotationYaw = 0x40;
		constexpr auto forward = 0x44;
		constexpr auto right = 0x48;
		constexpr auto up = 0x4c;
		constexpr auto ducked = 0x50;
		constexpr auto grounded = 0x54;
		constexpr auto crawling = 0x58;
		constexpr auto waterlevel = 0x5c;
		constexpr auto attack = 0x60;
		constexpr auto attack_alt = 0x64;
		constexpr auto deploy = 0x68;
		constexpr auto reload = 0x6c;
		constexpr auto throwWeapon = 0x70;
		constexpr auto holster = 0x74;
		constexpr auto aiming = 0x78;
		constexpr auto onLadder = 0x7c;
		constexpr auto posing = 0x80;
		constexpr auto poseType = 0x84;
		constexpr auto relaxGunPose = 0x88;
		constexpr auto vehicle_aim_yaw = 0x8c;
		constexpr auto vehicle_aim_speed = 0x90;
		constexpr auto onPhone = 0x94;
		constexpr auto usePoseTransition = 0x98;
		constexpr auto leftFootIK = 0x9c;
		constexpr auto rightFootIK = 0xa0;
		constexpr auto vehicleSteering = 0xa4;
		constexpr auto sitReaction = 0xa8;
		constexpr auto forwardReaction = 0xac;
		constexpr auto rightReaction = 0xb0;
		constexpr auto collision = 0x78;
		constexpr auto censorshipCube = 0x80;
		constexpr auto censorshipCubeBreasts = 0x88;
		constexpr auto jawBone = 0x90;
		constexpr auto neckBone = 0x98;
		constexpr auto headBone = 0xa0;
		constexpr auto eyeController = 0xa8;
		constexpr auto blinkController = 0xb0;
		constexpr auto SpineBones = 0xb8;
		constexpr auto leftFootBone = 0xc0;
		constexpr auto rightFootBone = 0xc8;
		constexpr auto leftHandPropBone = 0xd0;
		constexpr auto rightHandPropBone = 0xd8;
		constexpr auto rightHandTarget = 0xe0;
		constexpr auto leftHandTargetPosition = 0xec;
		constexpr auto leftHandTargetRotation = 0xf8;
		constexpr auto rightHandTargetPosition = 0x108;
		constexpr auto rightHandTargetRotation = 0x114;
		constexpr auto steeringTargetDegrees = 0x124;
		constexpr auto rightFootTargetPosition = 0x128;
		constexpr auto rightFootTargetRotation = 0x134;
		constexpr auto leftFootTargetPosition = 0x144;
		constexpr auto leftFootTargetRotation = 0x150;
		constexpr auto CinematicAnimationController = 0x160;
		constexpr auto DefaultAvatar = 0x168;
		constexpr auto CinematicAvatar = 0x170;
		constexpr auto DefaultHoldType = 0x178;
		constexpr auto SleepGesture = 0x180;
		constexpr auto CrawlToIncapacitatedGesture = 0x188;
		constexpr auto StandToIncapacitatedGesture = 0x190;
		constexpr auto CurrentGesture = 0x198;
		constexpr auto MaleSkin = 0x1a0;
		constexpr auto FemaleSkin = 0x1a8;
		constexpr auto subsurfaceProfile = 0x1b0;
		constexpr auto voiceVolume = 0x1b8;
		constexpr auto skinColor = 0x1bc;
		constexpr auto skinNumber = 0x1c0;
		constexpr auto meshNumber = 0x1c4;
		constexpr auto hairNumber = 0x1c8;
		constexpr auto skinType = 0x1cc;
		constexpr auto movementSounds = 0x1d0;
		constexpr auto showSash = 0x1d8;
		constexpr auto tempPoseType = 0x1dc;
		constexpr auto underwearSkin = 0x1e0;
		constexpr auto overrideSkinSeedk__BackingField = 0x1e8;
		constexpr auto AimAnglesk__BackingField = 0x1f0;
		constexpr auto LookAnglesk__BackingField = 0x200;
		constexpr auto modelState = 0x210;
		constexpr auto position = 0x218;
		constexpr auto velocity = 0x224;
		constexpr auto speedOverride = 0x230;
		constexpr auto newVelocity = 0x23c;
		constexpr auto rotation = 0x248;
		constexpr auto mountedRotation = 0x258;
		constexpr auto smoothLeftFootIK = 0x268;
		constexpr auto smoothRightFootIK = 0x274;
		constexpr auto drawShadowOnly = 0x280;
		constexpr auto isIncapacitated = 0x281;
		constexpr auto flinchLocation = 0x284;
		constexpr auto visible = 0x288;
		constexpr auto nameTag = 0x290;
		constexpr auto animatorNeedsWarmup = 0x298;
		constexpr auto isLocalPlayer = 0x299;
		constexpr auto aimSoundDef = 0x2a0;
		constexpr auto aimEndSoundDef = 0x2a8;
		constexpr auto InGesture = 0x2b0;
		constexpr auto CurrentGestureConfig = 0x2b8;
		constexpr auto InCinematic = 0x2c0;
		constexpr auto defaultAnimatorController = 0x2c8;
		constexpr auto _multiMesh = 0x2d0;
		constexpr auto _animator = 0x2d8;
		constexpr auto _lodGroup = 0x2e0;
		constexpr auto _currentGesture = 0x2e8;
		constexpr auto holdTypeLock = 0x2f0;
		constexpr auto hasHeldEntity = 0x2f4;
		constexpr auto wasMountedRightAim = 0x2f5;
		constexpr auto cachedMask = 0x2f8;
		constexpr auto cachedConstructionMask = 0x2fc;
		constexpr auto WorkshopHeldEntity = 0x300;
		constexpr auto wasCrawling = 0x308;
		constexpr auto mountedSpineLookWeight = 0x30c;
		constexpr auto mountedAnimSpeed = 0x310;
		constexpr auto preserveBones = 0x314;
		constexpr auto downLimitOverride = 0x318;
		constexpr auto IsNpck__BackingField = 0x320;
		constexpr auto timeSinceReactionStart = 0x324;
		constexpr auto timeSinceLeftFootTest = 0x328;
		constexpr auto cachedLeftFootPos = 0x32c;
		constexpr auto cachedLeftFootNormal = 0x338;
		constexpr auto timeSinceRightFootTest = 0x344;
		constexpr auto cachedRightFootPos = 0x348;
		constexpr auto cachedRightFootNormal = 0x354;

		constexpr auto SetMountedLookAtOverride = 0xc3e1d0;
		constexpr auto SpineIk = 0xc3e5f0;
		constexpr auto ParentArmsToCamera = 0xc3c3e0;
		constexpr auto OnAnimatorIK = 0xc3ba50;
		constexpr auto HandIK = 0xc3a0b0;
		constexpr auto FootIK = 0xc368c0;
		constexpr auto HeadIK = 0xc3a510;
		constexpr auto get_ShouldDoLegs = 0xc43ee0;
		constexpr auto get_ShouldShowHands = 0xc43f60;
		constexpr auto ClearLegs = 0xc35560;
		constexpr auto RebuildLegs = 0xc3cd90;
		constexpr auto InitializeLegSpineBones = 0xc3abf0;
		constexpr auto UpdateLegsBeforeRender = 0xc3fe00;
		constexpr auto UpdateLegsDisable = 0xc40cf0;
		constexpr auto AddLegRenderer = 0xc34a90;
		constexpr auto SwapLegBone = 0xc3efe0;
		constexpr auto GetFlat = 0xc39520;
		constexpr auto RebuildAll = 0xc3c990;
		constexpr auto get_overrideSkinSeed = 0xc44240;
		constexpr auto set_overrideSkinSeed = 0xc44280;
		constexpr auto get_IsFemale = 0xc43e90;
		constexpr auto get_SkinSet = 0xc44040;
		constexpr auto get_AimAngles = 0xc43d40;
		constexpr auto set_AimAngles = 0xc44250;
		constexpr auto get_LookAngles = 0xc43ed0;
		constexpr auto set_LookAngles = 0xc44270;
		constexpr auto get_GestureAllowsSpineMovement = 0xc43df0;
		constexpr auto get_GestureAllowsRootMotion = 0xc43d50;
		constexpr auto get_IsFirstPerson = 0xc43ea0;
		constexpr auto get_IsNpc = 0xc43ec0;
		constexpr auto set_IsNpc = 0xc44260;
		constexpr auto get_multiMesh = 0xc441a0;
		constexpr auto get_animator = 0xc44060;
		constexpr auto get_lodGroup = 0xc44100;
		constexpr auto GetTargetVelocity = 0xc39f50;
		constexpr auto Awake = 0xc354c0;
		constexpr auto OnEnable = 0xc3be70;
		constexpr auto OnDisable = 0xc3bb80;
		constexpr auto SetDefaultAnimatorWeights = 0xc3dab0;
		constexpr auto UpdateMultiMesh = 0xc41390;
		constexpr auto UpdateCensorship = 0xc3f520;
		constexpr auto UpdateCollider = 0xc3f9a0;
		constexpr auto UpdateModelState = 0xc41340;
		constexpr auto UpdatePosition = 0xc41e00;
		constexpr auto UpdateRotation = 0xc41f20;
		constexpr auto UpdateLocalVelocity = 0xc41270;
		constexpr auto UpdateVelocity = 0xc428a0;
		constexpr auto UpdateParameters = 0xc41520;
		constexpr auto UpdateFrom = 0xc3fc10;
		constexpr auto UpdateGlobalShaderConstants = 0xc3fc70;
		constexpr auto LateCycle = 0xc3b3d0;
		constexpr auto FrameUpdate = 0xc38b30;
		constexpr auto FrameUpdate_Default = 0xc38150;
		constexpr auto FrameUpdate_Sleeping = 0xc38860;
		constexpr auto FrameUpdate_Incapacitated = 0xc382c0;
		constexpr auto FrameUpdate_OnLadder = 0xc38590;
		constexpr auto GetAim360 = 0xc392b0;
		constexpr auto UpdateVehicleAim360 = 0xc423b0;
		constexpr auto ResetCurrentState = 0xc3d960;
		constexpr auto DoAimingSounds = 0xc36060;
		constexpr auto SetAimSounds = 0xc3da70;
		constexpr auto SetMountedLookAtWeight = 0xc3e1e0;
		constexpr auto SetMountedAnimationSpeed = 0xc3e1c0;
		constexpr auto UpdateLocalPlayerPosition = 0xc40f20;
		constexpr auto Attack = 0xc35440;
		constexpr auto AltAttack = 0xc35100;
		constexpr auto Deploy = 0xc35fb0;
		constexpr auto Reload = 0xc3d6e0;
		constexpr auto Holster = 0xc3ab70;
		constexpr auto Flinch = 0xc36860;
		constexpr auto SetReactionAnim = 0xc3e1f0;
		constexpr auto OnReactionEnded = 0xc3c3b0;
		constexpr auto Throw = 0xc3f310;
		constexpr auto Gesture = 0xc38f20;
		constexpr auto FadeInGestureUpperBodyLayer = 0xc362c0;
		constexpr auto FadeOutGestureUpperBodyLayer = 0xc365b0;
		constexpr auto FadeInGestureFullBodyLayer = 0xc361a0;
		constexpr auto FadeOutGestureFullBodyLayer = 0xc363e0;
		constexpr auto AnimatorWarmup = 0xc351b0;
		constexpr auto AlwaysAnimate = 0xc35180;
		constexpr auto SetHoldType = 0xc3de40;
		constexpr auto SetHasHeldEntity = 0xc3de30;
		constexpr auto FadeOutGestureLayer = 0xc36540;
		constexpr auto SetGesture = 0xc3dbe0;
		constexpr auto FadeOutPlayerGestureLayers = 0xc36710;
		constexpr auto StopGesture = 0xc3eee0;
		constexpr auto PlayCinematic = 0xc3c800;
		constexpr auto StopCinematic = 0xc3ee80;
		constexpr auto SetSpeedOverride = 0xc3e5d0;
		constexpr auto GetReplacementUnderwear = 0xc39e90;
		constexpr auto RemoveUnderwearParts = 0xc3d830;
		constexpr auto Clear = 0xc356c0;
		constexpr auto Rebuild = 0xc3d150;
		constexpr auto AddPart = 0xc34e20;
		constexpr auto RemovePart = 0xc3d760;
		constexpr auto HasPart = 0xc3a450;
		constexpr auto IsBarefoot = 0xc3b340;
		constexpr auto GetSkinColor = 0xc39ed0;
		constexpr auto SetSkinProperties = 0xc3e4b0;
		constexpr auto RefreshUnderwear = 0xc3d350;
		constexpr auto ForceModelSeed = 0xc37f20;
		constexpr auto FindBone = 0xc36830;
		constexpr auto GetBones = 0xc394f0;
		constexpr auto GetFootPlacement = 0xc39560;
		constexpr auto ApplyVisibility = 0xc35210;
		constexpr auto ToggleUpdateOffscreen = 0xc3f3b0;
		constexpr auto OnParentDestroying = 0xc3c2b0;
		constexpr auto WorkshopPreviewSetup = 0xc42cb0;
		constexpr auto ctor = 0xc43b90;
		constexpr auto cctor = 0xc43650;
		};

	namespace ProtoBuf_PlayerTeam {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto teamID = 0x18;
		constexpr auto teamName = 0x20;
		constexpr auto teamLeader = 0x28;
		constexpr auto members = 0x30;
		constexpr auto teamLifetime = 0x38;
		constexpr auto mapNote = 0x40;

		constexpr auto ResetToPool = 0x203e340;
		constexpr auto Dispose = 0x203df40;
		constexpr auto EnterPool = 0x10a09b0;
		constexpr auto LeavePool = 0x10a09e0;
		constexpr auto CopyTo = 0x203c450;
		constexpr auto Copy = 0x203c690;
		constexpr auto Deserialize = 0x203d440;
		constexpr auto DeserializeLengthDelimited = 0x203c710;
		constexpr auto DeserializeLength = 0x203cbc0;
		constexpr auto FromProto = 0x203dfc0;
		constexpr auto WriteToStream = 0x203f200;
		constexpr auto WriteToStreamDelta = 0x203f220;
		constexpr auto ReadFromStream = 0x203e320;
		constexpr auto SerializeDelta = 0x203e7f0;
		constexpr auto Serialize = 0x203ee10;
		constexpr auto ToProtoBytes = 0x203f1f0;
		constexpr auto ToProto = 0x203f200;
		constexpr auto SerializeToBytes = 0x203ed00;
		constexpr auto SerializeLengthDelimited = 0x203ec50;
		constexpr auto ctor = 0x101b930;
		};

	namespace PlayerInventory {
		constexpr auto containerMain = 0x20;
		constexpr auto containerBelt = 0x28;
		constexpr auto containerWear = 0x30;
		constexpr auto crafting = 0x38;
		constexpr auto loot = 0x40;

		constexpr auto OnRpcMessage = 0xc31e60;
		constexpr auto Initialize = 0xc31ab0;
		constexpr auto DoDestroy = 0xc31290;
		constexpr auto ClientInit = 0xc31210;
		constexpr auto UpdatedItemContainer = 0xc322b0;
		constexpr auto FindItemUID = 0xc318d0;
		constexpr auto FindItemID = 0xc315f0;
		constexpr auto FindBySubEntityID = 0xc31370;
		constexpr auto FindItemIDs = 0xc317e0;
		constexpr auto FindContainer = 0xc31440;
		constexpr auto GetContainer = 0xc31a30;
		constexpr auto Load = 0xc31d10;
		constexpr auto GetAmount = 0xc319b0;
		constexpr auto AllItems = 0xc31140;
		constexpr auto AllItemsNoAlloc = 0xc31070;
		constexpr auto FindAmmo = 0xc31320;
		constexpr auto HasAmmo = 0xc31a50;
		constexpr auto ctor = 0xc324a0;
		};

	namespace ItemContainer {
		constexpr auto flags = 0x10;
		constexpr auto allowedContents = 0x14;
		constexpr auto onlyAllowedItems = 0x18;
		constexpr auto availableSlots = 0x20;
		constexpr auto capacity = 0x28;
		constexpr auto uid = 0x2c;
		constexpr auto dirty = 0x30;
		constexpr auto itemList = 0x38;
		constexpr auto temperature = 0x40;
		constexpr auto parent = 0x48;
		constexpr auto playerOwner = 0x50;
		constexpr auto entityOwner = 0x58;
		constexpr auto isServer = 0x60;
		constexpr auto maxStackSize = 0x64;

		constexpr auto HasFlag = 0xa06f30;
		constexpr auto SetFlag = 0xa07fe0;
		constexpr auto IsLocked = 0xa07100;
		constexpr auto PlayerItemInputBlocked = 0xa07c20;
		constexpr auto get_HasLimitedAllowedItems = 0xa083d0;
		constexpr auto OnChanged = 0xa07b80;
		constexpr auto ClientInitialize = 0xa06060;
		constexpr auto FindItemByUID = 0xa06610;
		constexpr auto IsFull = 0xa070b0;
		constexpr auto IsEmpty = 0xa07070;
		constexpr auto CanAccept = 0xa05f30;
		constexpr auto GetMaxTransferAmount = 0xa06bd0;
		constexpr auto SetOnlyAllowedItem = 0xa08000;
		constexpr auto SetOnlyAllowedItems = 0xa080c0;
		constexpr auto Insert = 0xa06f40;
		constexpr auto SlotTaken = 0xa08250;
		constexpr auto GetSlot = 0xa06d90;
		constexpr auto FindPosition = 0xa06900;
		constexpr auto Clear = 0xa05f80;
		constexpr auto Kill = 0xa07110;
		constexpr auto GetAmount = 0xa06a50;
		constexpr auto FindItemByItemID = 0xa064a0;
		constexpr auto FindItemsByItemName = 0xa067b0;
		constexpr auto FindBySubEntityID = 0xa06240;
		constexpr auto FindItemsByItemID = 0xa06700;
		constexpr auto Save = 0xa07c30;
		constexpr auto Load = 0xa073d0;
		constexpr auto GetOwnerPlayer = 0x4cc350;
		constexpr auto ContainerMaxStackSize = 0xa060a0;
		constexpr auto FindAmmo = 0xa06180;
		constexpr auto HasAmmo = 0xa06e60;
		constexpr auto GetAmmoAmount = 0xa06990;
		constexpr auto TotalItemAmount = 0xa08270;
		constexpr auto ContentsHash = 0xa060b0;
		constexpr auto FindContainer = 0xa063b0;
		constexpr auto CanAcceptItem = 0xa05ac0;
		constexpr auto ctor = 0xa08320;
		};

	namespace Item {
		constexpr auto amountOverride = 0x10;
		constexpr auto DefaultArmourBreakEffectPath = 0x8;
		constexpr auto _condition = 0x18;
		constexpr auto _maxCondition = 0x1c;
		constexpr auto info = 0x20;
		constexpr auto uid = 0x28;
		constexpr auto dirty = 0x2c;
		constexpr auto amount = 0x30;
		constexpr auto position = 0x34;
		constexpr auto busyTime = 0x38;
		constexpr auto removeTime = 0x3c;
		constexpr auto fuel = 0x40;
		constexpr auto isServer = 0x44;
		constexpr auto instanceData = 0x48;
		constexpr auto skin = 0x50;
		constexpr auto name = 0x58;
		constexpr auto text = 0x60;
		constexpr auto OnDirty = 0x68;
		constexpr auto flags = 0x70;
		constexpr auto contents = 0x78;
		constexpr auto parent = 0x80;
		constexpr auto worldEnt = 0x88;
		constexpr auto heldEntity = 0x98;

		constexpr auto UpdateAmountDisplay = 0xa16ff0;
		constexpr auto FormatAmount = 0xa15ab0;
		constexpr auto set_condition = 0xa17fc0;
		constexpr auto get_condition = 0x772410;
		constexpr auto set_maxCondition = 0xa18040;
		constexpr auto get_maxCondition = 0x7723e0;
		constexpr auto get_maxConditionNormalized = 0xa17d70;
		constexpr auto get_conditionNormalized = 0xa17900;
		constexpr auto set_conditionNormalized = 0xa17f20;
		constexpr auto get_hasCondition = 0xa17a00;
		constexpr auto get_isBroken = 0xa17c40;
		constexpr auto get_despawnMultiplier = 0xa17940;
		constexpr auto get_blueprintTargetDef = 0xa178d0;
		constexpr auto get_blueprintTarget = 0xa178f0;
		constexpr auto set_blueprintTarget = 0xa17e90;
		constexpr auto get_blueprintAmount = 0xa178c0;
		constexpr auto set_blueprintAmount = 0xa17e80;
		constexpr auto IsBlueprint = 0xa15fe0;
		constexpr auto add_OnDirty = 0xa17800;
		constexpr auto remove_OnDirty = 0xa17de0;
		constexpr auto HasFlag = 0xa15fd0;
		constexpr auto SetFlag = 0xa16af0;
		constexpr auto IsOn = 0xa16210;
		constexpr auto IsOnFire = 0xa16200;
		constexpr auto IsCooking = 0xa161c0;
		constexpr auto IsLocked = 0xa161d0;
		constexpr auto get_parentItem = 0xa17da0;
		constexpr auto MarkDirty = 0xa16640;
		constexpr auto OnChanged = 0xa16730;
		constexpr auto CollectedForCrafting = 0x3628c0;
		constexpr auto ReturnedFromCancelledCraft = 0x3628c0;
		constexpr auto IsChildContainer = 0xa16030;
		constexpr auto IsBusy = 0xa16000;
		constexpr auto BusyFor = 0xa15660;
		constexpr auto Remove = 0xa168e0;
		constexpr auto DoRemove = 0xa15910;
		constexpr auto SwitchOnOff = 0xa16c80;
		constexpr auto LockUnlock = 0xa165c0;
		constexpr auto get_temperature = 0xa17dc0;
		constexpr auto GetOwnerPlayer = 0xa15de0;
		constexpr auto CanBeHeld = 0xa15690;
		constexpr auto CanStack = 0xa156d0;
		constexpr auto IsValid = 0xa16220;
		constexpr auto SetWorldEntity = 0xa16b10;
		constexpr auto OnMovedToWorld = 0xa16850;
		constexpr auto GetWorldEntity = 0xa15e90;
		constexpr auto GetHeldEntity = 0xa15dc0;
		constexpr auto BeltBarSelect = 0xa155c0;
		constexpr auto GetTotalUISlots = 0xa15e00;
		constexpr auto GetFilledUISlots = 0xa15d30;
		constexpr auto HasAmmo = 0xa15eb0;
		constexpr auto FindAmmo = 0xa15960;
		constexpr auto GetAmmoAmount = 0xa15c10;
		constexpr auto ToString = 0xa16d00;
		constexpr auto FindItem = 0xa15a90;
		constexpr auto MaxStackable = 0xa166a0;
		constexpr auto get_iconSprite = 0xa17aa0;
		constexpr auto get_isLoadingIconSprite = 0xa17c70;
		constexpr auto get_Traits = 0xa178a0;
		constexpr auto Save = 0xa16940;
		constexpr auto Load = 0xa16230;
		constexpr auto ctor = 0xa177e0;
		constexpr auto cctor = 0xa176f0;
		constexpr auto get_iconSpriteb__95_0 = 0xa16fe0;
		constexpr auto get_isLoadingIconSpriteb__97_0 = 0xa16fe0;
		};

	namespace Model {
		constexpr auto collision = 0x18;
		constexpr auto rootBone = 0x20;
		constexpr auto headBone = 0x28;
		constexpr auto eyeBone = 0x30;
		constexpr auto animator = 0x38;
		constexpr auto skeleton = 0x40;
		constexpr auto boneTransforms = 0x48;
		constexpr auto boneNames = 0x50;
		constexpr auto boneDict = 0x58;
		constexpr auto skin = 0x60;
		constexpr auto _lodGroup = 0x68;

		constexpr auto OnEnable = 0x771970;
		constexpr auto BuildBoneDictionary = 0x7710e0;
		constexpr auto GetSkin = 0x58dc10;
		constexpr auto FindBoneInternal = 0x7711d0;
		constexpr auto FindBone = 0x771260;
		constexpr auto FindBoneID = 0x771190;
		constexpr auto GetBones = 0x771470;
		constexpr auto FindClosestBone = 0x7712d0;
		constexpr auto get_lodGroup = 0x772160;
		constexpr auto OnDisable = 0x771840;
		constexpr auto SyncBones = 0x771d40;
		constexpr auto Trigger = 0x7720b0;
		constexpr auto GetTransform = 0x7714a0;
		constexpr auto ApplyVisibility = 0x770f50;
		constexpr auto PreProcess = 0x771980;
		constexpr auto ctor = 0x2f91f0;
		};

	namespace MedicalTool {
		constexpr auto healDurationSelf = 0x280;
		constexpr auto healDurationOther = 0x284;
		constexpr auto healDurationOtherWounded = 0x288;
		constexpr auto maxDistanceOther = 0x28c;
		constexpr auto canUseOnOther = 0x290;
		constexpr auto canRevive = 0x291;
		constexpr auto useTarget = 0x298;
		constexpr auto resetTime = 0x2a0;

		constexpr auto OnRpcMessage = 0x957d80;
		constexpr auto GetTarget = 0x957620;
		constexpr auto AnyPressed = 0x957550;
		constexpr auto OnInput = 0x9579d0;
		constexpr auto OnViewmodelEvent = 0x958150;
		constexpr auto Reset = 0x958360;
		constexpr auto OnDeploy = 0x957970;
		constexpr auto OnHolstered = 0x9579a0;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x9582a0;
		constexpr auto ctor = 0x958380;
		};

	namespace HeldEntity {
		constexpr auto _punches = 0x168;
		constexpr auto punchAdded = 0x170;
		constexpr auto lastPunchTime = 0x17c;
		constexpr auto worldModelAnimator = 0x180;
		constexpr auto thirdPersonDeploySound = 0x188;
		constexpr auto thirdPersonAimSound = 0x190;
		constexpr auto thirdPersonAimEndSound = 0x198;
		constexpr auto viewModel = 0x1a0;
		constexpr auto isDeployed = 0x1a8;
		constexpr auto nextExamineTime = 0x1ac;
		constexpr auto handBone = 0x1b0;
		constexpr auto HoldAnimationOverride = 0x1b8;
		constexpr auto isBuildingTool = 0x1c0;
		constexpr auto hostileScore = 0x1c4;
		constexpr auto holsterInfo = 0x1c8;
		constexpr auto HeldCameraMode = 0x1d0;
		constexpr auto FirstPersonArmOffset = 0x1d4;
		constexpr auto FirstPersonArmRotation = 0x1e0;
		constexpr auto FirstPersonRotationStrength = 0x1ec;
		constexpr auto ownerItemUID = 0x1f0;

		constexpr auto OnRpcMessage = 0x751db0;
		constexpr auto AddPunch = 0x751000;
		constexpr auto CL_Punch = 0x7510d0;
		constexpr auto DoRecoilCompensation = 0x3628c0;
		constexpr auto GetAddedPunch = 0x751400;
		constexpr auto SimPunches = 0x7525a0;
		constexpr auto ClientInit = 0x751180;
		constexpr auto GetFovOverride = 0x751420;
		constexpr auto DoNetworkDestroy = 0x751250;
		constexpr auto PostLateClientCycle = 0x3628c0;
		constexpr auto PostNetworkUpdate = 0x752260;
		constexpr auto UpdateHolsteredOffset = 0x752a70;
		constexpr auto EditViewAngles = 0x3628c0;
		constexpr auto ClampPitch = 0x3628c0;
		constexpr auto OnFrame = 0x751c20;
		constexpr auto OnInput = 0x3628c0;
		constexpr auto Examine = 0x751290;
		constexpr auto OnDeploy = 0x751960;
		constexpr auto OnDeployed = 0x751c10;
		constexpr auto OnHolster = 0x751c40;
		constexpr auto OnHolstered = 0x751da0;
		constexpr auto OnViewmodelEvent = 0x3628c0;
		constexpr auto OnReliableEvent = 0x3628c0;
		constexpr auto ModifyCamera = 0x3628c0;
		constexpr auto ShouldDestroyImmediately = 0x4d1bf0;
		constexpr auto UpdatePlayerModel = 0x753270;
		constexpr auto ProcessPlayerModel = 0x3628c0;
		constexpr auto GetHoldAnimations = 0x751610;
		constexpr auto GetMovementMultiplier = 0x4c0690;
		constexpr auto OnSpawnedForWorkshopPreview = 0x3628c0;
		constexpr auto HeldEntityBlocksMovement = 0x498ad0;
		constexpr auto ProcessSpectatorViewmodel = 0x3628c0;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x7524f0;
		constexpr auto get_hostile = 0x753420;
		constexpr auto LightsOn = 0x7518f0;
		constexpr auto IsDeployed = 0x7518e0;
		constexpr auto GetOwnerPlayer = 0x751820;
		constexpr auto GetOwnerConnection = 0x751630;
		constexpr auto CanBeUsedInWater = 0x498ad0;
		constexpr auto BlocksGestures = 0x498ad0;
		constexpr auto GetOwnerItem = 0x751740;
		constexpr auto GetItem = 0x751620;
		constexpr auto GetOwnerItemDefinition = 0x7516c0;
		constexpr auto IsInstrument = 0x498ad0;
		constexpr auto Load = 0x751900;
		constexpr auto ctor = 0x753330;
		constexpr auto cctor = 0x7532f0;
		};

	namespace UnityEngine_GUIContent {
		constexpr auto m_Text = 0x10;
		constexpr auto m_Image = 0x18;
		constexpr auto m_Tooltip = 0x20;
		constexpr auto s_Image = 0x8;
		constexpr auto s_TextImage = 0x10;
		constexpr auto none = 0x18;

		constexpr auto get_text = 0x1818780;
		constexpr auto set_text = 0x4b94c0;
		constexpr auto set_image = 0x4d0180;
		constexpr auto get_tooltip = 0x1a5dbd0;
		constexpr auto set_tooltip = 0x497e30;
		constexpr auto ctor = 0x1a5db40;
		constexpr auto Temp = 0x1a5d420;
		constexpr auto ClearStaticCache = 0x1a5d2c0;
		constexpr auto cctor = 0x1a5d6f0;
		};

	namespace BaseCombatEntity {
		constexpr auto __menuOption_Menu_Pickup = 0x168;
		constexpr auto skeletonProperties = 0x1c0;
		constexpr auto baseProtection = 0x1c8;
		constexpr auto startHealth = 0x1d0;
		constexpr auto pickup = 0x1d8;
		constexpr auto repair = 0x1f8;
		constexpr auto ShowHealthInfo = 0x220;
		constexpr auto lifestate = 0x224;
		constexpr auto sendsHitNotification = 0x228;
		constexpr auto sendsMeleeHitNotification = 0x229;
		constexpr auto markAttackerHostile = 0x22a;
		constexpr auto _health = 0x22c;
		constexpr auto _maxHealth = 0x230;
		constexpr auto faction = 0x234;
		constexpr auto deathTime = 0x238;
		constexpr auto lastNotifyFrame = 0x23c;

		constexpr auto GetMenuOptions = 0x7ef590;
		constexpr auto get_HasMenuOptions = 0x7f0790;
		constexpr auto OnRpcMessage = 0x7efce0;
		constexpr auto HitNotify = 0x7ef8f0;
		constexpr auto ClientInit = 0x7eefa0;
		constexpr auto DisplayHealthInfo = 0x502e90;
		constexpr auto GetEyeTransform = 0x7ef470;
		constexpr auto OnLifeStateChanged = 0x7efcb0;
		constexpr auto GetPickupCount = 0x7ef8d0;
		constexpr auto CanPickup = 0x7eef00;
		constexpr auto OnPickedUp = 0x3628c0;
		constexpr auto OnPickedUpPreItemMove = 0x3628c0;
		constexpr auto Menu_Pickup = 0x7efb80;
		constexpr auto Menu_Pickup_TimeStart = 0x3628c0;
		constexpr auto Menu_Pickup_If = 0x7efb60;
		constexpr auto BuildCost = 0x7eee30;
		constexpr auto IsDead = 0x7efaa0;
		constexpr auto IsAlive = 0x7efa90;
		constexpr auto GetFaction = 0x7ef580;
		constexpr auto IsFriendly = 0x498ad0;
		constexpr auto get_SecondsSinceDeath = 0x7f0850;
		constexpr auto get_healthFraction = 0x7f0870;
		constexpr auto ResetState = 0x7f0320;
		constexpr auto DestroyShared = 0x7ef080;
		constexpr auto GetThreatLevel = 0x581f40;
		constexpr auto PenetrationResistance = 0x7f0290;
		constexpr auto ScaleDamage = 0x7f0420;
		constexpr auto SkeletonLookup = 0x7f0560;
		constexpr auto Load = 0x7efab0;
		constexpr auto get_health = 0x7ef8e0;
		constexpr auto set_health = 0x7f08c0;
		constexpr auto Health = 0x7ef8e0;
		constexpr auto MaxHealth = 0x7efb50;
		constexpr auto StartHealth = 0x75f2d0;
		constexpr auto StartMaxHealth = 0x7f0610;
		constexpr auto SetMaxHealth = 0x7f04d0;
		constexpr auto DoHitNotify = 0x7ef0a0;
		constexpr auto OnAttacked = 0x7efbc0;
		constexpr auto ctor = 0x7f0630;
		};

	namespace InputState {
		constexpr auto current = 0x10;
		constexpr auto previous = 0x18;
		constexpr auto SwallowedButtons = 0x20;

		constexpr auto IsDown = 0x811900;
		constexpr auto WasDown = 0x8119d0;
		constexpr auto IsAnyDown = 0x8118d0;
		constexpr auto WasJustPressed = 0x8119f0;
		constexpr auto WasJustReleased = 0x811a30;
		constexpr auto SwallowButton = 0x8119c0;
		constexpr auto AimAngle = 0x811690;
		constexpr auto MouseDelta = 0x811930;
		constexpr auto Flip = 0x811800;
		constexpr auto Clear = 0x811750;
		constexpr auto ctor = 0x811a70;
		};

	namespace InputMessage {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto buttons = 0x14;
		constexpr auto aimAngles = 0x18;
		constexpr auto mouseDelta = 0x24;

		constexpr auto ResetToPool = 0x2017500;
		constexpr auto Dispose = 0x2017200;
		constexpr auto EnterPool = 0x10a09b0;
		constexpr auto LeavePool = 0x10a09e0;
		constexpr auto CopyTo = 0x2016260;
		constexpr auto Copy = 0x20162a0;
		constexpr auto Deserialize = 0x2016930;
		constexpr auto DeserializeLengthDelimited = 0x20165c0;
		constexpr auto DeserializeLength = 0x2016640;
		constexpr auto FromProto = 0x2017280;
		constexpr auto WriteToStream = 0x2017dd0;
		constexpr auto WriteToStreamDelta = 0x2017df0;
		constexpr auto ReadFromStream = 0x2017440;
		constexpr auto SerializeDelta = 0x20175a0;
		constexpr auto Serialize = 0x2017b60;
		constexpr auto ToProtoBytes = 0x2017dc0;
		constexpr auto ToProto = 0x2017dd0;
		constexpr auto SerializeToBytes = 0x2017a50;
		constexpr auto SerializeLengthDelimited = 0x20179a0;
		constexpr auto ctor = 0x101b930;
		};

	namespace BaseMountable {
		constexpr auto __menuOption_Menu_Mount = 0x240;
		constexpr auto eyePositionOverride = 0x298;
		constexpr auto eyeCenterOverride = 0x2a0;
		constexpr auto pitchClamp = 0x2a8;
		constexpr auto yawClamp = 0x2b0;
		constexpr auto canWieldItems = 0x2b8;
		constexpr auto relativeViewAngles = 0x2b9;
		constexpr auto mountAnchor = 0x2c0;
		constexpr auto mountPose = 0x2c8;
		constexpr auto maxMountDistance = 0x2cc;
		constexpr auto dismountPositions = 0x2d0;
		constexpr auto checkPlayerLosOnMount = 0x2d8;
		constexpr auto disableMeshCullingForPlayers = 0x2d9;
		constexpr auto allowHeadLook = 0x2da;
		constexpr auto modifiesPlayerCollider = 0x2db;
		constexpr auto customPlayerCollider = 0x2dc;
		constexpr auto mountSoundDef = 0x2f0;
		constexpr auto swapSoundDef = 0x2f8;
		constexpr auto dismountSoundDef = 0x300;
		constexpr auto mountTimeStatType = 0x308;
		constexpr auto allowedGestures = 0x30c;
		constexpr auto canDrinkWhileMounted = 0x310;
		constexpr auto allowSleeperMounting = 0x311;
		constexpr auto animateClothInLocalSpace = 0x312;
		constexpr auto MountedCameraMode = 0x314;
		constexpr auto isMobile = 0x318;
		constexpr auto SideLeanAmount = 0x31c;

		constexpr auto GetMenuOptions = 0xa29750;
		constexpr auto get_HasMenuOptions = 0xa2b820;
		constexpr auto OnRpcMessage = 0xa2a540;
		constexpr auto CanHoldItems = 0xa28b50;
		constexpr auto GetMountedCameraMode = 0xa29ab0;
		constexpr auto DirectlyMountable = 0x4d1bf0;
		constexpr auto GetEyeOverride = 0xa296c0;
		constexpr auto GetMountedBodyAngles = 0xa29a60;
		constexpr auto ModifiesThirdPersonCamera = 0x498ad0;
		constexpr auto GetPitchClamp = 0x6d1070;
		constexpr auto GetYawClamp = 0x6d1090;
		constexpr auto IsMounted = 0xa29d10;
		constexpr auto EyePositionForPlayer = 0xa29350;
		constexpr auto EyeCenterForPlayer = 0xa29250;
		constexpr auto WaterFactorForPlayer = 0xa2b650;
		constexpr auto MaxVelocity = 0xa29e50;
		constexpr auto PlayerIsMounted = 0xa2ab40;
		constexpr auto OnClientInput = 0x3628c0;
		constexpr auto ForceUpdatePlayerModel = 0x498ad0;
		constexpr auto UpdatePlayerModel = 0xa2b080;
		constexpr auto ProcessPlayerModel = 0x3628c0;
		constexpr auto SuppressHandsAnimationLayer = 0x498ad0;
		constexpr auto GetAnimationOverride = 0x513d80;
		constexpr auto GetSpineLookAtWeight = 0x4c0690;
		constexpr auto GetMountedAnimationSpeed = 0x581f40;
		constexpr auto get_DisableLegsMeshAtExtremeViewAnglesInFirstPersonWithEyes = 0x4d1bf0;
		constexpr auto get_FirstPersonWithArmsEyesLerp = 0x72d8f0;
		constexpr auto ModifyThirdPersonEyeOffset = 0xa2a010;
		constexpr auto LockThirdPersonOffset = 0xa29de0;
		constexpr auto LocalPlayerIsMounted = 0xa29d20;
		constexpr auto VehicleParent = 0xa2b5c0;
		constexpr auto get_IsSummerDlcVehicle = 0x498ad0;
		constexpr auto IsInstrument = 0x498ad0;
		constexpr auto UpdatePlayerRotation = 0xa2b510;
		constexpr auto SetNetworkPosition = 0xa2b050;
		constexpr auto UpdatePlayerPosition = 0xa2b3a0;
		constexpr auto GetMountedRotation = 0xa29b80;
		constexpr auto GetMountedPosition = 0xa29ac0;
		constexpr auto PlayerMounted = 0xa2ac20;
		constexpr auto PlayerDismounted = 0xa2a660;
		constexpr auto ClientOnPlayerDismounted = 0xa28b60;
		constexpr auto ClientOnPlayerMounted = 0xa28c00;
		constexpr auto OverrideViewAngles = 0xa2a630;
		constexpr auto DoPlayerMovement = 0xa28de0;
		constexpr auto HoldToDismount = 0xa29c90;
		constexpr auto ClientRequestDismount = 0xa28cd0;
		constexpr auto Menu_Mount = 0xa29fa0;
		constexpr auto Menu_Mount_ShowIf = 0xa29f00;
		constexpr auto MountMenuVisible = 0xa2a030;
		constexpr auto NearMountPoint = 0xa2a0c0;
		constexpr auto ConvertVector = 0xa28d10;
		constexpr auto get_BlocksDoors = 0x4d1bf0;
		constexpr auto ctor = 0xa2b770;
		constexpr auto cctor = 0xa2b700;
		constexpr auto DoPlayerMovementb__78_0 = 0xa28cd0;
		};

	namespace TOD_Sky {
		constexpr auto ColorSpace = 0x18;
		constexpr auto ColorRange = 0x1c;
		constexpr auto ColorOutput = 0x20;
		constexpr auto SkyQuality = 0x24;
		constexpr auto CloudQuality = 0x28;
		constexpr auto MeshQuality = 0x2c;
		constexpr auto StarQuality = 0x30;
		constexpr auto Cycle = 0x38;
		constexpr auto World = 0x40;
		constexpr auto Atmosphere = 0x48;
		constexpr auto Day = 0x50;
		constexpr auto Night = 0x58;
		constexpr auto Sun = 0x60;
		constexpr auto Moon = 0x68;
		constexpr auto Stars = 0x70;
		constexpr auto Clouds = 0x78;
		constexpr auto Light = 0x80;
		constexpr auto Fog = 0x88;
		constexpr auto Ambient = 0x90;
		constexpr auto Reflection = 0x98;
		constexpr auto Initializedk__BackingField = 0xa0;
		constexpr auto Componentsk__BackingField = 0xa8;
		constexpr auto Resourcesk__BackingField = 0xb0;
		constexpr auto IsDayk__BackingField = 0xb8;
		constexpr auto IsNightk__BackingField = 0xb9;
		constexpr auto LerpValuek__BackingField = 0xbc;
		constexpr auto SunZenithk__BackingField = 0xc0;
		constexpr auto SunAltitudek__BackingField = 0xc4;
		constexpr auto SunAzimuthk__BackingField = 0xc8;
		constexpr auto MoonZenithk__BackingField = 0xcc;
		constexpr auto MoonAltitudek__BackingField = 0xd0;
		constexpr auto MoonAzimuthk__BackingField = 0xd4;
		constexpr auto SunsetTimek__BackingField = 0xd8;
		constexpr auto SunriseTimek__BackingField = 0xdc;
		constexpr auto LocalSiderealTimek__BackingField = 0xe0;
		constexpr auto SunVisibilityk__BackingField = 0xe4;
		constexpr auto MoonVisibilityk__BackingField = 0xe8;
		constexpr auto SunDirectionk__BackingField = 0xec;
		constexpr auto MoonDirectionk__BackingField = 0xf8;
		constexpr auto LightDirectionk__BackingField = 0x104;
		constexpr auto LocalSunDirectionk__BackingField = 0x110;
		constexpr auto LocalMoonDirectionk__BackingField = 0x11c;
		constexpr auto LocalLightDirectionk__BackingField = 0x128;
		constexpr auto SunLightColork__BackingField = 0x134;
		constexpr auto MoonLightColork__BackingField = 0x144;
		constexpr auto SunRayColork__BackingField = 0x154;
		constexpr auto MoonRayColork__BackingField = 0x164;
		constexpr auto SunSkyColork__BackingField = 0x174;
		constexpr auto MoonSkyColork__BackingField = 0x184;
		constexpr auto SunMeshColork__BackingField = 0x194;
		constexpr auto MoonMeshColork__BackingField = 0x1a4;
		constexpr auto SunCloudColork__BackingField = 0x1b4;
		constexpr auto MoonCloudColork__BackingField = 0x1c4;
		constexpr auto FogColork__BackingField = 0x1d4;
		constexpr auto GroundColork__BackingField = 0x1e4;
		constexpr auto AmbientColork__BackingField = 0x1f4;
		constexpr auto MoonHaloColork__BackingField = 0x204;
		constexpr auto ReflectionCur = 0x218;
		constexpr auto ReflectionSrc = 0x220;
		constexpr auto ReflectionDst = 0x228;
		constexpr auto ReflectionUpdateSlowdown = 0x8;
		constexpr auto ReflectionResolution = 0xc;
		constexpr auto ReflectionUpdateInterval = 0x10;
		constexpr auto ReflectionTimeSlicing = 0x14;
		constexpr auto timeSinceLightUpdate = 0x230;
		constexpr auto timeSinceAmbientUpdate = 0x234;
		constexpr auto timeSinceReflectionUpdate = 0x238;
		constexpr auto kBetaMie = 0x23c;
		constexpr auto kSun = 0x248;
		constexpr auto k4PI = 0x258;
		constexpr auto kRadius = 0x268;
		constexpr auto kScale = 0x278;

		constexpr auto get_Instances = 0x12d5120;
		constexpr auto get_Instance = 0x12d5050;
		constexpr auto get_Initialized = 0xc26f70;
		constexpr auto set_Initialized = 0xc27450;
		constexpr auto get_Headless = 0x12d5030;
		constexpr auto get_Components = 0x9321e0;
		constexpr auto set_Components = 0xc53340;
		constexpr auto get_Resources = 0x972280;
		constexpr auto set_Resources = 0xa2be00;
		constexpr auto get_IsDay = 0x12d5180;
		constexpr auto set_IsDay = 0x12d5550;
		constexpr auto get_IsNight = 0x12d5190;
		constexpr auto set_IsNight = 0x12d5560;
		constexpr auto get_Radius = 0x12d5430;
		constexpr auto get_Diameter = 0x12d4fd0;
		constexpr auto get_LerpValue = 0x5dcbc0;
		constexpr auto set_LerpValue = 0x5dcdb0;
		constexpr auto get_SunZenith = 0x12d54f0;
		constexpr auto set_SunZenith = 0x12d5750;
		constexpr auto get_SunAltitude = 0x12d5470;
		constexpr auto set_SunAltitude = 0x12d56b0;
		constexpr auto get_SunAzimuth = 0x12d5480;
		constexpr auto set_SunAzimuth = 0x12d56c0;
		constexpr auto get_MoonZenith = 0x12d53c0;
		constexpr auto set_MoonZenith = 0x12d56a0;
		constexpr auto get_MoonAltitude = 0x12d5320;
		constexpr auto set_MoonAltitude = 0x12d55f0;
		constexpr auto get_MoonAzimuth = 0x12d5330;
		constexpr auto set_MoonAzimuth = 0x12d5600;
		constexpr auto get_SunsetTime = 0x12d5510;
		constexpr auto set_SunsetTime = 0x12d5770;
		constexpr auto get_SunriseTime = 0x12d5500;
		constexpr auto set_SunriseTime = 0x12d5760;
		constexpr auto get_LocalSiderealTime = 0x112cdc0;
		constexpr auto set_LocalSiderealTime = 0x112d5c0;
		constexpr auto get_LightZenith = 0x12d5240;
		constexpr auto get_LightIntensity = 0x12d5210;
		constexpr auto get_SunVisibility = 0x12d54e0;
		constexpr auto set_SunVisibility = 0x12d5740;
		constexpr auto get_MoonVisibility = 0x112cc10;
		constexpr auto set_MoonVisibility = 0x12d5690;
		constexpr auto get_SunDirection = 0x12d5490;
		constexpr auto set_SunDirection = 0x12d56e0;
		constexpr auto get_MoonDirection = 0x12d5350;
		constexpr auto set_MoonDirection = 0x12d5620;
		constexpr auto get_LightDirection = 0x12d51f0;
		constexpr auto set_LightDirection = 0x12d5570;
		constexpr auto get_LocalSunDirection = 0x12d5300;
		constexpr auto set_LocalSunDirection = 0x12d55d0;
		constexpr auto get_LocalMoonDirection = 0x12d52e0;
		constexpr auto set_LocalMoonDirection = 0x12d55b0;
		constexpr auto get_LocalLightDirection = 0x12d52c0;
		constexpr auto set_LocalLightDirection = 0x12d5590;
		constexpr auto get_SunLightColor = 0x12d54b0;
		constexpr auto set_SunLightColor = 0x12d5700;
		constexpr auto get_MoonLightColor = 0x12d5380;
		constexpr auto set_MoonLightColor = 0x12d5650;
		constexpr auto get_LightColor = 0x12d51a0;
		constexpr auto get_SunRayColor = 0x12d54d0;
		constexpr auto set_SunRayColor = 0x12d5720;
		constexpr auto get_MoonRayColor = 0x12d53a0;
		constexpr auto set_MoonRayColor = 0x12d5670;
		constexpr auto get_SunSkyColor = 0xec5480;
		constexpr auto set_SunSkyColor = 0x12d5730;
		constexpr auto get_MoonSkyColor = 0x12d53b0;
		constexpr auto set_MoonSkyColor = 0x12d5680;
		constexpr auto get_SunMeshColor = 0x12d54c0;
		constexpr auto set_SunMeshColor = 0x12d5710;
		constexpr auto get_MoonMeshColor = 0x12d5390;
		constexpr auto set_MoonMeshColor = 0x12d5660;
		constexpr auto get_SunCloudColor = 0xc62a20;
		constexpr auto set_SunCloudColor = 0x12d56d0;
		constexpr auto get_MoonCloudColor = 0x12d5340;
		constexpr auto set_MoonCloudColor = 0x12d5610;
		constexpr auto get_FogColor = 0x12d5010;
		constexpr auto set_FogColor = 0x12d5530;
		constexpr auto get_GroundColor = 0x12d5020;
		constexpr auto set_GroundColor = 0x12d5540;
		constexpr auto get_AmbientColor = 0x12d4fc0;
		constexpr auto set_AmbientColor = 0x12d5520;
		constexpr auto get_MoonHaloColor = 0x12d5370;
		constexpr auto set_MoonHaloColor = 0x12d5640;
		constexpr auto get_Probe = 0x12d5410;
		constexpr auto get_ProbeInstance = 0x12d53f0;
		constexpr auto get_ProbeEx = 0x12d53d0;
		constexpr auto OrbitalToUnity = 0x12cd190;
		constexpr auto OrbitalToLocal = 0x12cd0d0;
		constexpr auto SampleAtmosphere = 0x12ce8b0;
		constexpr auto RenderToSphericalHarmonics = 0x12ce750;
		constexpr auto RenderToCubemap = 0x12cd2a0;
		constexpr auto RenderToProbe = 0x12cd3e0;
		constexpr auto ReflectionIsUpdating = 0x12cd260;
		constexpr auto UpdateProbeBlending = 0x12d2db0;
		constexpr auto UpdateProbeProperties = 0x12d2ea0;
		constexpr auto SampleFogColor = 0x12cec30;
		constexpr auto SampleSkyColor = 0x12ceee0;
		constexpr auto SampleEquatorColor = 0x12ceb70;
		constexpr auto UpdateFog = 0x12d2d30;
		constexpr auto UpdateAmbient = 0x12d0400;
		constexpr auto UpdateReflection = 0x12d3790;
		constexpr auto DelayReflectionUpdate = 0x12cca30;
		constexpr auto LoadParameters = 0x12cce20;
		constexpr auto SaveParameters = 0x12ceff0;
		constexpr auto UpdateQualitySettings = 0x12d3180;
		constexpr auto UpdateRenderSettings = 0x12d3890;
		constexpr auto UpdateShaderKeywords = 0x12d3e70;
		constexpr auto UpdateShaderProperties = 0x12d4070;
		constexpr auto ShaderScale = 0x12cf560;
		constexpr auto ShaderMiePhase = 0x12cf240;
		constexpr auto ShaderRayleighPhase = 0x12cf540;
		constexpr auto ShaderNightSkyColor = 0x12cf450;
		constexpr auto ShaderMoonHaloColor = 0x12cf310;
		constexpr auto TOD_HDR2LDR = 0x12d01b0;
		constexpr auto TOD_GAMMA2LINEAR = 0x12d0150;
		constexpr auto TOD_LINEAR2GAMMA = 0x12d0330;
		constexpr auto ShaderScatteringColor = 0x12cf610;
		constexpr auto Initialize = 0x12cca40;
		constexpr auto Cleanup = 0x12cc880;
		constexpr auto OnEnable = 0x12cd080;
		constexpr auto OnDisable = 0x12cd070;
		constexpr auto LateUpdate = 0x12ccb40;
		constexpr auto OnValidate = 0x12cd090;
		constexpr auto UpdateScattering = 0x12d3cc0;
		constexpr auto UpdateCelestials = 0x12d0b70;
		constexpr auto ctor = 0x12d4eb0;
		constexpr auto cctor = 0x12d4df0;
		};

	namespace UnityEngine_Random {

		constexpr auto InitState = 0x18fab40;
		constexpr auto get_state = 0x18fae10;
		constexpr auto set_state = 0x18faec0;
		constexpr auto Range = 0x18fabc0;
		constexpr auto RandomRangeInt = 0x18fab80;
		constexpr auto get_value = 0x18fae50;
		constexpr auto get_insideUnitSphere = 0x18fac90;
		constexpr auto GetRandomUnitCircle = 0x18fab00;
		constexpr auto get_insideUnitCircle = 0x18fac10;
		constexpr auto get_onUnitSphere = 0x18fad10;
		constexpr auto get_rotation = 0x18fad90;
		constexpr auto RandomRange = 0x18fab80;
		constexpr auto ColorHSV = 0x18fa940;
		constexpr auto get_state_Injected = 0x18fadd0;
		constexpr auto set_state_Injected = 0x18fae80;
		constexpr auto get_insideUnitSphere_Injected = 0x18fac50;
		constexpr auto get_onUnitSphere_Injected = 0x18facd0;
		constexpr auto get_rotation_Injected = 0x18fad50;
		};

	namespace UnityEngine_PhysicsScene {
		constexpr auto m_Handle = 0x10;

		constexpr auto ToString = 0x239320;
		constexpr auto GetHashCode = 0x13a500;
		constexpr auto Equals = 0x238de0;
		constexpr auto Raycast = 0x2390b0;
		constexpr auto Internal_RaycastTest = 0x2293180;
		constexpr auto Internal_Raycast = 0x2293260;
		constexpr auto Internal_RaycastNonAlloc = 0x22930a0;
		constexpr auto Query_CapsuleCast = 0x2293990;
		constexpr auto Internal_CapsuleCast = 0x2292e80;
		constexpr auto CapsuleCast = 0x238d30;
		constexpr auto Internal_CapsuleCastNonAlloc = 0x2292de0;
		constexpr auto OverlapCapsuleNonAlloc_Internal = 0x22936b0;
		constexpr auto OverlapCapsule = 0x238f10;
		constexpr auto Query_SphereCast = 0x2293aa0;
		constexpr auto Internal_SphereCast = 0x22933d0;
		constexpr auto SphereCast = 0x2391a0;
		constexpr auto Internal_SphereCastNonAlloc = 0x2293340;
		constexpr auto OverlapSphereNonAlloc_Internal = 0x22937a0;
		constexpr auto OverlapSphere = 0x238fb0;
		constexpr auto Query_BoxCast = 0x2293880;
		constexpr auto Internal_BoxCast = 0x2292bb0;
		constexpr auto BoxCast = 0x238b40;
		constexpr auto OverlapBoxNonAlloc_Internal = 0x22935c0;
		constexpr auto OverlapBox = 0x238e60;
		constexpr auto Internal_RaycastTest_Injected = 0x2293110;
		constexpr auto Internal_Raycast_Injected = 0x22931f0;
		constexpr auto Internal_RaycastNonAlloc_Injected = 0x2293030;
		constexpr auto Query_CapsuleCast_Injected = 0x2293920;
		constexpr auto Internal_CapsuleCastNonAlloc_Injected = 0x2292d70;
		constexpr auto OverlapCapsuleNonAlloc_Internal_Injected = 0x2293640;
		constexpr auto Query_SphereCast_Injected = 0x2293a30;
		constexpr auto Internal_SphereCastNonAlloc_Injected = 0x22932d0;
		constexpr auto OverlapSphereNonAlloc_Internal_Injected = 0x2293730;
		constexpr auto Query_BoxCast_Injected = 0x2293810;
		constexpr auto OverlapBoxNonAlloc_Internal_Injected = 0x2293550;
		};

	namespace UnityEngine_GameObjectEx {

		constexpr auto ToBaseEntity = 0x9dc1b0;
		constexpr auto IsOnLayer = 0x9dc060;
		constexpr auto GetEntityFromRegistry = 0x9dbf30;
		constexpr auto GetEntityFromComponent = 0x9dbe30;
		constexpr auto SetHierarchyGroup = 0x9dc0f0;
		};

	namespace BaseHelicopter {
		constexpr auto weakspots = 0x240;
		constexpr auto rotorPivot = 0x248;
		constexpr auto mainRotor = 0x250;
		constexpr auto mainRotor_blades = 0x258;
		constexpr auto mainRotor_blur = 0x260;
		constexpr auto tailRotor = 0x268;
		constexpr auto tailRotor_blades = 0x270;
		constexpr auto tailRotor_blur = 0x278;
		constexpr auto rocket_tube_left = 0x280;
		constexpr auto rocket_tube_right = 0x288;
		constexpr auto left_gun_yaw = 0x290;
		constexpr auto left_gun_pitch = 0x298;
		constexpr auto left_gun_muzzle = 0x2a0;
		constexpr auto right_gun_yaw = 0x2a8;
		constexpr auto right_gun_pitch = 0x2b0;
		constexpr auto right_gun_muzzle = 0x2b8;
		constexpr auto spotlight_rotation = 0x2c0;
		constexpr auto rocket_fire_effect = 0x2c8;
		constexpr auto gun_fire_effect = 0x2d0;
		constexpr auto bulletEffect = 0x2d8;
		constexpr auto explosionEffect = 0x2e0;
		constexpr auto fireBall = 0x2e8;
		constexpr auto crateToDrop = 0x2f0;
		constexpr auto maxCratesToSpawn = 0x2f8;
		constexpr auto bulletSpeed = 0x2fc;
		constexpr auto bulletDamage = 0x300;
		constexpr auto servergibs = 0x308;
		constexpr auto debrisFieldMarker = 0x310;
		constexpr auto rotorWashSoundDef = 0x318;
		constexpr auto _rotorWashSound = 0x320;
		constexpr auto flightEngineSoundDef = 0x328;
		constexpr auto flightThwopsSoundDef = 0x330;
		constexpr auto flightEngineSound = 0x338;
		constexpr auto flightThwopsSound = 0x340;
		constexpr auto flightEngineGainMod = 0x348;
		constexpr auto flightThwopsGainMod = 0x350;
		constexpr auto rotorGainModSmoothing = 0x358;
		constexpr auto engineGainMin = 0x35c;
		constexpr auto engineGainMax = 0x360;
		constexpr auto thwopGainMin = 0x364;
		constexpr auto thwopGainMax = 0x368;
		constexpr auto spotlightJitterAmount = 0x36c;
		constexpr auto spotlightJitterSpeed = 0x370;
		constexpr auto nightLights = 0x378;
		constexpr auto spotlightTarget = 0x380;
		constexpr auto engineSpeed = 0x38c;
		constexpr auto targetEngineSpeed = 0x390;
		constexpr auto blur_rotationScale = 0x394;
		constexpr auto _rotorWashParticles = 0x398;
		constexpr auto myAI = 0x3a0;
		constexpr auto mapMarkerEntityPrefab = 0x3a8;
		constexpr auto client_rotorPivotIdeal = 0x3b0;
		constexpr auto nightLightsOn = 0x3c0;

		constexpr auto OnRpcMessage = 0xa1f4b0;
		constexpr auto InitalizeWeakspots = 0xa1ef10;
		constexpr auto MaxVelocity = 0x73c880;
		constexpr auto InitShared = 0xa1ee80;
		constexpr auto Load = 0xa1f1f0;
		constexpr auto ClientInit = 0xa1e8a0;
		constexpr auto InitializeClientsideEffects = 0xa1ef90;
		constexpr auto DoClientDestroy = 0xa1e8c0;
		constexpr auto SetLights = 0xa1f900;
		constexpr auto Update = 0xa20370;
		constexpr auto UpdateEffects = 0xa1fa20;
		constexpr auto UpdateRotorWashPosition = 0xa20230;
		constexpr auto ToggleRotorWash = 0xa1f9a0;
		constexpr auto UpdateRotorVisibility = 0xa201a0;
		constexpr auto FireGun = 0xa1e9a0;
		constexpr auto ctor = 0xa20ad0;
		};

	namespace HitInfo {
		constexpr auto Initiator = 0x10;
		constexpr auto WeaponPrefab = 0x18;
		constexpr auto Weapon = 0x20;
		constexpr auto DoHitEffects = 0x28;
		constexpr auto DoDecals = 0x29;
		constexpr auto IsPredicting = 0x2a;
		constexpr auto UseProtection = 0x2b;
		constexpr auto Predicted = 0x30;
		constexpr auto DidHit = 0x38;
		constexpr auto HitEntity = 0x40;
		constexpr auto HitBone = 0x48;
		constexpr auto HitPart = 0x4c;
		constexpr auto HitMaterial = 0x50;
		constexpr auto HitPositionWorld = 0x54;
		constexpr auto HitPositionLocal = 0x60;
		constexpr auto HitNormalWorld = 0x6c;
		constexpr auto HitNormalLocal = 0x78;
		constexpr auto PointStart = 0x84;
		constexpr auto PointEnd = 0x90;
		constexpr auto ProjectileID = 0x9c;
		constexpr auto ProjectileHits = 0xa0;
		constexpr auto ProjectileDistance = 0xa4;
		constexpr auto ProjectileIntegrity = 0xa8;
		constexpr auto ProjectileTravelTime = 0xac;
		constexpr auto ProjectileTrajectoryMismatch = 0xb0;
		constexpr auto ProjectileVelocity = 0xb4;
		constexpr auto ProjectilePrefab = 0xc0;
		constexpr auto material = 0xc8;
		constexpr auto damageProperties = 0xd0;
		constexpr auto damageTypes = 0xd8;
		constexpr auto CanGather = 0xe0;
		constexpr auto DidGather = 0xe1;
		constexpr auto gatherScale = 0xe4;

		constexpr auto IsProjectile = 0x755ad0;
		constexpr auto get_InitiatorPlayer = 0x756320;
		constexpr auto get_attackNormal = 0x7563b0;
		constexpr auto get_hasDamage = 0x7568b0;
		constexpr auto ctor = 0x756140;
		constexpr auto LoadFromAttack = 0x755ae0;
		constexpr auto get_isHeadshot = 0x7568e0;
		constexpr auto get_bonePhrase = 0x756750;
		constexpr auto get_boneName = 0x7565c0;
		constexpr auto get_boneArea = 0x7564b0;
		constexpr auto PositionOnRay = 0x755ce0;
		constexpr auto HitPositionOnRay = 0x7558a0;
		constexpr auto IsNaNOrInfinity = 0x7558f0;
		};

	namespace System_Number {

		constexpr auto NumberBufferToDecimal = 0x167b1d0;
		constexpr auto NumberBufferToDouble = 0x167b1e0;
		constexpr auto FormatDecimal = 0x167a6f0;
		constexpr auto FormatDouble = 0x167a810;
		constexpr auto FormatInt32 = 0x167a890;
		constexpr auto FormatUInt32 = 0x167abf0;
		constexpr auto FormatInt64 = 0x167aa00;
		constexpr auto FormatUInt64 = 0x167ad50;
		constexpr auto FormatSingle = 0x167ab70;
		constexpr auto HexNumberToInt32 = 0x167aeb0;
		constexpr auto HexNumberToInt64 = 0x167af30;
		constexpr auto HexNumberToUInt32 = 0x167aff0;
		constexpr auto HexNumberToUInt64 = 0x167b070;
		constexpr auto IsWhite = 0x167b100;
		constexpr auto NumberToInt32 = 0x167b1f0;
		constexpr auto NumberToInt64 = 0x167b250;
		constexpr auto NumberToUInt32 = 0x167b2d0;
		constexpr auto NumberToUInt64 = 0x167b330;
		constexpr auto MatchChars = 0x167b160;
		constexpr auto ParseDecimal = 0x167b3a0;
		constexpr auto ParseDouble = 0x167b510;
		constexpr auto ParseInt32 = 0x167b7c0;
		constexpr auto ParseInt64 = 0x167ba10;
		constexpr auto ParseNumber = 0x167bc80;
		constexpr auto ParseSingle = 0x167c770;
		constexpr auto ParseUInt32 = 0x167ca90;
		constexpr auto ParseUInt64 = 0x167ccd0;
		constexpr auto StringToNumber = 0x167cf30;
		constexpr auto TrailingZeros = 0x167d070;
		constexpr auto TryParseDecimal = 0x167d0d0;
		constexpr auto TryParseDouble = 0x167d250;
		constexpr auto TryParseInt32 = 0x167d3d0;
		constexpr auto TryParseInt64 = 0x167d610;
		constexpr auto TryParseSingle = 0x167d7e0;
		constexpr auto TryParseUInt32 = 0x167d990;
		constexpr auto TryParseUInt64 = 0x167dbd0;
		constexpr auto TryStringToNumber = 0x167def0;
		};

	namespace System_Globalization_NumberFormatInfo {
		constexpr auto numberGroupSizes = 0x10;
		constexpr auto currencyGroupSizes = 0x18;
		constexpr auto percentGroupSizes = 0x20;
		constexpr auto positiveSign = 0x28;
		constexpr auto negativeSign = 0x30;
		constexpr auto numberDecimalSeparator = 0x38;
		constexpr auto numberGroupSeparator = 0x40;
		constexpr auto currencyGroupSeparator = 0x48;
		constexpr auto currencyDecimalSeparator = 0x50;
		constexpr auto currencySymbol = 0x58;
		constexpr auto ansiCurrencySymbol = 0x60;
		constexpr auto nanSymbol = 0x68;
		constexpr auto positiveInfinitySymbol = 0x70;
		constexpr auto negativeInfinitySymbol = 0x78;
		constexpr auto percentDecimalSeparator = 0x80;
		constexpr auto percentGroupSeparator = 0x88;
		constexpr auto percentSymbol = 0x90;
		constexpr auto perMilleSymbol = 0x98;
		constexpr auto nativeDigits = 0xa0;
		constexpr auto m_dataItem = 0xa8;
		constexpr auto numberDecimalDigits = 0xac;
		constexpr auto currencyDecimalDigits = 0xb0;
		constexpr auto currencyPositivePattern = 0xb4;
		constexpr auto currencyNegativePattern = 0xb8;
		constexpr auto numberNegativePattern = 0xbc;
		constexpr auto percentPositivePattern = 0xc0;
		constexpr auto percentNegativePattern = 0xc4;
		constexpr auto percentDecimalDigits = 0xc8;
		constexpr auto digitSubstitution = 0xcc;
		constexpr auto isReadOnly = 0xd0;
		constexpr auto m_useUserOverride = 0xd1;
		constexpr auto m_isInvariant = 0xd2;
		constexpr auto validForParseAsNumber = 0xd3;
		constexpr auto validForParseAsCurrency = 0xd4;

		constexpr auto ctor = 0x137fce0;
		constexpr auto OnSerializing = 0x137f340;
		constexpr auto OnDeserializing = 0x3628c0;
		constexpr auto OnDeserialized = 0x3628c0;
		constexpr auto get_InvariantInfo = 0x137fe70;
		constexpr auto GetInstance = 0x137f0c0;
		constexpr auto Clone = 0x137efc0;
		constexpr auto get_CurrencyDecimalDigits = 0x2f95b0;
		constexpr auto get_CurrencyDecimalSeparator = 0x4cc350;
		constexpr auto get_IsReadOnly = 0xdaec30;
		constexpr auto get_CurrencyGroupSizes = 0x137fcf0;
		constexpr auto get_NumberGroupSizes = 0x137ff80;
		constexpr auto get_PercentGroupSizes = 0x1380000;
		constexpr auto get_CurrencyGroupSeparator = 0x5dcca0;
		constexpr auto get_CurrencySymbol = 0x4cc340;
		constexpr auto get_CurrentInfo = 0x137fd70;
		constexpr auto get_NaNSymbol = 0x5334f0;
		constexpr auto get_CurrencyNegativePattern = 0x1074d10;
		constexpr auto get_NumberNegativePattern = 0x1074d00;
		constexpr auto get_PercentPositivePattern = 0x1074cf0;
		constexpr auto get_PercentNegativePattern = 0xade1b0;
		constexpr auto get_NegativeInfinitySymbol = 0x4e4ec0;
		constexpr auto get_NegativeSign = 0x4a2ee0;
		constexpr auto get_NumberDecimalDigits = 0xa2bc00;
		constexpr auto get_NumberDecimalSeparator = 0x5dcc00;
		constexpr auto get_NumberGroupSeparator = 0x4b9440;
		constexpr auto get_CurrencyPositivePattern = 0x1074ce0;
		constexpr auto get_PositiveInfinitySymbol = 0x58dc30;
		constexpr auto get_PositiveSign = 0x7ce230;
		constexpr auto get_PercentDecimalDigits = 0xade1d0;
		constexpr auto get_PercentDecimalSeparator = 0x58dc40;
		constexpr auto get_PercentGroupSeparator = 0x58dbd0;
		constexpr auto get_PercentSymbol = 0x4e09f0;
		constexpr auto get_PerMilleSymbol = 0x58dbe0;
		constexpr auto GetFormat = 0x137f030;
		constexpr auto ReadOnly = 0x137f3d0;
		constexpr auto ValidateParseStyleInteger = 0x137f550;
		constexpr auto ValidateParseStyleFloatingPoint = 0x137f480;
		};

	namespace UnityEngine_GL {

		constexpr auto Vertex3 = 0x1825900;
		constexpr auto Vertex = 0x1825960;
		constexpr auto TexCoord3 = 0x18258a0;
		constexpr auto TexCoord2 = 0x1825850;
		constexpr auto MultiTexCoord3 = 0x1825780;
		constexpr auto MultiTexCoord2 = 0x1825720;
		constexpr auto ImmediateColor = 0x1825460;
		constexpr auto Color = 0x1825130;
		constexpr auto get_sRGBWrite = 0x18259c0;
		constexpr auto set_sRGBWrite = 0x18259f0;
		constexpr auto Flush = 0x18251c0;
		constexpr auto MultMatrix = 0x18256e0;
		constexpr auto PushMatrix = 0x1825820;
		constexpr auto PopMatrix = 0x18257f0;
		constexpr auto LoadIdentity = 0x1825590;
		constexpr auto LoadOrtho = 0x18255c0;
		constexpr auto LoadPixelMatrix = 0x18255f0;
		constexpr auto LoadProjectionMatrix = 0x1825660;
		constexpr auto GetGPUProjectionMatrix = 0x18253f0;
		constexpr auto GLLoadPixelMatrixScript = 0x1825310;
		constexpr auto GLIssuePluginEvent = 0x18252d0;
		constexpr auto IssuePluginEvent = 0x18254e0;
		constexpr auto Begin = 0x1825040;
		constexpr auto End = 0x1825190;
		constexpr auto GLClear = 0x1825260;
		constexpr auto Clear = 0x18250d0;
		constexpr auto ClearWithSkybox = 0x1825080;
		constexpr auto MultMatrix_Injected = 0x18256a0;
		constexpr auto LoadProjectionMatrix_Injected = 0x1825620;
		constexpr auto GetGPUProjectionMatrix_Injected = 0x1825390;
		constexpr auto GLClear_Injected = 0x18251f0;
		};

	namespace UnityEngine_Material {

		constexpr auto CreateWithShader = 0x18e7120;
		constexpr auto CreateWithMaterial = 0x18e70d0;
		constexpr auto CreateWithString = 0x18e7170;
		constexpr auto ctor = 0x18e86d0;
		constexpr auto get_shader = 0x18e8990;
		constexpr auto set_shader = 0x18e8b20;
		constexpr auto get_color = 0x18e8760;
		constexpr auto set_color = 0x18e89d0;
		constexpr auto get_mainTexture = 0x18e8870;
		constexpr auto GetFirstPropertyNameIdByAttribute = 0x18e7440;
		constexpr auto HasProperty = 0x18e7950;
		constexpr auto get_renderQueue = 0x18e8950;
		constexpr auto set_renderQueue = 0x18e8ae0;
		constexpr auto EnableKeyword = 0x18e7200;
		constexpr auto DisableKeyword = 0x18e71b0;
		constexpr auto IsKeywordEnabled = 0x18e7990;
		constexpr auto get_enableInstancing = 0x18e8830;
		constexpr auto set_enableInstancing = 0x18e8a90;
		constexpr auto get_passCount = 0x18e8910;
		constexpr auto GetShaderPassEnabled = 0x18e7590;
		constexpr auto GetPassName = 0x18e7510;
		constexpr auto FindPass = 0x18e7250;
		constexpr auto SetOverrideTag = 0x18e8120;
		constexpr auto GetTagImpl = 0x18e75e0;
		constexpr auto GetTag = 0x18e76e0;
		constexpr auto SetPass = 0x18e8180;
		constexpr auto CopyPropertiesFromMaterial = 0x18e7080;
		constexpr auto GetShaderKeywords = 0x18e7550;
		constexpr auto SetShaderKeywords = 0x18e81c0;
		constexpr auto get_shaderKeywords = 0x18e7550;
		constexpr auto set_shaderKeywords = 0x18e81c0;
		constexpr auto SetFloatImpl = 0x18e7e70;
		constexpr auto SetColorImpl = 0x18e7ae0;
		constexpr auto SetMatrixImpl = 0x18e7fe0;
		constexpr auto SetTextureImpl = 0x18e8210;
		constexpr auto SetBufferImpl = 0x18e79e0;
		constexpr auto GetFloatImpl = 0x18e7480;
		constexpr auto GetColorImpl = 0x18e72f0;
		constexpr auto GetTextureImpl = 0x18e7750;
		constexpr auto SetFloatArrayImpl = 0x18e7be0;
		constexpr auto SetTextureOffsetImpl = 0x18e82b0;
		constexpr auto SetTextureScaleImpl = 0x18e83b0;
		constexpr auto SetFloatArray = 0x18e7d40;
		constexpr auto SetFloat = 0x18e7ec0;
		constexpr auto SetInt = 0x18e7f20;
		constexpr auto SetColor = 0x18e7b80;
		constexpr auto SetVector = 0x18e84c0;
		constexpr auto SetMatrix = 0x18e80a0;
		constexpr auto SetTexture = 0x18e8460;
		constexpr auto SetBuffer = 0x18e7a30;
		constexpr auto GetFloat = 0x18e74c0;
		constexpr auto GetColor = 0x18e73c0;
		constexpr auto GetVector = 0x18e77e0;
		constexpr auto GetTexture = 0x18e7790;
		constexpr auto SetTextureOffset = 0x18e8300;
		constexpr auto SetTextureScale = 0x18e8400;
		constexpr auto SetColorImpl_Injected = 0x18e7a90;
		constexpr auto SetMatrixImpl_Injected = 0x18e7f90;
		constexpr auto GetColorImpl_Injected = 0x18e72a0;
		constexpr auto SetTextureOffsetImpl_Injected = 0x18e8260;
		constexpr auto SetTextureScaleImpl_Injected = 0x18e8360;
		};

	namespace UnityEngine_Screen {

		constexpr auto get_width = 0x19afaf0;
		constexpr auto get_height = 0x19afa90;
		constexpr auto get_dpi = 0x19afa30;
		constexpr auto get_currentResolution = 0x19af9f0;
		constexpr auto get_fullScreen = 0x19afa60;
		constexpr auto SetResolution = 0x19af8f0;
		constexpr auto get_resolutions = 0x19afac0;
		constexpr auto get_currentResolution_Injected = 0x19af9b0;
		};

	namespace TOD_AtmosphereParameters {
		constexpr auto RayleighMultiplier = 0x10;
		constexpr auto MieMultiplier = 0x14;
		constexpr auto Brightness = 0x18;
		constexpr auto Contrast = 0x1c;
		constexpr auto Directionality = 0x20;
		constexpr auto Fogginess = 0x24;

		constexpr auto ctor = 0x106f680;
		};

	namespace TOD_MoonParameters {
		constexpr auto MeshSize = 0x10;
		constexpr auto MeshBrightness = 0x14;
		constexpr auto MeshContrast = 0x18;
		constexpr auto HaloSize = 0x1c;
		constexpr auto HaloBrightness = 0x20;
		constexpr auto Position = 0x24;

		constexpr auto ctor = 0x1073540;
		};

	namespace TOD_CloudParameters {
		constexpr auto Size = 0x10;
		constexpr auto Opacity = 0x14;
		constexpr auto Coverage = 0x18;
		constexpr auto Sharpness = 0x1c;
		constexpr auto Coloring = 0x20;
		constexpr auto Attenuation = 0x24;
		constexpr auto Saturation = 0x28;
		constexpr auto Scattering = 0x2c;
		constexpr auto Brightness = 0x30;

		constexpr auto ctor = 0x1070b10;
		};

	namespace TOD_NightParameters {
		constexpr auto MoonColor = 0x10;
		constexpr auto LightColor = 0x18;
		constexpr auto RayColor = 0x20;
		constexpr auto SkyColor = 0x28;
		constexpr auto CloudColor = 0x30;
		constexpr auto FogColor = 0x38;
		constexpr auto AmbientColor = 0x40;
		constexpr auto LightIntensity = 0x48;
		constexpr auto ShadowStrength = 0x4c;
		constexpr auto AmbientMultiplier = 0x50;
		constexpr auto ReflectionMultiplier = 0x54;

		constexpr auto ctor = 0x1073580;
		};

	}


